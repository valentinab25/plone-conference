{"ast":null,"code":"import _map from \"lodash/map\";\nvar __jsx = React.createElement;\n\n/**\n * Messages component.\n * @module components/manage/Messages/Messages\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Message, Container } from 'semantic-ui-react';\nimport { removeMessage } from '@plone/volto/actions';\n/**\n * Messages container class.\n * @class Messages\n * @extends Component\n */\n\nclass Messages extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Messages\n   */\n  constructor(props) {\n    super(props);\n    this.onDismiss = this.onDismiss.bind(this);\n  } // /**\n  //  * Component will receive props\n  //  * @method componentWillReceiveProps\n  //  * @param {Object} nextProps Next properties\n  //  * @returns {undefined}\n  //  */\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.messages.length > this.props.messages.length) {\n  //     window.setTimeout(() => {\n  //       if (this.props.messages.length > 0) {\n  //         this.props.removeMessage(-1);\n  //       }\n  //     }, 6000);\n  //   }\n  // }\n\n  /**\n   * On dismiss\n   * @method onDismiss\n   * @param {Object} event Event object\n   * @param {number} value Index of message\n   * @returns {undefined}\n   */\n\n\n  onDismiss(event, {\n    value\n  }) {\n    this.props.removeMessage(value);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    return this.props.messages && __jsx(Container, {\n      className: \"messages\"\n    }, _map(this.props.messages, (message, index) => __jsx(Message, {\n      key: message.id,\n      value: index,\n      onDismiss: this.onDismiss,\n      error: message.level === 'error',\n      success: message.level === 'success',\n      warning: message.level === 'warning',\n      info: message.level === 'info',\n      header: message.title,\n      content: message.body\n    })));\n  }\n\n}\n\nexport default connect(state => ({\n  messages: state.messages.messages\n}), {\n  removeMessage\n})(Messages);","map":{"version":3,"names":["React","Component","connect","Message","Container","removeMessage","Messages","constructor","props","onDismiss","bind","event","value","render","messages","message","index","id","level","title","body","state"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/Messages/Messages.jsx"],"sourcesContent":["/**\n * Messages component.\n * @module components/manage/Messages/Messages\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Message, Container } from 'semantic-ui-react';\nimport { map } from 'lodash';\n\nimport { removeMessage } from '@plone/volto/actions';\n\n/**\n * Messages container class.\n * @class Messages\n * @extends Component\n */\nclass Messages extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    removeMessage: PropTypes.func.isRequired,\n    messages: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        body: PropTypes.string,\n        level: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Messages\n   */\n  constructor(props) {\n    super(props);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  // /**\n  //  * Component will receive props\n  //  * @method componentWillReceiveProps\n  //  * @param {Object} nextProps Next properties\n  //  * @returns {undefined}\n  //  */\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.messages.length > this.props.messages.length) {\n  //     window.setTimeout(() => {\n  //       if (this.props.messages.length > 0) {\n  //         this.props.removeMessage(-1);\n  //       }\n  //     }, 6000);\n  //   }\n  // }\n\n  /**\n   * On dismiss\n   * @method onDismiss\n   * @param {Object} event Event object\n   * @param {number} value Index of message\n   * @returns {undefined}\n   */\n  onDismiss(event, { value }) {\n    this.props.removeMessage(value);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.messages && (\n        <Container className=\"messages\">\n          {map(this.props.messages, (message, index) => (\n            <Message\n              key={message.id}\n              value={index}\n              onDismiss={this.onDismiss}\n              error={message.level === 'error'}\n              success={message.level === 'success'}\n              warning={message.level === 'warning'}\n              info={message.level === 'info'}\n              header={message.title}\n              content={message.body}\n            />\n          ))}\n        </Container>\n      )\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    messages: state.messages.messages,\n  }),\n  { removeMessage },\n)(Messages);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,mBAAnC;AAGA,SAASC,aAAT,QAA8B,sBAA9B;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;EAC/B;AACF;AACA;AACA;AACA;;EAYE;AACF;AACA;AACA;AACA;AACA;EACEM,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;EACD,CA1B8B,CA4B/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;;;EACED,SAAS,CAACE,KAAD,EAAQ;IAAEC;EAAF,CAAR,EAAmB;IAC1B,KAAKJ,KAAL,CAAWH,aAAX,CAAyBO,KAAzB;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEC,MAAM,GAAG;IACP,OACE,KAAKL,KAAL,CAAWM,QAAX,IACE,MAAC,SAAD;MAAW,SAAS,EAAC;IAArB,GACG,KAAI,KAAKN,KAAL,CAAWM,QAAf,EAAyB,CAACC,OAAD,EAAUC,KAAV,KACxB,MAAC,OAAD;MACE,GAAG,EAAED,OAAO,CAACE,EADf;MAEE,KAAK,EAAED,KAFT;MAGE,SAAS,EAAE,KAAKP,SAHlB;MAIE,KAAK,EAAEM,OAAO,CAACG,KAAR,KAAkB,OAJ3B;MAKE,OAAO,EAAEH,OAAO,CAACG,KAAR,KAAkB,SAL7B;MAME,OAAO,EAAEH,OAAO,CAACG,KAAR,KAAkB,SAN7B;MAOE,IAAI,EAAEH,OAAO,CAACG,KAAR,KAAkB,MAP1B;MAQE,MAAM,EAAEH,OAAO,CAACI,KARlB;MASE,OAAO,EAAEJ,OAAO,CAACK;IATnB,EADD,CADH,CAFJ;EAmBD;;AAhF8B;;AAmFjC,eAAelB,OAAO,CACnBmB,KAAD,KAAY;EACVP,QAAQ,EAAEO,KAAK,CAACP,QAAN,CAAeA;AADf,CAAZ,CADoB,EAIpB;EAAET;AAAF,CAJoB,CAAP,CAKbC,QALa,CAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}