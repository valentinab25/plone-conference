{"ast":null,"code":"var __jsx = React.createElement;\n\n/**\n * Image view component.\n * @module components/theme/View/ImageView\n */\nimport React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\nimport prettybytes from 'pretty-bytes';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n/**\n * Image view component class.\n * @function ImageView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\n\nconst ImageView = ({\n  content\n}) => {\n  var _content$image;\n\n  return __jsx(Container, {\n    className: \"view-wrapper\"\n  }, __jsx(\"h1\", {\n    className: \"documentFirstHeading\"\n  }, content.title, content.subtitle && ` - ${content.subtitle}`), content.description && __jsx(\"p\", {\n    className: \"documentDescription\"\n  }, content.description), (content === null || content === void 0 ? void 0 : (_content$image = content.image) === null || _content$image === void 0 ? void 0 : _content$image.download) && __jsx(\"a\", {\n    href: flattenToAppURL(content.image.download)\n  }, __jsx(\"img\", {\n    alt: content.title,\n    src: flattenToAppURL(content.image.scales.preview.download)\n  }), __jsx(\"figcaption\", null, __jsx(FormattedMessage, {\n    id: \"Size: {size}\",\n    defaultMessage: \"Size: {size}\",\n    values: {\n      size: prettybytes(content.image.size)\n    }\n  }), \"\\xA0 \\u2014 \\xA0\", __jsx(FormattedMessage, {\n    id: \"Click to download full sized image\",\n    defaultMessage: \"Click to download full sized image\"\n  }))));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\nexport default ImageView;","map":{"version":3,"names":["React","Container","FormattedMessage","prettybytes","flattenToAppURL","ImageView","content","title","subtitle","description","image","download","scales","preview","size"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/theme/View/ImageView.jsx"],"sourcesContent":["/**\n * Image view component.\n * @module components/theme/View/ImageView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\nimport prettybytes from 'pretty-bytes';\n\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\n/**\n * Image view component class.\n * @function ImageView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst ImageView = ({ content }) => (\n  <Container className=\"view-wrapper\">\n    <h1 className=\"documentFirstHeading\">\n      {content.title}\n      {content.subtitle && ` - ${content.subtitle}`}\n    </h1>\n    {content.description && (\n      <p className=\"documentDescription\">{content.description}</p>\n    )}\n    {content?.image?.download && (\n      <a href={flattenToAppURL(content.image.download)}>\n        <img\n          alt={content.title}\n          src={flattenToAppURL(content.image.scales.preview.download)}\n        />\n        <figcaption>\n          <FormattedMessage\n            id=\"Size: {size}\"\n            defaultMessage=\"Size: {size}\"\n            values={{ size: prettybytes(content.image.size) }}\n          />\n          &nbsp; &mdash; &nbsp;\n          <FormattedMessage\n            id=\"Click to download full sized image\"\n            defaultMessage=\"Click to download full sized image\"\n          />\n        </figcaption>\n      </a>\n    )}\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nImageView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.shape({\n      scales: PropTypes.shape({\n        preview: PropTypes.shape({\n          download: PropTypes.string,\n        }),\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default ImageView;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,SAASC,eAAT,QAAgC,sBAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,CAAC;EAAEC;AAAF,CAAD;EAAA;;EAAA,OAChB,MAAC,SAAD;IAAW,SAAS,EAAC;EAArB,GACE;IAAI,SAAS,EAAC;EAAd,GACGA,OAAO,CAACC,KADX,EAEGD,OAAO,CAACE,QAAR,IAAqB,MAAKF,OAAO,CAACE,QAAS,EAF9C,CADF,EAKGF,OAAO,CAACG,WAAR,IACC;IAAG,SAAS,EAAC;EAAb,GAAoCH,OAAO,CAACG,WAA5C,CANJ,EAQG,CAAAH,OAAO,SAAP,IAAAA,OAAO,WAAP,8BAAAA,OAAO,CAAEI,KAAT,kEAAgBC,QAAhB,KACC;IAAG,IAAI,EAAEP,eAAe,CAACE,OAAO,CAACI,KAAR,CAAcC,QAAf;EAAxB,GACE;IACE,GAAG,EAAEL,OAAO,CAACC,KADf;IAEE,GAAG,EAAEH,eAAe,CAACE,OAAO,CAACI,KAAR,CAAcE,MAAd,CAAqBC,OAArB,CAA6BF,QAA9B;EAFtB,EADF,EAKE,0BACE,MAAC,gBAAD;IACE,EAAE,EAAC,cADL;IAEE,cAAc,EAAC,cAFjB;IAGE,MAAM,EAAE;MAAEG,IAAI,EAAEX,WAAW,CAACG,OAAO,CAACI,KAAR,CAAcI,IAAf;IAAnB;EAHV,EADF,sBAOE,MAAC,gBAAD;IACE,EAAE,EAAC,oCADL;IAEE,cAAc,EAAC;EAFjB,EAPF,CALF,CATJ,CADgB;AAAA,CAAlB;AAgCA;AACA;AACA;AACA;AACA;;;AAeA,eAAeT,SAAf"},"metadata":{"react-intl":{"messages":[{"id":"Size: {size}","defaultMessage":"Size: {size}"},{"id":"Click to download full sized image","defaultMessage":"Click to download full sized image"}]}},"sourceType":"module"}