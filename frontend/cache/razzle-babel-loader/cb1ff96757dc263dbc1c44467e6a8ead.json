{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Login container.\n * @module components/theme/Sitemap/Sitemap\n */\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Container } from 'semantic-ui-react';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport config from '@plone/volto/registry';\nimport { getNavigation } from '@plone/volto/actions';\nconst messages = defineMessages({\n  Sitemap: {\n    \"id\": \"Sitemap\",\n    \"defaultMessage\": \"Sitemap\"\n  }\n});\n/**\n * Sitemap class.\n * @class Sitemap\n * @extends Component\n */\n\nclass Sitemap extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderItems\", items => {\n      return __jsx(\"ul\", null, items.map(item => {\n        var _item$items;\n\n        return __jsx(\"li\", {\n          key: item.url,\n          className: ((_item$items = item.items) === null || _item$items === void 0 ? void 0 : _item$items.length) > 0 ? 'with-children' : ''\n        }, __jsx(Link, {\n          to: item.url\n        }, item.title), item.items && this.renderItems(item.items));\n      }));\n    });\n  }\n\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  componentDidMount() {\n    const {\n      settings\n    } = config;\n\n    if (settings.isMultilingual) {\n      this.props.getNavigation(`${this.props.lang}`, 4);\n    } else {\n      this.props.getNavigation('', 4);\n    }\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    const {\n      items\n    } = this.props;\n    return __jsx(\"div\", {\n      id: \"page-sitemap\"\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.Sitemap)\n    }), __jsx(Container, {\n      className: \"view-wrapper\"\n    }, __jsx(\"h1\", null, this.props.intl.formatMessage(messages.Sitemap), \" \"), items && this.renderItems(items)));\n  }\n\n}\n\nexport const __test__ = compose(injectIntl, connect(state => ({\n  items: state.navigation.items,\n  lang: state.intl.locale\n}), {\n  getNavigation\n}))(Sitemap);\nexport default compose(injectIntl, connect(state => ({\n  items: state.navigation.items,\n  lang: state.intl.locale\n}), {\n  getNavigation\n}), asyncConnect([{\n  key: 'navigation',\n  promise: ({\n    location,\n    store: {\n      dispatch,\n      getState\n    }\n  }) => {\n    const {\n      settings\n    } = config;\n    const lang = getState().intl.locale;\n\n    if (settings.isMultilingual) {\n      return __SERVER__ && dispatch(getNavigation(`${lang}`, 4));\n    } else {\n      return __SERVER__ && dispatch(getNavigation('', 4));\n    }\n  }\n}]))(Sitemap);","map":{"version":3,"names":["React","Component","compose","connect","asyncConnect","defineMessages","injectIntl","Container","Helmet","Link","config","getNavigation","messages","Sitemap","items","map","item","url","length","title","renderItems","componentDidMount","settings","isMultilingual","props","lang","render","intl","formatMessage","__test__","state","navigation","locale","key","promise","location","store","dispatch","getState","__SERVER__"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/theme/Sitemap/Sitemap.jsx"],"sourcesContent":["/**\n * Login container.\n * @module components/theme/Sitemap/Sitemap\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Container } from 'semantic-ui-react';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport config from '@plone/volto/registry';\n\nimport { getNavigation } from '@plone/volto/actions';\n\nconst messages = defineMessages({\n  Sitemap: {\n    id: 'Sitemap',\n    defaultMessage: 'Sitemap',\n  },\n});\n/**\n * Sitemap class.\n * @class Sitemap\n * @extends Component\n */\nclass Sitemap extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getNavigation: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    const { settings } = config;\n    if (settings.isMultilingual) {\n      this.props.getNavigation(`${this.props.lang}`, 4);\n    } else {\n      this.props.getNavigation('', 4);\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n  renderItems = (items) => {\n    return (\n      <ul>\n        {items.map((item) => (\n          <li\n            key={item.url}\n            className={item.items?.length > 0 ? 'with-children' : ''}\n          >\n            <Link to={item.url}>{item.title}</Link>\n            {item.items && this.renderItems(item.items)}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n  render() {\n    const { items } = this.props;\n    return (\n      <div id=\"page-sitemap\">\n        <Helmet title={this.props.intl.formatMessage(messages.Sitemap)} />\n        <Container className=\"view-wrapper\">\n          <h1>{this.props.intl.formatMessage(messages.Sitemap)} </h1>\n          {items && this.renderItems(items)}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport const __test__ = compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      items: state.navigation.items,\n      lang: state.intl.locale,\n    }),\n    { getNavigation },\n  ),\n)(Sitemap);\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      items: state.navigation.items,\n      lang: state.intl.locale,\n    }),\n    { getNavigation },\n  ),\n  asyncConnect([\n    {\n      key: 'navigation',\n      promise: ({ location, store: { dispatch, getState } }) => {\n        const { settings } = config;\n        const lang = getState().intl.locale;\n        if (settings.isMultilingual) {\n          return __SERVER__ && dispatch(getNavigation(`${lang}`, 4));\n        } else {\n          return __SERVER__ && dispatch(getNavigation('', 4));\n        }\n      },\n    },\n  ]),\n)(Sitemap);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Sitemap","defaultMessage":"Sitemap"}]}},"sourceType":"module"}