{"ast":null,"code":"import _extends from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar __jsx = React.createElement;\n\n/**\n * EventView view component.\n * @module components/theme/View/EventView\n */\nimport React from 'react';\nimport { hasBlocksData, flattenHTMLToAppURL } from '@plone/volto/helpers';\nimport { Image, Grid } from 'semantic-ui-react';\nimport RenderBlocks from '@plone/volto/components/theme/View/RenderBlocks';\nimport { EventDetails } from '@plone/volto/components';\n\nconst EventTextfieldView = _ref => {\n  let {\n    content\n  } = _ref;\n  return __jsx(React.Fragment, null, content.title && __jsx(\"h1\", {\n    className: \"documentFirstHeading\"\n  }, content.title), content.description && __jsx(\"p\", {\n    className: \"documentDescription\"\n  }, content.description), content.image && __jsx(Image, {\n    className: \"document-image\",\n    src: content.image.scales.thumb.download,\n    floated: \"right\"\n  }), content.text && __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: flattenHTMLToAppURL(content.text.data)\n    }\n  }));\n};\n/**\n * EventView view component class.\n * @function EventView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\n\n\nconst EventView = props => {\n  const {\n    content\n  } = props;\n  return __jsx(\"div\", {\n    id: \"page-document\",\n    className: \"ui container viewwrapper event-view\"\n  }, __jsx(Grid, null, __jsx(Grid.Column, {\n    width: 7,\n    className: \"mobile hidden\"\n  }, hasBlocksData(content) ? __jsx(RenderBlocks, props) : __jsx(EventTextfieldView, props)), __jsx(Grid.Column, {\n    width: 5,\n    className: \"mobile hidden\"\n  }, __jsx(EventDetails, {\n    content: content\n  })), __jsx(Grid.Column, {\n    width: 12,\n    only: \"mobile\"\n  }, hasBlocksData(content) ? __jsx(React.Fragment, null, __jsx(RenderBlocks, _extends({}, props, {\n    content: _objectSpread(_objectSpread({}, content), {}, {\n      blocks_layout: {\n        items: props.content.blocks_layout.items.slice(0, 1)\n      }\n    })\n  })), __jsx(EventDetails, {\n    content: content,\n    display_as: \"div\"\n  }), __jsx(RenderBlocks, _extends({}, props, {\n    content: _objectSpread(_objectSpread({}, content), {}, {\n      blocks_layout: {\n        items: props.content.blocks_layout.items.slice(1)\n      }\n    })\n  }))) : __jsx(EventTextfieldView, props))));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\nexport default EventView;","map":{"version":3,"names":["React","hasBlocksData","flattenHTMLToAppURL","Image","Grid","RenderBlocks","EventDetails","EventTextfieldView","content","title","description","image","scales","thumb","download","text","__html","data","EventView","props","blocks_layout","items","slice"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/theme/View/EventView.jsx"],"sourcesContent":["/**\n * EventView view component.\n * @module components/theme/View/EventView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { hasBlocksData, flattenHTMLToAppURL } from '@plone/volto/helpers';\nimport { Image, Grid } from 'semantic-ui-react';\nimport RenderBlocks from '@plone/volto/components/theme/View/RenderBlocks';\nimport { EventDetails } from '@plone/volto/components';\n\nconst EventTextfieldView = ({ content }) => (\n  <React.Fragment>\n    {content.title && <h1 className=\"documentFirstHeading\">{content.title}</h1>}\n    {content.description && (\n      <p className=\"documentDescription\">{content.description}</p>\n    )}\n    {content.image && (\n      <Image\n        className=\"document-image\"\n        src={content.image.scales.thumb.download}\n        floated=\"right\"\n      />\n    )}\n    {content.text && (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: flattenHTMLToAppURL(content.text.data),\n        }}\n      />\n    )}\n  </React.Fragment>\n);\n\n/**\n * EventView view component class.\n * @function EventView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst EventView = (props) => {\n  const { content } = props;\n\n  return (\n    <div id=\"page-document\" className=\"ui container viewwrapper event-view\">\n      <Grid>\n        <Grid.Column width={7} className=\"mobile hidden\">\n          {hasBlocksData(content) ? (\n            <RenderBlocks {...props} />\n          ) : (\n            <EventTextfieldView {...props} />\n          )}\n        </Grid.Column>\n        <Grid.Column width={5} className=\"mobile hidden\">\n          <EventDetails content={content} />\n        </Grid.Column>\n        <Grid.Column width={12} only=\"mobile\">\n          {hasBlocksData(content) ? (\n            <>\n              <RenderBlocks\n                {...props}\n                content={{\n                  ...content,\n                  blocks_layout: {\n                    items: props.content.blocks_layout.items.slice(0, 1),\n                  },\n                }}\n              />\n              <EventDetails content={content} display_as=\"div\" />\n              <RenderBlocks\n                {...props}\n                content={{\n                  ...content,\n                  blocks_layout: {\n                    items: props.content.blocks_layout.items.slice(1),\n                  },\n                }}\n              />\n            </>\n          ) : (\n            <EventTextfieldView {...props} />\n          )}\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nEventView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    text: PropTypes.shape({\n      data: PropTypes.string,\n    }),\n    attendees: PropTypes.arrayOf(PropTypes.string).isRequired,\n    contact_email: PropTypes.string,\n    contact_name: PropTypes.string,\n    contact_phone: PropTypes.string,\n    end: PropTypes.string.isRequired,\n    event_url: PropTypes.string,\n    location: PropTypes.string,\n    open_end: PropTypes.bool,\n    recurrence: PropTypes.any,\n    start: PropTypes.string.isRequired,\n    subjects: PropTypes.arrayOf(PropTypes.string).isRequired,\n    whole_day: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default EventView;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,sBAAnD;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AACA,SAASC,YAAT,QAA6B,yBAA7B;;AAEA,MAAMC,kBAAkB,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OACzB,MAAC,KAAD,CAAO,QAAP,QACGA,OAAO,CAACC,KAAR,IAAiB;IAAI,SAAS,EAAC;EAAd,GAAsCD,OAAO,CAACC,KAA9C,CADpB,EAEGD,OAAO,CAACE,WAAR,IACC;IAAG,SAAS,EAAC;EAAb,GAAoCF,OAAO,CAACE,WAA5C,CAHJ,EAKGF,OAAO,CAACG,KAAR,IACC,MAAC,KAAD;IACE,SAAS,EAAC,gBADZ;IAEE,GAAG,EAAEH,OAAO,CAACG,KAAR,CAAcC,MAAd,CAAqBC,KAArB,CAA2BC,QAFlC;IAGE,OAAO,EAAC;EAHV,EANJ,EAYGN,OAAO,CAACO,IAAR,IACC;IACE,uBAAuB,EAAE;MACvBC,MAAM,EAAEd,mBAAmB,CAACM,OAAO,CAACO,IAAR,CAAaE,IAAd;IADJ;EAD3B,EAbJ,CADyB;AAAA,CAA3B;AAuBA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAC3B,MAAM;IAAEX;EAAF,IAAcW,KAApB;EAEA,OACE;IAAK,EAAE,EAAC,eAAR;IAAwB,SAAS,EAAC;EAAlC,GACE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,MAAN;IAAa,KAAK,EAAE,CAApB;IAAuB,SAAS,EAAC;EAAjC,GACGlB,aAAa,CAACO,OAAD,CAAb,GACC,MAAC,YAAD,EAAkBW,KAAlB,CADD,GAGC,MAAC,kBAAD,EAAwBA,KAAxB,CAJJ,CADF,EAQE,MAAC,IAAD,CAAM,MAAN;IAAa,KAAK,EAAE,CAApB;IAAuB,SAAS,EAAC;EAAjC,GACE,MAAC,YAAD;IAAc,OAAO,EAAEX;EAAvB,EADF,CARF,EAWE,MAAC,IAAD,CAAM,MAAN;IAAa,KAAK,EAAE,EAApB;IAAwB,IAAI,EAAC;EAA7B,GACGP,aAAa,CAACO,OAAD,CAAb,GACC,4BACE,MAAC,YAAD,eACMW,KADN;IAEE,OAAO,kCACFX,OADE;MAELY,aAAa,EAAE;QACbC,KAAK,EAAEF,KAAK,CAACX,OAAN,CAAcY,aAAd,CAA4BC,KAA5B,CAAkCC,KAAlC,CAAwC,CAAxC,EAA2C,CAA3C;MADM;IAFV;EAFT,GADF,EAUE,MAAC,YAAD;IAAc,OAAO,EAAEd,OAAvB;IAAgC,UAAU,EAAC;EAA3C,EAVF,EAWE,MAAC,YAAD,eACMW,KADN;IAEE,OAAO,kCACFX,OADE;MAELY,aAAa,EAAE;QACbC,KAAK,EAAEF,KAAK,CAACX,OAAN,CAAcY,aAAd,CAA4BC,KAA5B,CAAkCC,KAAlC,CAAwC,CAAxC;MADM;IAFV;EAFT,GAXF,CADD,GAuBC,MAAC,kBAAD,EAAwBH,KAAxB,CAxBJ,CAXF,CADF,CADF;AA2CD,CA9CD;AAgDA;AACA;AACA;AACA;AACA;;;AAuBA,eAAeD,SAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}