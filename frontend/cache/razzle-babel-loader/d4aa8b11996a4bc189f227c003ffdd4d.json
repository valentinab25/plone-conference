{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Users controlpanel groups.\n * @module components/manage/Controlpanels/UsersControlpanelGroups\n */\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { Icon } from '@plone/volto/components';\n/**\n * UsersControlpanelGroups class.\n * @class UsersControlpanelGroups\n * @extends Component\n */\n\nclass RenderGroups extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"isAuthGroup\", roleId => {\n      return this.props.inheritedRole.includes(roleId);\n    });\n\n    this.onChange = this.onChange.bind(this);\n  }\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n\n\n  onChange(event, {\n    value\n  }) {\n    const [group, role] = value.split('.');\n    this.props.updateGroups(group, role);\n  }\n  /**\n   *@param {*}\n   *@returns {Boolean}\n   *@memberof RenderGroups\n   */\n\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(Table.Row, {\n      key: this.props.group.title\n    }, __jsx(Table.Cell, null, this.props.group.groupname), this.props.roles.map(role => __jsx(Table.Cell, {\n      key: role.id\n    }, this.props.inheritedRole && this.props.inheritedRole.includes(role.id) && this.props.group.roles.includes('Authenticated') ? __jsx(Icon, {\n      name: ploneSVG,\n      size: \"20px\",\n      color: \"#007EB1\",\n      title: 'plone-svg'\n    }) : __jsx(Checkbox, {\n      checked: this.props.group.id === 'AuthenticatedUsers' ? this.isAuthGroup(role.id) : this.props.group.roles.includes(role.id),\n      onChange: this.onChange,\n      value: `${this.props.group.id}.${role.id}`\n    }))), __jsx(Table.Cell, {\n      textAlign: \"right\"\n    }, __jsx(Dropdown, {\n      icon: \"ellipsis horizontal\"\n    }, __jsx(Dropdown.Menu, {\n      className: \"left\"\n    }, __jsx(Dropdown.Item, {\n      onClick: this.props.onDelete,\n      value: this.props.group['@id']\n    }, __jsx(Icon, {\n      name: trashSVG,\n      size: \"15px\"\n    }), __jsx(FormattedMessage, {\n      id: \"Delete\",\n      defaultMessage: \"Delete\"\n    }))))));\n  }\n\n}\n\nexport default injectIntl(RenderGroups);","map":{"version":3,"names":["React","Component","FormattedMessage","injectIntl","Dropdown","Table","Checkbox","trashSVG","ploneSVG","Icon","RenderGroups","constructor","props","roleId","inheritedRole","includes","onChange","bind","event","value","group","role","split","updateGroups","render","title","groupname","roles","map","id","isAuthGroup","onDelete"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Groups/RenderGroups.jsx"],"sourcesContent":["/**\n * Users controlpanel groups.\n * @module components/manage/Controlpanels/UsersControlpanelGroups\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { Icon } from '@plone/volto/components';\n\n/**\n * UsersControlpanelGroups class.\n * @class UsersControlpanelGroups\n * @extends Component\n */\nclass RenderGroups extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    //single group\n    group: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      email: PropTypes.string,\n      groupname: PropTypes.string,\n      roles: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    inheritedRole: PropTypes.array,\n    onDelete: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n  onChange(event, { value }) {\n    const [group, role] = value.split('.');\n    this.props.updateGroups(group, role);\n  }\n\n  /**\n   *@param {*}\n   *@returns {Boolean}\n   *@memberof RenderGroups\n   */\n  isAuthGroup = (roleId) => {\n    return this.props.inheritedRole.includes(roleId);\n  };\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Table.Row key={this.props.group.title}>\n        <Table.Cell>{this.props.group.groupname}</Table.Cell>\n        {this.props.roles.map((role) => (\n          <Table.Cell key={role.id}>\n            {this.props.inheritedRole &&\n            this.props.inheritedRole.includes(role.id) &&\n            this.props.group.roles.includes('Authenticated') ? (\n              <Icon\n                name={ploneSVG}\n                size=\"20px\"\n                color=\"#007EB1\"\n                title={'plone-svg'}\n              />\n            ) : (\n              <Checkbox\n                checked={\n                  this.props.group.id === 'AuthenticatedUsers'\n                    ? this.isAuthGroup(role.id)\n                    : this.props.group.roles.includes(role.id)\n                }\n                onChange={this.onChange}\n                value={`${this.props.group.id}.${role.id}`}\n              />\n            )}\n          </Table.Cell>\n        ))}\n        <Table.Cell textAlign=\"right\">\n          <Dropdown icon=\"ellipsis horizontal\">\n            <Dropdown.Menu className=\"left\">\n              <Dropdown.Item\n                onClick={this.props.onDelete}\n                value={this.props.group['@id']}\n              >\n                <Icon name={trashSVG} size=\"15px\" />\n                <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nexport default injectIntl(RenderGroups);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Delete","defaultMessage":"Delete"}]}},"sourceType":"module"}