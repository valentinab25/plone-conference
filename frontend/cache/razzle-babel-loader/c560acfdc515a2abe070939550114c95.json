{"ast":null,"code":"import _objectSpread from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nconst _excluded = [\"href\"];\nimport { createInstance } from '@datapunt/matomo-tracker-react';\nimport config from '@plone/volto/registry';\n/**\n * NOTE: this file exposes just a part of the Matomo React API. If you wish to\n * extend this file or to understand it better, this link may be helpful:\n * https://github.com/Amsterdam/matomo-tracker/tree/master/packages/react\n */\n\nconst _matomo = {};\n\nconst doWithMatomo = fn => {\n  if (__CLIENT__) {\n    if (!_matomo.instance) {\n      var _window$env, _window$env2;\n\n      const siteId = ((_window$env = window.env) === null || _window$env === void 0 ? void 0 : _window$env.RAZZLE_MATOMO_SITE_ID) || config.settings.matomoSiteId;\n      const urlBase = ((_window$env2 = window.env) === null || _window$env2 === void 0 ? void 0 : _window$env2.RAZZLE_MATOMO_URL) || config.settings.matomoUrlBase || 'https://matomo.eea.europa.eu/';\n\n      if (siteId) {\n        _matomo.instance = createInstance({\n          urlBase,\n          siteId\n        });\n      } else {\n        /* eslint-disable-next-line */\n        console.warn('Matomo SiteID is not defined, page actions will not be tracked');\n      }\n    }\n\n    if (_matomo.instance) fn(_matomo.instance);\n  }\n};\n\nexport const trackPageView = _ref => {\n  let {\n    href\n  } = _ref,\n      options = _objectWithoutProperties(_ref, _excluded);\n\n  doWithMatomo(m => {\n    m.trackPageView(_objectSpread({\n      href\n    }, options));\n  });\n};\nexport const trackEvent = options => {\n  doWithMatomo(m => {\n    m.trackEvent(options);\n  });\n};\nexport const trackSiteSearch = options => {\n  doWithMatomo(m => {\n    m.trackSiteSearch(options);\n  });\n};\nexport const trackLink = options => {\n  doWithMatomo(m => {\n    m.trackLink(options);\n  });\n};\nexport const pushInstruction = function (name) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  doWithMatomo(m => {\n    m.pushInstruction(name, ...args);\n  });\n};","map":{"version":3,"names":["createInstance","config","_matomo","doWithMatomo","fn","__CLIENT__","instance","siteId","window","env","RAZZLE_MATOMO_SITE_ID","settings","matomoSiteId","urlBase","RAZZLE_MATOMO_URL","matomoUrlBase","console","warn","trackPageView","href","options","m","trackEvent","trackSiteSearch","trackLink","pushInstruction","name","args"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@eeacms/volto-matomo/src/utils.js"],"sourcesContent":["import { createInstance } from '@datapunt/matomo-tracker-react';\nimport config from '@plone/volto/registry';\n\n/**\n * NOTE: this file exposes just a part of the Matomo React API. If you wish to\n * extend this file or to understand it better, this link may be helpful:\n * https://github.com/Amsterdam/matomo-tracker/tree/master/packages/react\n */\n\nconst _matomo = {};\n\nconst doWithMatomo = (fn) => {\n  if (__CLIENT__) {\n    if (!_matomo.instance) {\n      const siteId =\n        window.env?.RAZZLE_MATOMO_SITE_ID || config.settings.matomoSiteId;\n\n      const urlBase =\n        window.env?.RAZZLE_MATOMO_URL ||\n        config.settings.matomoUrlBase ||\n        'https://matomo.eea.europa.eu/';\n\n      if (siteId) {\n        _matomo.instance = createInstance({\n          urlBase,\n          siteId,\n        });\n      } else {\n        /* eslint-disable-next-line */\n        console.warn(\n          'Matomo SiteID is not defined, page actions will not be tracked',\n        );\n      }\n    }\n\n    if (_matomo.instance) fn(_matomo.instance);\n  }\n};\n\nexport const trackPageView = ({ href, ...options }) => {\n  doWithMatomo((m) => {\n    m.trackPageView({\n      href,\n      ...options,\n    });\n  });\n};\n\nexport const trackEvent = (options) => {\n  doWithMatomo((m) => {\n    m.trackEvent(options);\n  });\n};\n\nexport const trackSiteSearch = (options) => {\n  doWithMatomo((m) => {\n    m.trackSiteSearch(options);\n  });\n};\n\nexport const trackLink = (options) => {\n  doWithMatomo((m) => {\n    m.trackLink(options);\n  });\n};\n\nexport const pushInstruction = (name, ...args) => {\n  doWithMatomo((m) => {\n    m.pushInstruction(name, ...args);\n  });\n};\n"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,gCAA/B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,EAAhB;;AAEA,MAAMC,YAAY,GAAIC,EAAD,IAAQ;EAC3B,IAAIC,UAAJ,EAAgB;IACd,IAAI,CAACH,OAAO,CAACI,QAAb,EAAuB;MAAA;;MACrB,MAAMC,MAAM,GACV,gBAAAC,MAAM,CAACC,GAAP,4DAAYC,qBAAZ,KAAqCT,MAAM,CAACU,QAAP,CAAgBC,YADvD;MAGA,MAAMC,OAAO,GACX,iBAAAL,MAAM,CAACC,GAAP,8DAAYK,iBAAZ,KACAb,MAAM,CAACU,QAAP,CAAgBI,aADhB,IAEA,+BAHF;;MAKA,IAAIR,MAAJ,EAAY;QACVL,OAAO,CAACI,QAAR,GAAmBN,cAAc,CAAC;UAChCa,OADgC;UAEhCN;QAFgC,CAAD,CAAjC;MAID,CALD,MAKO;QACL;QACAS,OAAO,CAACC,IAAR,CACE,gEADF;MAGD;IACF;;IAED,IAAIf,OAAO,CAACI,QAAZ,EAAsBF,EAAE,CAACF,OAAO,CAACI,QAAT,CAAF;EACvB;AACF,CA1BD;;AA4BA,OAAO,MAAMY,aAAa,GAAG,QAA0B;EAAA,IAAzB;IAAEC;EAAF,CAAyB;EAAA,IAAdC,OAAc;;EACrDjB,YAAY,CAAEkB,CAAD,IAAO;IAClBA,CAAC,CAACH,aAAF;MACEC;IADF,GAEKC,OAFL;EAID,CALW,CAAZ;AAMD,CAPM;AASP,OAAO,MAAME,UAAU,GAAIF,OAAD,IAAa;EACrCjB,YAAY,CAAEkB,CAAD,IAAO;IAClBA,CAAC,CAACC,UAAF,CAAaF,OAAb;EACD,CAFW,CAAZ;AAGD,CAJM;AAMP,OAAO,MAAMG,eAAe,GAAIH,OAAD,IAAa;EAC1CjB,YAAY,CAAEkB,CAAD,IAAO;IAClBA,CAAC,CAACE,eAAF,CAAkBH,OAAlB;EACD,CAFW,CAAZ;AAGD,CAJM;AAMP,OAAO,MAAMI,SAAS,GAAIJ,OAAD,IAAa;EACpCjB,YAAY,CAAEkB,CAAD,IAAO;IAClBA,CAAC,CAACG,SAAF,CAAYJ,OAAZ;EACD,CAFW,CAAZ;AAGD,CAJM;AAMP,OAAO,MAAMK,eAAe,GAAG,UAACC,IAAD,EAAmB;EAAA,kCAATC,IAAS;IAATA,IAAS;EAAA;;EAChDxB,YAAY,CAAEkB,CAAD,IAAO;IAClBA,CAAC,CAACI,eAAF,CAAkBC,IAAlB,EAAwB,GAAGC,IAA3B;EACD,CAFW,CAAZ;AAGD,CAJM"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}