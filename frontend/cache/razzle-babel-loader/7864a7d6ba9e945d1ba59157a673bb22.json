{"ast":null,"code":"import { useEffect, useRef } from 'react';\nexport default function useTraceUpdate(props) {\n  const prev = useRef(props);\n  useEffect(() => {\n    const changedProps = Object.entries(props).reduce((ps, [k, v]) => {\n      if (prev.current[k] !== v) {\n        ps[k] = [prev.current[k], v];\n      }\n\n      return ps;\n    }, {});\n\n    if (Object.keys(changedProps).length > 0) {\n      /* eslint-disable no-console */\n      console.log('Changed props:', changedProps);\n    }\n\n    prev.current = props;\n  });\n}","map":{"version":3,"names":["useEffect","useRef","useTraceUpdate","props","prev","changedProps","Object","entries","reduce","ps","k","v","current","keys","length","console","log"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-blocks-grid/src/helpers/useTraceUpdate/useTraceUpdate.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport default function useTraceUpdate(props) {\n  const prev = useRef(props);\n  useEffect(() => {\n    const changedProps = Object.entries(props).reduce((ps, [k, v]) => {\n      if (prev.current[k] !== v) {\n        ps[k] = [prev.current[k], v];\n      }\n      return ps;\n    }, {});\n    if (Object.keys(changedProps).length > 0) {\n      /* eslint-disable no-console */\n      console.log('Changed props:', changedProps);\n    }\n    prev.current = props;\n  });\n}\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAC5C,MAAMC,IAAI,GAAGH,MAAM,CAACE,KAAD,CAAnB;EACAH,SAAS,CAAC,MAAM;IACd,MAAMK,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAeJ,KAAf,EAAsBK,MAAtB,CAA6B,CAACC,EAAD,EAAK,CAACC,CAAD,EAAIC,CAAJ,CAAL,KAAgB;MAChE,IAAIP,IAAI,CAACQ,OAAL,CAAaF,CAAb,MAAoBC,CAAxB,EAA2B;QACzBF,EAAE,CAACC,CAAD,CAAF,GAAQ,CAACN,IAAI,CAACQ,OAAL,CAAaF,CAAb,CAAD,EAAkBC,CAAlB,CAAR;MACD;;MACD,OAAOF,EAAP;IACD,CALoB,EAKlB,EALkB,CAArB;;IAMA,IAAIH,MAAM,CAACO,IAAP,CAAYR,YAAZ,EAA0BS,MAA1B,GAAmC,CAAvC,EAA0C;MACxC;MACAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BX,YAA9B;IACD;;IACDD,IAAI,CAACQ,OAAL,GAAeT,KAAf;EACD,CAZQ,CAAT;AAaD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}