{"ast":null,"code":"var __jsx = React.createElement;\n\n/**\n * Login container.\n * @module components/Login/Login\n */\nimport React, { useEffect, useState } from 'react';\nimport { authomaticRedirect, listAuthOptions } from '../../actions';\nimport { injectIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport LoginForm from './LoginForm';\n/**\n * Login function.\n * @function Login\n * @returns {JSX.Element} Markup of the Login page.\n */\n\nfunction Login({\n  intl\n}) {\n  const dispatch = useDispatch();\n  const {\n    0: startedOAuth,\n    1: setStartedOAuth\n  } = useState(false);\n  const loading = useSelector(state => state.authOptions.loading);\n  const options = useSelector(state => state.authOptions.options);\n  const loginValues = useSelector(state => state.authomaticRedirect);\n  useEffect(() => {\n    dispatch(listAuthOptions());\n  }, [dispatch]);\n  useEffect(() => {\n    const next_url = loginValues.next_url;\n    const session = loginValues.session;\n\n    if (next_url && session && startedOAuth) {\n      setStartedOAuth(false); // Give time to save state to localstorage\n\n      setTimeout(function () {\n        window.location.href = next_url;\n      }, 500);\n    }\n  }, [startedOAuth, loginValues]);\n\n  const onSelectProvider = provider => {\n    setStartedOAuth(true);\n    dispatch(authomaticRedirect(provider.id));\n  };\n\n  return __jsx(LoginForm, {\n    loading: loading,\n    providers: options,\n    action: 'login',\n    onSelectProvider: onSelectProvider\n  });\n}\n\nexport default injectIntl(Login);","map":{"version":3,"names":["React","useEffect","useState","authomaticRedirect","listAuthOptions","injectIntl","useSelector","useDispatch","LoginForm","Login","intl","dispatch","startedOAuth","setStartedOAuth","loading","state","authOptions","options","loginValues","next_url","session","setTimeout","window","location","href","onSelectProvider","provider","id"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone-collective/volto-authomatic/src/components/Login/Login.jsx"],"sourcesContent":["/**\n * Login container.\n * @module components/Login/Login\n */\nimport React, { useEffect, useState } from 'react';\nimport { authomaticRedirect, listAuthOptions } from '../../actions';\nimport { injectIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport LoginForm from './LoginForm';\n\n/**\n * Login function.\n * @function Login\n * @returns {JSX.Element} Markup of the Login page.\n */\nfunction Login({ intl }) {\n  const dispatch = useDispatch();\n  const [startedOAuth, setStartedOAuth] = useState(false);\n  const loading = useSelector((state) => state.authOptions.loading);\n  const options = useSelector((state) => state.authOptions.options);\n  const loginValues = useSelector((state) => state.authomaticRedirect);\n\n  useEffect(() => {\n    dispatch(listAuthOptions());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const next_url = loginValues.next_url;\n    const session = loginValues.session;\n    if (next_url && session && startedOAuth) {\n      setStartedOAuth(false);\n      // Give time to save state to localstorage\n      setTimeout(function () {\n        window.location.href = next_url;\n      }, 500);\n    }\n  }, [startedOAuth, loginValues]);\n\n  const onSelectProvider = (provider) => {\n    setStartedOAuth(true);\n    dispatch(authomaticRedirect(provider.id));\n  };\n\n  return (\n    <LoginForm\n      loading={loading}\n      providers={options}\n      action={'login'}\n      onSelectProvider={onSelectProvider}\n    />\n  );\n}\n\nexport default injectIntl(Login);\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,eAApD;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAe;EAAEC;AAAF,CAAf,EAAyB;EACvB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAM;IAAA,GAACK,YAAD;IAAA,GAAeC;EAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAMY,OAAO,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,OAA9B,CAA3B;EACA,MAAMG,OAAO,GAAGX,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBC,OAA9B,CAA3B;EACA,MAAMC,WAAW,GAAGZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACZ,kBAAlB,CAA/B;EAEAF,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACP,eAAe,EAAhB,CAAR;EACD,CAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;EAIAV,SAAS,CAAC,MAAM;IACd,MAAMkB,QAAQ,GAAGD,WAAW,CAACC,QAA7B;IACA,MAAMC,OAAO,GAAGF,WAAW,CAACE,OAA5B;;IACA,IAAID,QAAQ,IAAIC,OAAZ,IAAuBR,YAA3B,EAAyC;MACvCC,eAAe,CAAC,KAAD,CAAf,CADuC,CAEvC;;MACAQ,UAAU,CAAC,YAAY;QACrBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBL,QAAvB;MACD,CAFS,EAEP,GAFO,CAAV;IAGD;EACF,CAVQ,EAUN,CAACP,YAAD,EAAeM,WAAf,CAVM,CAAT;;EAYA,MAAMO,gBAAgB,GAAIC,QAAD,IAAc;IACrCb,eAAe,CAAC,IAAD,CAAf;IACAF,QAAQ,CAACR,kBAAkB,CAACuB,QAAQ,CAACC,EAAV,CAAnB,CAAR;EACD,CAHD;;EAKA,OACE,MAAC,SAAD;IACE,OAAO,EAAEb,OADX;IAEE,SAAS,EAAEG,OAFb;IAGE,MAAM,EAAE,OAHV;IAIE,gBAAgB,EAAEQ;EAJpB,EADF;AAQD;;AAED,eAAepB,UAAU,CAACI,KAAD,CAAzB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}