{"ast":null,"code":"var __jsx = React.createElement;\n\n/**\n * Document view component.\n * @module components/theme/View/ListingView\n */\nimport React from 'react';\nimport { Segment, Container } from 'semantic-ui-react';\nimport { UniversalLink, PreviewImage } from '@plone/volto/components';\n/**\n * List view component class.\n * @function ListingView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\n\nconst ListingView = ({\n  content\n}) => __jsx(Container, {\n  id: \"page-home\"\n}, __jsx(\"section\", {\n  id: \"content-core\"\n}, content.items.map(item => __jsx(Segment, {\n  key: item.url,\n  className: \"listing-item\"\n}, __jsx(Container, null, __jsx(\"h2\", null, __jsx(UniversalLink, {\n  item: item,\n  title: item['@type']\n}, item.title)), item.description && __jsx(\"p\", null, item.description)), item.image_field && __jsx(PreviewImage, {\n  item: item,\n  size: \"thumb\",\n  alt: item.image_caption ? item.image_caption : item.title,\n  className: \"ui image\"\n})))));\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\nexport default ListingView;","map":{"version":3,"names":["React","Segment","Container","UniversalLink","PreviewImage","ListingView","content","items","map","item","url","title","description","image_field","image_caption"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/theme/View/ListingView.jsx"],"sourcesContent":["/**\n * Document view component.\n * @module components/theme/View/ListingView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Container } from 'semantic-ui-react';\nimport { UniversalLink, PreviewImage } from '@plone/volto/components';\n\n/**\n * List view component class.\n * @function ListingView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst ListingView = ({ content }) => (\n  <Container id=\"page-home\">\n    <section id=\"content-core\">\n      {content.items.map((item) => (\n        <Segment key={item.url} className=\"listing-item\">\n          <Container>\n            <h2>\n              <UniversalLink item={item} title={item['@type']}>\n                {item.title}\n              </UniversalLink>\n            </h2>\n            {item.description && <p>{item.description}</p>}\n          </Container>\n          {item.image_field && (\n            <PreviewImage\n              item={item}\n              size=\"thumb\"\n              alt={item.image_caption ? item.image_caption : item.title}\n              className=\"ui image\"\n            />\n          )}\n        </Segment>\n      ))}\n    </section>\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nListingView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        description: PropTypes.string,\n        review_state: PropTypes.string,\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default ListingView;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,mBAAnC;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,yBAA5C;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAF,CAAD,KAClB,MAAC,SAAD;EAAW,EAAE,EAAC;AAAd,GACE;EAAS,EAAE,EAAC;AAAZ,GACGA,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAmBC,IAAD,IACjB,MAAC,OAAD;EAAS,GAAG,EAAEA,IAAI,CAACC,GAAnB;EAAwB,SAAS,EAAC;AAAlC,GACE,MAAC,SAAD,QACE,kBACE,MAAC,aAAD;EAAe,IAAI,EAAED,IAArB;EAA2B,KAAK,EAAEA,IAAI,CAAC,OAAD;AAAtC,GACGA,IAAI,CAACE,KADR,CADF,CADF,EAMGF,IAAI,CAACG,WAAL,IAAoB,iBAAIH,IAAI,CAACG,WAAT,CANvB,CADF,EASGH,IAAI,CAACI,WAAL,IACC,MAAC,YAAD;EACE,IAAI,EAAEJ,IADR;EAEE,IAAI,EAAC,OAFP;EAGE,GAAG,EAAEA,IAAI,CAACK,aAAL,GAAqBL,IAAI,CAACK,aAA1B,GAA0CL,IAAI,CAACE,KAHtD;EAIE,SAAS,EAAC;AAJZ,EAVJ,CADD,CADH,CADF,CADF;AA2BA;AACA;AACA;AACA;AACA;;;AAkBA,eAAeN,WAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}