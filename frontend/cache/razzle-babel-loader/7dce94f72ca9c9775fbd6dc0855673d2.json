{"ast":null,"code":"import { defineMessages } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { mergeSchemas } from '../helpers';\nconst messages = defineMessages({\n  Source: {\n    \"id\": \"Source\",\n    \"defaultMessage\": \"Source\"\n  },\n  Slider: {\n    \"id\": \"Slider\",\n    \"defaultMessage\": \"Slider\"\n  },\n  title: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  description: {\n    \"id\": \"Description\",\n    \"defaultMessage\": \"Description\"\n  },\n  imageOverride: {\n    \"id\": \"Image override\",\n    \"defaultMessage\": \"Image override\"\n  },\n  item: {\n    \"id\": \"Item\",\n    \"defaultMessage\": \"Item\"\n  },\n  items: {\n    \"id\": \"Items\",\n    \"defaultMessage\": \"Items\"\n  },\n  addItem: {\n    \"id\": \"Add item\",\n    \"defaultMessage\": \"Add item\"\n  },\n  head_title: {\n    \"id\": \"Headtitle\",\n    \"defaultMessage\": \"Headtitle\"\n  }\n});\nexport const itemSchema = props => {\n  var _config$blocks$blocks;\n\n  return mergeSchemas({\n    title: props.intl.formatMessage(messages.item),\n    addMessage: props.intl.formatMessage(messages.addItem),\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['href', 'head_title', 'title', 'description', 'preview_image']\n    }],\n    properties: {\n      href: {\n        title: props.intl.formatMessage(messages.Source),\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: ['Title', 'Description', 'hasPreviewImage', 'head_title'],\n        allowExternals: true\n      },\n      head_title: {\n        title: props.intl.formatMessage(messages.head_title)\n      },\n      title: {\n        title: props.intl.formatMessage(messages.title)\n      },\n      description: {\n        title: props.intl.formatMessage(messages.description)\n      },\n      preview_image: {\n        title: props.intl.formatMessage(messages.imageOverride),\n        widget: 'object_browser',\n        mode: 'image',\n        allowExternals: true\n      }\n    },\n    required: []\n  }, ((_config$blocks$blocks = config.blocks.blocksConfig.slider.extensions) === null || _config$blocks$blocks === void 0 ? void 0 : _config$blocks$blocks.slideSchema) || {});\n};\nexport const SliderSchema = props => {\n  var _config$blocks$blocks2;\n\n  return mergeSchemas({\n    title: props.intl.formatMessage(messages.Slider),\n    block: 'slider',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['slides']\n    }],\n    properties: {\n      slides: {\n        widget: 'slider_object_list',\n        title: props.intl.formatMessage(messages.items),\n        schema: itemSchema(props)\n      }\n    },\n    required: []\n  }, ((_config$blocks$blocks2 = config.blocks.blocksConfig.slider.extensions) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.blockSchema) || {});\n};","map":{"version":3,"names":["defineMessages","config","mergeSchemas","messages","Source","Slider","title","description","imageOverride","item","items","addItem","head_title","itemSchema","props","intl","formatMessage","addMessage","fieldsets","id","fields","properties","href","widget","mode","selectedItemAttrs","allowExternals","preview_image","required","blocks","blocksConfig","slider","extensions","slideSchema","SliderSchema","block","slides","schema","blockSchema"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-slider-block/src/components/schema.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { mergeSchemas } from '../helpers';\n\nconst messages = defineMessages({\n  Source: {\n    id: 'Source',\n    defaultMessage: 'Source',\n  },\n  Slider: {\n    id: 'Slider',\n    defaultMessage: 'Slider',\n  },\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  imageOverride: {\n    id: 'Image override',\n    defaultMessage: 'Image override',\n  },\n  item: {\n    id: 'Item',\n    defaultMessage: 'Item',\n  },\n  items: {\n    id: 'Items',\n    defaultMessage: 'Items',\n  },\n  addItem: {\n    id: 'Add item',\n    defaultMessage: 'Add item',\n  },\n  head_title: {\n    id: 'Headtitle',\n    defaultMessage: 'Headtitle',\n  },\n});\n\nexport const itemSchema = (props) =>\n  mergeSchemas(\n    {\n      title: props.intl.formatMessage(messages.item),\n      addMessage: props.intl.formatMessage(messages.addItem),\n      fieldsets: [\n        {\n          id: 'default',\n          title: 'Default',\n          fields: [\n            'href',\n            'head_title',\n            'title',\n            'description',\n            'preview_image',\n          ],\n        },\n      ],\n\n      properties: {\n        href: {\n          title: props.intl.formatMessage(messages.Source),\n          widget: 'object_browser',\n          mode: 'link',\n          selectedItemAttrs: [\n            'Title',\n            'Description',\n            'hasPreviewImage',\n            'head_title',\n          ],\n          allowExternals: true,\n        },\n        head_title: {\n          title: props.intl.formatMessage(messages.head_title),\n        },\n        title: {\n          title: props.intl.formatMessage(messages.title),\n        },\n        description: {\n          title: props.intl.formatMessage(messages.description),\n        },\n        preview_image: {\n          title: props.intl.formatMessage(messages.imageOverride),\n          widget: 'object_browser',\n          mode: 'image',\n          allowExternals: true,\n        },\n      },\n      required: [],\n    },\n    config.blocks.blocksConfig.slider.extensions?.slideSchema || {},\n  );\n\nexport const SliderSchema = (props) =>\n  mergeSchemas(\n    {\n      title: props.intl.formatMessage(messages.Slider),\n      block: 'slider',\n      fieldsets: [\n        {\n          id: 'default',\n          title: 'Default',\n          fields: ['slides'],\n        },\n      ],\n      properties: {\n        slides: {\n          widget: 'slider_object_list',\n          title: props.intl.formatMessage(messages.items),\n          schema: itemSchema(props),\n        },\n      },\n      required: [],\n    },\n    config.blocks.blocksConfig.slider.extensions?.blockSchema || {},\n  );\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Source","defaultMessage":"Source"},{"id":"Slider","defaultMessage":"Slider"},{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Image override","defaultMessage":"Image override"},{"id":"Item","defaultMessage":"Item"},{"id":"Items","defaultMessage":"Items"},{"id":"Add item","defaultMessage":"Add item"},{"id":"Headtitle","defaultMessage":"Headtitle"}]}},"sourceType":"module"}