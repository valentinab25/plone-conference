{"ast":null,"code":"import { Component, Children } from 'react';\nimport withSideEffect from 'react-side-effect';\n/**\n * @export\n * @class BodyClass\n * @extends {Component}\n */\n\nclass BodyClass extends Component {\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.children) {\n      return Children.only(this.props.children);\n    }\n\n    return null;\n  }\n\n}\n\nBodyClass.defaultProps = {\n  children: null,\n  className: null\n};\n/**\n * reducePropsToState\n * @function reducePropsToState\n * @param {*} propsList propsList\n * @returns {List} classList\n */\n\nfunction reducePropsToState(propsList) {\n  let classList = [];\n  propsList.forEach(props => {\n    if (props.className) {\n      classList = classList.concat(props.className);\n    }\n  });\n  return classList;\n}\n/**\n * handleStateChangeOnClient\n * @function handleStateChangeOnClient\n * @param {*} classList classList\n * @returns {null} null\n */\n\n\nfunction handleStateChangeOnClient(classList) {\n  document.body.className = '';\n  classList.forEach(className => {\n    // This allows the component to accept more than one class at the same time\n    if (className.includes(' ')) {\n      className.split(' ').forEach(className => {\n        if (!document.body.classList.contains(className)) {\n          document.body.classList.add(className);\n        }\n      });\n    } else {\n      if (!document.body.classList.contains(className)) {\n        document.body.classList.add(className);\n      }\n    }\n  });\n}\n\nexport default withSideEffect(reducePropsToState, handleStateChangeOnClient)(BodyClass);","map":{"version":3,"names":["Component","Children","withSideEffect","BodyClass","render","props","children","only","defaultProps","className","reducePropsToState","propsList","classList","forEach","concat","handleStateChangeOnClient","document","body","includes","split","contains","add"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/helpers/BodyClass/BodyClass.jsx"],"sourcesContent":["import { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\n\n/**\n * @export\n * @class BodyClass\n * @extends {Component}\n */\nclass BodyClass extends Component {\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.children) {\n      return Children.only(this.props.children);\n    }\n    return null;\n  }\n}\n\nBodyClass.propTypes = {\n  children: PropTypes.element,\n  className: PropTypes.string,\n};\n\nBodyClass.defaultProps = {\n  children: null,\n  className: null,\n};\n\n/**\n * reducePropsToState\n * @function reducePropsToState\n * @param {*} propsList propsList\n * @returns {List} classList\n */\nfunction reducePropsToState(propsList) {\n  let classList = [];\n  propsList.forEach((props) => {\n    if (props.className) {\n      classList = classList.concat(props.className);\n    }\n  });\n  return classList;\n}\n\n/**\n * handleStateChangeOnClient\n * @function handleStateChangeOnClient\n * @param {*} classList classList\n * @returns {null} null\n */\nfunction handleStateChangeOnClient(classList) {\n  document.body.className = '';\n  classList.forEach((className) => {\n    // This allows the component to accept more than one class at the same time\n    if (className.includes(' ')) {\n      className.split(' ').forEach((className) => {\n        if (!document.body.classList.contains(className)) {\n          document.body.classList.add(className);\n        }\n      });\n    } else {\n      if (!document.body.classList.contains(className)) {\n        document.body.classList.add(className);\n      }\n    }\n  });\n}\n\nexport default withSideEffect(\n  reducePropsToState,\n  handleStateChangeOnClient,\n)(BodyClass);\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;EAChC;AACF;AACA;AACA;AACA;EACEI,MAAM,GAAG;IACP,IAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;MACvB,OAAOL,QAAQ,CAACM,IAAT,CAAc,KAAKF,KAAL,CAAWC,QAAzB,CAAP;IACD;;IACD,OAAO,IAAP;EACD;;AAX+B;;AAmBlCH,SAAS,CAACK,YAAV,GAAyB;EACvBF,QAAQ,EAAE,IADa;EAEvBG,SAAS,EAAE;AAFY,CAAzB;AAKA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,kBAAT,CAA4BC,SAA5B,EAAuC;EACrC,IAAIC,SAAS,GAAG,EAAhB;EACAD,SAAS,CAACE,OAAV,CAAmBR,KAAD,IAAW;IAC3B,IAAIA,KAAK,CAACI,SAAV,EAAqB;MACnBG,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBT,KAAK,CAACI,SAAvB,CAAZ;IACD;EACF,CAJD;EAKA,OAAOG,SAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,yBAAT,CAAmCH,SAAnC,EAA8C;EAC5CI,QAAQ,CAACC,IAAT,CAAcR,SAAd,GAA0B,EAA1B;EACAG,SAAS,CAACC,OAAV,CAAmBJ,SAAD,IAAe;IAC/B;IACA,IAAIA,SAAS,CAACS,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;MAC3BT,SAAS,CAACU,KAAV,CAAgB,GAAhB,EAAqBN,OAArB,CAA8BJ,SAAD,IAAe;QAC1C,IAAI,CAACO,QAAQ,CAACC,IAAT,CAAcL,SAAd,CAAwBQ,QAAxB,CAAiCX,SAAjC,CAAL,EAAkD;UAChDO,QAAQ,CAACC,IAAT,CAAcL,SAAd,CAAwBS,GAAxB,CAA4BZ,SAA5B;QACD;MACF,CAJD;IAKD,CAND,MAMO;MACL,IAAI,CAACO,QAAQ,CAACC,IAAT,CAAcL,SAAd,CAAwBQ,QAAxB,CAAiCX,SAAjC,CAAL,EAAkD;QAChDO,QAAQ,CAACC,IAAT,CAAcL,SAAd,CAAwBS,GAAxB,CAA4BZ,SAA5B;MACD;IACF;EACF,CAbD;AAcD;;AAED,eAAeP,cAAc,CAC3BQ,kBAD2B,EAE3BK,yBAF2B,CAAd,CAGbZ,SAHa,CAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}