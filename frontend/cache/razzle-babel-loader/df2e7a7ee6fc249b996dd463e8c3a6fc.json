{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * UrlWidget component.\n * @module components/manage/Widgets/UrlWidget\n */\nimport React, { useState } from 'react';\nimport { compose } from 'redux';\nimport { Input, Button } from 'semantic-ui-react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { addAppURL, isInternalURL, flattenToAppURL, URLUtils } from '@plone/volto/helpers';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\n/** Widget to edit urls\n *\n * This is the default widget used for the `remoteUrl` field. You can also use\n * it by declaring a field like:\n *\n * ```jsx\n * {\n *  title: \"URL\",\n *  widget: 'url',\n * }\n * ```\n */\n\nexport const UrlWidget = props => {\n  const {\n    id,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n    isDisabled\n  } = props;\n  const inputId = `field-${id}`;\n  const {\n    0: value,\n    1: setValue\n  } = useState(flattenToAppURL(props.value));\n  const {\n    0: isInvalid,\n    1: setIsInvalid\n  } = useState(false);\n  /**\n   * Clear handler\n   * @method clear\n   * @param {Object} value Value\n   * @returns {undefined}\n   */\n\n  const clear = () => {\n    setValue('');\n    onChange(id, undefined);\n  };\n\n  const onChangeValue = _value => {\n    var _newValue;\n\n    let newValue = _value;\n\n    if (((_newValue = newValue) === null || _newValue === void 0 ? void 0 : _newValue.length) > 0) {\n      if (isInvalid && URLUtils.isUrl(URLUtils.normalizeUrl(newValue))) {\n        setIsInvalid(false);\n      }\n\n      if (isInternalURL(newValue)) {\n        newValue = flattenToAppURL(newValue);\n      }\n    }\n\n    setValue(newValue);\n    newValue = isInternalURL(newValue) ? addAppURL(newValue) : newValue;\n\n    if (!isInternalURL(newValue) && newValue.length > 0) {\n      const checkedURL = URLUtils.checkAndNormalizeUrl(newValue);\n      newValue = checkedURL.url;\n\n      if (!checkedURL.isValid) {\n        setIsInvalid(true);\n      }\n    }\n\n    onChange(id, newValue === '' ? undefined : newValue);\n  };\n\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    className: \"url wide\"\n  }), __jsx(\"div\", {\n    className: \"wrapper\"\n  }, __jsx(Input, {\n    id: inputId,\n    name: id,\n    type: \"url\",\n    value: value || '',\n    disabled: isDisabled,\n    placeholder: placeholder,\n    onChange: ({\n      target\n    }) => onChangeValue(target.value),\n    onBlur: ({\n      target\n    }) => onBlur(id, target.value === '' ? undefined : target.value),\n    onClick: () => onClick(),\n    minLength: minLength || null,\n    maxLength: maxLength || null,\n    error: isInvalid\n  }), (value === null || value === void 0 ? void 0 : value.length) > 0 ? __jsx(Button.Group, null, __jsx(Button, {\n    basic: true,\n    className: \"cancel\",\n    \"aria-label\": \"clearUrlBrowser\",\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      clear();\n    }\n  }, __jsx(Icon, {\n    name: clearSVG,\n    size: \"30px\"\n  }))) : __jsx(Button.Group, null, __jsx(Button, {\n    basic: true,\n    icon: true,\n    \"aria-label\": \"openUrlBrowser\",\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      props.openObjectBrowser({\n        mode: 'link',\n        overlay: true,\n        onSelectItem: url => {\n          onChangeValue(url);\n        }\n      });\n    }\n  }, __jsx(Icon, {\n    name: navTreeSVG,\n    size: \"24px\"\n  })))));\n};\n/**\n * Property types\n * @property {Object} propTypes Property types.\n * @static\n */\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nUrlWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null\n};\nexport default compose(withObjectBrowser)(UrlWidget);","map":{"version":3,"names":["React","useState","compose","Input","Button","FormFieldWrapper","Icon","addAppURL","isInternalURL","flattenToAppURL","URLUtils","withObjectBrowser","clearSVG","navTreeSVG","UrlWidget","props","id","onChange","onBlur","onClick","minLength","maxLength","placeholder","isDisabled","inputId","value","setValue","isInvalid","setIsInvalid","clear","undefined","onChangeValue","_value","newValue","length","isUrl","normalizeUrl","checkedURL","checkAndNormalizeUrl","url","isValid","target","e","preventDefault","stopPropagation","openObjectBrowser","mode","overlay","onSelectItem","defaultProps","description","required","error"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/Widgets/UrlWidget.jsx"],"sourcesContent":["/**\n * UrlWidget component.\n * @module components/manage/Widgets/UrlWidget\n */\n\nimport React, { useState } from 'react';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Input, Button } from 'semantic-ui-react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport {\n  addAppURL,\n  isInternalURL,\n  flattenToAppURL,\n  URLUtils,\n} from '@plone/volto/helpers';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\n\n/** Widget to edit urls\n *\n * This is the default widget used for the `remoteUrl` field. You can also use\n * it by declaring a field like:\n *\n * ```jsx\n * {\n *  title: \"URL\",\n *  widget: 'url',\n * }\n * ```\n */\nexport const UrlWidget = (props) => {\n  const {\n    id,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n    isDisabled,\n  } = props;\n  const inputId = `field-${id}`;\n\n  const [value, setValue] = useState(flattenToAppURL(props.value));\n  const [isInvalid, setIsInvalid] = useState(false);\n  /**\n   * Clear handler\n   * @method clear\n   * @param {Object} value Value\n   * @returns {undefined}\n   */\n  const clear = () => {\n    setValue('');\n    onChange(id, undefined);\n  };\n\n  const onChangeValue = (_value) => {\n    let newValue = _value;\n    if (newValue?.length > 0) {\n      if (isInvalid && URLUtils.isUrl(URLUtils.normalizeUrl(newValue))) {\n        setIsInvalid(false);\n      }\n\n      if (isInternalURL(newValue)) {\n        newValue = flattenToAppURL(newValue);\n      }\n    }\n\n    setValue(newValue);\n\n    newValue = isInternalURL(newValue) ? addAppURL(newValue) : newValue;\n\n    if (!isInternalURL(newValue) && newValue.length > 0) {\n      const checkedURL = URLUtils.checkAndNormalizeUrl(newValue);\n      newValue = checkedURL.url;\n      if (!checkedURL.isValid) {\n        setIsInvalid(true);\n      }\n    }\n\n    onChange(id, newValue === '' ? undefined : newValue);\n  };\n\n  return (\n    <FormFieldWrapper {...props} className=\"url wide\">\n      <div className=\"wrapper\">\n        <Input\n          id={inputId}\n          name={id}\n          type=\"url\"\n          value={value || ''}\n          disabled={isDisabled}\n          placeholder={placeholder}\n          onChange={({ target }) => onChangeValue(target.value)}\n          onBlur={({ target }) =>\n            onBlur(id, target.value === '' ? undefined : target.value)\n          }\n          onClick={() => onClick()}\n          minLength={minLength || null}\n          maxLength={maxLength || null}\n          error={isInvalid}\n        />\n        {value?.length > 0 ? (\n          <Button.Group>\n            <Button\n              basic\n              className=\"cancel\"\n              aria-label=\"clearUrlBrowser\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                clear();\n              }}\n            >\n              <Icon name={clearSVG} size=\"30px\" />\n            </Button>\n          </Button.Group>\n        ) : (\n          <Button.Group>\n            <Button\n              basic\n              icon\n              aria-label=\"openUrlBrowser\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                props.openObjectBrowser({\n                  mode: 'link',\n                  overlay: true,\n                  onSelectItem: (url) => {\n                    onChangeValue(url);\n                  },\n                });\n              }}\n            >\n              <Icon name={navTreeSVG} size=\"24px\" />\n            </Button>\n          </Button.Group>\n        )}\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types\n * @property {Object} propTypes Property types.\n * @static\n */\nUrlWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  openObjectBrowser: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nUrlWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null,\n};\n\nexport default compose(withObjectBrowser)(UrlWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}