{"ast":null,"code":"import _objectSpread from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n/**\n * Authentication options reducer.\n * @module reducers/auth/authOptions\n */\nimport { LIST_AUTH_OPTIONS } from '../../constants/ActionTypes';\nconst initialState = {\n  options: [],\n  loading: false,\n  error: null\n};\n/**\n * Authentication options reducer.\n * @function authOptions\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\n\nexport default function authOptions() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case `${LIST_AUTH_OPTIONS}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        options: [],\n        error: null\n      });\n\n    case `${LIST_AUTH_OPTIONS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        options: action.result.options,\n        error: null\n      });\n\n    case `${LIST_AUTH_OPTIONS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        options: [],\n        error: action.error.response.error\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["LIST_AUTH_OPTIONS","initialState","options","loading","error","authOptions","state","action","type","result","response"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone-collective/volto-authomatic/src/reducers/auth/authOptions.js"],"sourcesContent":["/**\n * Authentication options reducer.\n * @module reducers/auth/authOptions\n */\n\nimport { LIST_AUTH_OPTIONS } from '../../constants/ActionTypes';\n\nconst initialState = {\n  options: [],\n  loading: false,\n  error: null,\n};\n\n/**\n * Authentication options reducer.\n * @function authOptions\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function authOptions(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${LIST_AUTH_OPTIONS}_PENDING`:\n      return {\n        ...state,\n        loading: true,\n        options: [],\n        error: null,\n      };\n    case `${LIST_AUTH_OPTIONS}_SUCCESS`:\n      return {\n        ...state,\n        loading: false,\n        options: action.result.options,\n        error: null,\n      };\n    case `${LIST_AUTH_OPTIONS}_FAIL`:\n      return {\n        ...state,\n        loading: false,\n        options: [],\n        error: action.error.response.error,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,SAASA,iBAAT,QAAkC,6BAAlC;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EADU;EAEnBC,OAAO,EAAE,KAFU;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,WAAT,GAAwD;EAAA,IAAnCC,KAAmC,uEAA3BL,YAA2B;EAAA,IAAbM,MAAa,uEAAJ,EAAI;;EACrE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAM,GAAER,iBAAkB,UAA1B;MACE,uCACKM,KADL;QAEEH,OAAO,EAAE,IAFX;QAGED,OAAO,EAAE,EAHX;QAIEE,KAAK,EAAE;MAJT;;IAMF,KAAM,GAAEJ,iBAAkB,UAA1B;MACE,uCACKM,KADL;QAEEH,OAAO,EAAE,KAFX;QAGED,OAAO,EAAEK,MAAM,CAACE,MAAP,CAAcP,OAHzB;QAIEE,KAAK,EAAE;MAJT;;IAMF,KAAM,GAAEJ,iBAAkB,OAA1B;MACE,uCACKM,KADL;QAEEH,OAAO,EAAE,KAFX;QAGED,OAAO,EAAE,EAHX;QAIEE,KAAK,EAAEG,MAAM,CAACH,KAAP,CAAaM,QAAb,CAAsBN;MAJ/B;;IAMF;MACE,OAAOE,KAAP;EAvBJ;AAyBD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}