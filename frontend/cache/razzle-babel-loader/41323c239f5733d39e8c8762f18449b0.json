{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nimport _filter from \"lodash/filter\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\n\nconst emptySlateBlock = () => ({\n  value: [{\n    children: [{\n      text: ''\n    }],\n    type: 'p'\n  }],\n  plaintext: ''\n});\n\nconst useIsMounted = () => {\n  const ref = React.useRef();\n  React.useEffect(() => {\n    ref.current = true;\n    return () => ref.current = false;\n  }, []);\n  return ref.current;\n};\n\nconst SlashMenu = ({\n  currentBlock,\n  onMutateBlock,\n  selected,\n  availableBlocks\n}) => {\n  const intl = useIntl();\n  return __jsx(\"div\", {\n    className: \"power-user-menu\"\n  }, __jsx(Menu, {\n    vertical: true,\n    fluid: true,\n    borderless: true\n  }, availableBlocks.map((block, index) => __jsx(Menu.Item, {\n    key: block.id,\n    className: block.id,\n    active: index === selected,\n    onClick: e => {\n      // onInsertBlock(currentBlock, { '@type': block.id });\n      onMutateBlock(currentBlock, {\n        '@type': block.id\n      });\n      e.stopPropagation();\n    }\n  }, __jsx(Icon, {\n    name: block.icon,\n    size: \"24px\"\n  }), intl.formatMessage({\n    id: block.title,\n    defaultMessage: block.title\n  }))), availableBlocks.length === 0 && __jsx(Menu.Item, null, __jsx(FormattedMessage, {\n    id: \"No matching blocks\",\n    defaultMessage: \"No matching blocks\"\n  }))));\n};\n\n/**\n * A SlashMenu wrapper implemented as a volto-slate PersistentHelper.\n */\nconst PersistentSlashMenu = ({\n  editor\n}) => {\n  var _data$plaintext;\n\n  const props = editor.getBlockProps();\n  const {\n    block,\n    blocksConfig,\n    data,\n    onMutateBlock,\n    properties,\n    selected,\n    allowedBlocks,\n    detached\n  } = props;\n  const disableNewBlocks = (data === null || data === void 0 ? void 0 : data.disableNewBlocks) || detached;\n  const [slashMenuSelected, setSlashMenuSelected] = React.useState(0);\n  const useAllowedBlocks = !_isEmpty(allowedBlocks);\n  const slashCommand = (_data$plaintext = data.plaintext) === null || _data$plaintext === void 0 ? void 0 : _data$plaintext.trim().match(/^\\/([a-z]*)$/);\n  const availableBlocks = React.useMemo(() => _filter(blocksConfig, item => useAllowedBlocks ? allowedBlocks.includes(item.id) : typeof item.restricted === 'function' ? !item.restricted({\n    properties,\n    block: item\n  }) : !item.restricted).filter( // TODO: make it work with intl?\n  block => slashCommand && block.id.indexOf(slashCommand[1]) === 0).sort((a, b) => a.title < b.title ? -1 : 1), [allowedBlocks, blocksConfig, properties, slashCommand, useAllowedBlocks]);\n  const slashMenuSize = availableBlocks.length;\n  const show = selected && slashCommand && !disableNewBlocks;\n  const isMounted = useIsMounted();\n  React.useEffect(() => {\n    if (isMounted && show && slashMenuSelected > slashMenuSize - 1) {\n      setSlashMenuSelected(slashMenuSize - 1);\n    }\n  }, [show, slashMenuSelected, isMounted, slashMenuSize]);\n  editor.showSlashMenu = show;\n\n  editor.slashEnter = () => slashMenuSize > 0 && onMutateBlock(block, {\n    '@type': availableBlocks[slashMenuSelected].id\n  }, emptySlateBlock());\n\n  editor.slashArrowUp = () => setSlashMenuSelected(slashMenuSelected === 0 ? slashMenuSize - 1 : slashMenuSelected - 1);\n\n  editor.slashArrowDown = () => setSlashMenuSelected(slashMenuSelected >= slashMenuSize - 1 ? 0 : slashMenuSelected + 1);\n\n  return show ? __jsx(SlashMenu, {\n    currentBlock: block,\n    onMutateBlock: onMutateBlock,\n    availableBlocks: availableBlocks,\n    selected: slashMenuSelected\n  }) : '';\n};\n\nexport default PersistentSlashMenu;","map":{"version":3,"names":["React","Menu","useIntl","FormattedMessage","Icon","emptySlateBlock","value","children","text","type","plaintext","useIsMounted","ref","useRef","useEffect","current","SlashMenu","currentBlock","onMutateBlock","selected","availableBlocks","intl","map","block","index","id","e","stopPropagation","icon","formatMessage","title","defaultMessage","length","PersistentSlashMenu","editor","props","getBlockProps","blocksConfig","data","properties","allowedBlocks","detached","disableNewBlocks","slashMenuSelected","setSlashMenuSelected","useState","useAllowedBlocks","slashCommand","trim","match","useMemo","item","includes","restricted","filter","indexOf","sort","a","b","slashMenuSize","show","isMounted","showSlashMenu","slashEnter","slashArrowUp","slashArrowDown"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/packages/volto-slate/src/blocks/Text/SlashMenu.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { filter, isEmpty } from 'lodash';\nimport { Menu } from 'semantic-ui-react';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\n\nconst emptySlateBlock = () => ({\n  value: [\n    {\n      children: [\n        {\n          text: '',\n        },\n      ],\n      type: 'p',\n    },\n  ],\n  plaintext: '',\n});\n\nconst useIsMounted = () => {\n  const ref = React.useRef();\n  React.useEffect(() => {\n    ref.current = true;\n    return () => (ref.current = false);\n  }, []);\n  return ref.current;\n};\n\nconst SlashMenu = ({\n  currentBlock,\n  onMutateBlock,\n  selected,\n  availableBlocks,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"power-user-menu\">\n      <Menu vertical fluid borderless>\n        {availableBlocks.map((block, index) => (\n          <Menu.Item\n            key={block.id}\n            className={block.id}\n            active={index === selected}\n            onClick={(e) => {\n              // onInsertBlock(currentBlock, { '@type': block.id });\n              onMutateBlock(currentBlock, { '@type': block.id });\n              e.stopPropagation();\n            }}\n          >\n            <Icon name={block.icon} size=\"24px\" />\n            {intl.formatMessage({\n              id: block.title,\n              defaultMessage: block.title,\n            })}\n          </Menu.Item>\n        ))}\n        {availableBlocks.length === 0 && (\n          <Menu.Item>\n            <FormattedMessage\n              id=\"No matching blocks\"\n              defaultMessage=\"No matching blocks\"\n            />\n          </Menu.Item>\n        )}\n      </Menu>\n    </div>\n  );\n};\n\nSlashMenu.propTypes = {\n  currentBlock: PropTypes.string.isRequired,\n  onInsertBlock: PropTypes.func,\n  selected: PropTypes.number,\n  blocksConfig: PropTypes.arrayOf(PropTypes.any),\n};\n\n/**\n * A SlashMenu wrapper implemented as a volto-slate PersistentHelper.\n */\nconst PersistentSlashMenu = ({ editor }) => {\n  const props = editor.getBlockProps();\n  const {\n    block,\n    blocksConfig,\n    data,\n    onMutateBlock,\n    properties,\n    selected,\n    allowedBlocks,\n    detached,\n  } = props;\n  const disableNewBlocks = data?.disableNewBlocks || detached;\n\n  const [slashMenuSelected, setSlashMenuSelected] = React.useState(0);\n\n  const useAllowedBlocks = !isEmpty(allowedBlocks);\n  const slashCommand = data.plaintext?.trim().match(/^\\/([a-z]*)$/);\n\n  const availableBlocks = React.useMemo(\n    () =>\n      filter(blocksConfig, (item) =>\n        useAllowedBlocks\n          ? allowedBlocks.includes(item.id)\n          : typeof item.restricted === 'function'\n          ? !item.restricted({ properties, block: item })\n          : !item.restricted,\n      )\n        .filter(\n          // TODO: make it work with intl?\n          (block) => slashCommand && block.id.indexOf(slashCommand[1]) === 0,\n        )\n        .sort((a, b) => (a.title < b.title ? -1 : 1)),\n    [allowedBlocks, blocksConfig, properties, slashCommand, useAllowedBlocks],\n  );\n\n  const slashMenuSize = availableBlocks.length;\n  const show = selected && slashCommand && !disableNewBlocks;\n\n  const isMounted = useIsMounted();\n\n  React.useEffect(() => {\n    if (isMounted && show && slashMenuSelected > slashMenuSize - 1) {\n      setSlashMenuSelected(slashMenuSize - 1);\n    }\n  }, [show, slashMenuSelected, isMounted, slashMenuSize]);\n\n  editor.showSlashMenu = show;\n\n  editor.slashEnter = () =>\n    slashMenuSize > 0 &&\n    onMutateBlock(\n      block,\n      {\n        '@type': availableBlocks[slashMenuSelected].id,\n      },\n      emptySlateBlock(),\n    );\n\n  editor.slashArrowUp = () =>\n    setSlashMenuSelected(\n      slashMenuSelected === 0 ? slashMenuSize - 1 : slashMenuSelected - 1,\n    );\n\n  editor.slashArrowDown = () =>\n    setSlashMenuSelected(\n      slashMenuSelected >= slashMenuSize - 1 ? 0 : slashMenuSelected + 1,\n    );\n\n  return show ? (\n    <SlashMenu\n      currentBlock={block}\n      onMutateBlock={onMutateBlock}\n      availableBlocks={availableBlocks}\n      selected={slashMenuSelected}\n    />\n  ) : (\n    ''\n  );\n};\n\nexport default PersistentSlashMenu;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"No matching blocks","defaultMessage":"No matching blocks"}]}},"sourceType":"module"}