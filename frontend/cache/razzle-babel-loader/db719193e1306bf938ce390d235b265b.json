{"ast":null,"code":"var __jsx = React.createElement;\n\n/**\n * Tabular view component.\n * @module components/theme/View/TabularView\n */\nimport React from 'react';\nimport { UniversalLink } from '@plone/volto/components';\nimport { Container, Table } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\n/**\n * Tabular view component class.\n * @function TabularView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\n\nconst TabularView = ({\n  content\n}) => __jsx(Container, {\n  className: \"view-wrapper\"\n}, __jsx(\"article\", {\n  id: \"content\"\n}, __jsx(\"header\", null, __jsx(\"h1\", {\n  className: \"documentFirstHeading\"\n}, content.title), content.description && __jsx(\"p\", {\n  className: \"documentDescription\"\n}, content.description)), __jsx(\"section\", {\n  id: \"content-core\"\n}, __jsx(Table, {\n  celled: true,\n  padded: true\n}, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, __jsx(FormattedMessage, {\n  id: \"Title\",\n  defaultMessage: \"Title\"\n})), __jsx(Table.HeaderCell, null, __jsx(FormattedMessage, {\n  id: \"Description\",\n  defaultMessage: \"Description\"\n})), __jsx(Table.HeaderCell, null, __jsx(FormattedMessage, {\n  id: \"Type\",\n  defaultMessage: \"Type\"\n})), __jsx(Table.HeaderCell, null, __jsx(FormattedMessage, {\n  id: \"State\",\n  defaultMessage: \"State\"\n})))), __jsx(Table.Body, null, content.items.map(item => __jsx(Table.Row, {\n  key: item.url\n}, __jsx(Table.Cell, null, __jsx(UniversalLink, {\n  item: item,\n  className: \"summary url\",\n  title: item['@type']\n}, item.title)), __jsx(Table.Cell, null, item.description), __jsx(Table.Cell, null, item['@type']), __jsx(Table.Cell, null, item.review_state))))))));\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\nexport default TabularView;","map":{"version":3,"names":["React","UniversalLink","Container","Table","FormattedMessage","TabularView","content","title","description","items","map","item","url","review_state"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/theme/View/TabularView.jsx"],"sourcesContent":["/**\n * Tabular view component.\n * @module components/theme/View/TabularView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UniversalLink } from '@plone/volto/components';\nimport { Container, Table } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * Tabular view component class.\n * @function TabularView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst TabularView = ({ content }) => (\n  <Container className=\"view-wrapper\">\n    <article id=\"content\">\n      <header>\n        <h1 className=\"documentFirstHeading\">{content.title}</h1>\n        {content.description && (\n          <p className=\"documentDescription\">{content.description}</p>\n        )}\n      </header>\n      <section id=\"content-core\">\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>\n                <FormattedMessage id=\"Title\" defaultMessage=\"Title\" />\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <FormattedMessage\n                  id=\"Description\"\n                  defaultMessage=\"Description\"\n                />\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <FormattedMessage id=\"Type\" defaultMessage=\"Type\" />\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <FormattedMessage id=\"State\" defaultMessage=\"State\" />\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {content.items.map((item) => (\n              <Table.Row key={item.url}>\n                <Table.Cell>\n                  <UniversalLink\n                    item={item}\n                    className=\"summary url\"\n                    title={item['@type']}\n                  >\n                    {item.title}\n                  </UniversalLink>\n                </Table.Cell>\n                <Table.Cell>{item.description}</Table.Cell>\n                <Table.Cell>{item['@type']}</Table.Cell>\n                <Table.Cell>{item.review_state}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </section>\n    </article>\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nTabularView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        /**\n         * Title of the item\n         */\n        title: PropTypes.string,\n        /**\n         * Description of the item\n         */\n        description: PropTypes.string,\n        /**\n         * Url of the item\n         */\n        url: PropTypes.string,\n        /**\n         * Review state of the item\n         */\n        review_state: PropTypes.string,\n        /**\n         * Type of the item\n         */\n        '@type': PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default TabularView;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,mBAAjC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAF,CAAD,KAClB,MAAC,SAAD;EAAW,SAAS,EAAC;AAArB,GACE;EAAS,EAAE,EAAC;AAAZ,GACE,sBACE;EAAI,SAAS,EAAC;AAAd,GAAsCA,OAAO,CAACC,KAA9C,CADF,EAEGD,OAAO,CAACE,WAAR,IACC;EAAG,SAAS,EAAC;AAAb,GAAoCF,OAAO,CAACE,WAA5C,CAHJ,CADF,EAOE;EAAS,EAAE,EAAC;AAAZ,GACE,MAAC,KAAD;EAAO,MAAM,MAAb;EAAc,MAAM;AAApB,GACE,MAAC,KAAD,CAAO,MAAP,QACE,MAAC,KAAD,CAAO,GAAP,QACE,MAAC,KAAD,CAAO,UAAP,QACE,MAAC,gBAAD;EAAkB,EAAE,EAAC,OAArB;EAA6B,cAAc,EAAC;AAA5C,EADF,CADF,EAIE,MAAC,KAAD,CAAO,UAAP,QACE,MAAC,gBAAD;EACE,EAAE,EAAC,aADL;EAEE,cAAc,EAAC;AAFjB,EADF,CAJF,EAUE,MAAC,KAAD,CAAO,UAAP,QACE,MAAC,gBAAD;EAAkB,EAAE,EAAC,MAArB;EAA4B,cAAc,EAAC;AAA3C,EADF,CAVF,EAaE,MAAC,KAAD,CAAO,UAAP,QACE,MAAC,gBAAD;EAAkB,EAAE,EAAC,OAArB;EAA6B,cAAc,EAAC;AAA5C,EADF,CAbF,CADF,CADF,EAoBE,MAAC,KAAD,CAAO,IAAP,QACGF,OAAO,CAACG,KAAR,CAAcC,GAAd,CAAmBC,IAAD,IACjB,MAAC,KAAD,CAAO,GAAP;EAAW,GAAG,EAAEA,IAAI,CAACC;AAArB,GACE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,aAAD;EACE,IAAI,EAAED,IADR;EAEE,SAAS,EAAC,aAFZ;EAGE,KAAK,EAAEA,IAAI,CAAC,OAAD;AAHb,GAKGA,IAAI,CAACJ,KALR,CADF,CADF,EAUE,MAAC,KAAD,CAAO,IAAP,QAAaI,IAAI,CAACH,WAAlB,CAVF,EAWE,MAAC,KAAD,CAAO,IAAP,QAAaG,IAAI,CAAC,OAAD,CAAjB,CAXF,EAYE,MAAC,KAAD,CAAO,IAAP,QAAaA,IAAI,CAACE,YAAlB,CAZF,CADD,CADH,CApBF,CADF,CAPF,CADF,CADF;AAsDA;AACA;AACA;AACA;AACA;;;AA4CA,eAAeR,WAAf"},"metadata":{"react-intl":{"messages":[{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Type","defaultMessage":"Type"},{"id":"State","defaultMessage":"State"}]}},"sourceType":"module"}