{"ast":null,"code":"var _jsxFileName = \"/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-blocks-grid/src/components/BlockRenderer/BlockRenderer.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport config from '@plone/volto/registry';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\n/**\n * BlockRenderer container class.\n * @class Form\n * @extends Component\n */\n\nfunction BlockRenderer(props) {\n  const {\n    edit,\n    type\n  } = props;\n\n  if (!type) {\n    // We could have an empty block, although should be handled somewhere else\n    return null;\n  }\n\n  const EditBlock = config.blocks.blocksConfig[type].edit;\n  const ViewBlock = config.blocks.blocksConfig[type].view;\n\n  if (!edit) {\n    return __jsx(ViewBlock, _extends({}, props, {\n      detached: true,\n      onChangeBlock: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  if (edit) {\n    return __jsx(EditBlock, _extends({}, props, {\n      detached: true,\n      index: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return '';\n}\n\nBlockRenderer.propTypes = {\n  edit: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func,\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nBlockRenderer.defaultProps = {\n  edit: false\n};\nexport default withObjectBrowser(BlockRenderer);","map":{"version":3,"names":["React","PropTypes","config","withObjectBrowser","BlockRenderer","props","edit","type","EditBlock","blocks","blocksConfig","ViewBlock","view","propTypes","bool","isRequired","string","block","onChangeBlock","func","data","objectOf","any","defaultProps"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-blocks-grid/src/components/BlockRenderer/BlockRenderer.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport config from '@plone/volto/registry';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\n\n/**\n * BlockRenderer container class.\n * @class Form\n * @extends Component\n */\nfunction BlockRenderer(props) {\n  const { edit, type } = props;\n\n  if (!type) {\n    // We could have an empty block, although should be handled somewhere else\n    return null;\n  }\n\n  const EditBlock = config.blocks.blocksConfig[type].edit;\n  const ViewBlock = config.blocks.blocksConfig[type].view;\n\n  if (!edit) {\n    return <ViewBlock {...props} detached onChangeBlock={() => {}} />;\n  }\n  if (edit) {\n    return <EditBlock {...props} detached index={0} />;\n  }\n  return '';\n}\n\nBlockRenderer.propTypes = {\n  edit: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nBlockRenderer.defaultProps = {\n  edit: false,\n};\n\nexport default withObjectBrowser(BlockRenderer);\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,iBAAP,MAA8B,sDAA9B;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC5B,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAiBF,KAAvB;;EAEA,IAAI,CAACE,IAAL,EAAW;IACT;IACA,OAAO,IAAP;EACD;;EAED,MAAMC,SAAS,GAAGN,MAAM,CAACO,MAAP,CAAcC,YAAd,CAA2BH,IAA3B,EAAiCD,IAAnD;EACA,MAAMK,SAAS,GAAGT,MAAM,CAACO,MAAP,CAAcC,YAAd,CAA2BH,IAA3B,EAAiCK,IAAnD;;EAEA,IAAI,CAACN,IAAL,EAAW;IACT,OAAO,MAAC,SAAD,eAAeD,KAAf;MAAsB,QAAQ,MAA9B;MAA+B,aAAa,EAAE,MAAM,CAAE,CAAtD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAP;EACD;;EACD,IAAIC,IAAJ,EAAU;IACR,OAAO,MAAC,SAAD,eAAeD,KAAf;MAAsB,QAAQ,MAA9B;MAA+B,KAAK,EAAE,CAAtC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAP;EACD;;EACD,OAAO,EAAP;AACD;;AAEDD,aAAa,CAACS,SAAd,GAA0B;EACxBP,IAAI,EAAEL,SAAS,CAACa,IAAV,CAAeC,UADG;EAExBR,IAAI,EAAEN,SAAS,CAACe,MAAV,CAAiBD,UAFC;EAGxBE,KAAK,EAAEhB,SAAS,CAACe,MAAV,CAAiBD,UAHA;EAIxBG,aAAa,EAAEjB,SAAS,CAACkB,IAJD;EAKxBC,IAAI,EAAEnB,SAAS,CAACoB,QAAV,CAAmBpB,SAAS,CAACqB,GAA7B,EAAkCP;AALhB,CAA1B;AAQAX,aAAa,CAACmB,YAAd,GAA6B;EAC3BjB,IAAI,EAAE;AADqB,CAA7B;AAIA,eAAeH,iBAAiB,CAACC,aAAD,CAAhC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}