{"ast":null,"code":"import _objectSpread from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _map from \"lodash/map\";\nimport _findIndex from \"lodash/findIndex\";\n\n/**\n * Schema helper.\n * @module helpers/schema/schema\n */\nimport merge from 'deepmerge';\n\n/**\n * Merge schemas\n * @method mergeSchemas\n * @param {Array} schemas Array of schemas\n * @returns {Object} Merged schemas.\n */\nexport function mergeSchemas() {\n  for (var _len = arguments.length, schemas = new Array(_len), _key = 0; _key < _len; _key++) {\n    schemas[_key] = arguments[_key];\n  }\n\n  const schema = merge.all(schemas);\n  let fieldsets = [];\n\n  _map(schema.fieldsets, fieldset => {\n    // Find fieldset\n    const index = _findIndex(fieldsets, entry => entry.id === fieldset.id); // Check if already exists\n\n\n    if (index !== -1) {\n      // Append fields\n      fieldsets[index].fields = [...fieldsets[index].fields, ...fieldset.fields];\n    } else {\n      // Add new fieldset\n      fieldsets.push(fieldset);\n    }\n  });\n\n  return _objectSpread(_objectSpread({}, schema), {}, {\n    fieldsets\n  });\n}","map":{"version":3,"names":["merge","mergeSchemas","schemas","schema","all","fieldsets","fieldset","index","entry","id","fields","push"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-slider-block/src/helpers/Schema/Schema.js"],"sourcesContent":["/**\n * Schema helper.\n * @module helpers/schema/schema\n */\n\nimport merge from 'deepmerge';\nimport { findIndex, map } from 'lodash';\n\n/**\n * Merge schemas\n * @method mergeSchemas\n * @param {Array} schemas Array of schemas\n * @returns {Object} Merged schemas.\n */\nexport function mergeSchemas(...schemas) {\n  const schema = merge.all(schemas);\n  let fieldsets = [];\n  map(schema.fieldsets, (fieldset) => {\n    // Find fieldset\n    const index = findIndex(fieldsets, (entry) => entry.id === fieldset.id);\n\n    // Check if already exists\n    if (index !== -1) {\n      // Append fields\n      fieldsets[index].fields = [\n        ...fieldsets[index].fields,\n        ...fieldset.fields,\n      ];\n    } else {\n      // Add new fieldset\n      fieldsets.push(fieldset);\n    }\n  });\n\n  return {\n    ...schema,\n    fieldsets,\n  };\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,WAAlB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAT,GAAkC;EAAA,kCAATC,OAAS;IAATA,OAAS;EAAA;;EACvC,MAAMC,MAAM,GAAGH,KAAK,CAACI,GAAN,CAAUF,OAAV,CAAf;EACA,IAAIG,SAAS,GAAG,EAAhB;;EACA,KAAIF,MAAM,CAACE,SAAX,EAAuBC,QAAD,IAAc;IAClC;IACA,MAAMC,KAAK,GAAG,WAAUF,SAAV,EAAsBG,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaH,QAAQ,CAACG,EAAtD,CAAd,CAFkC,CAIlC;;;IACA,IAAIF,KAAK,KAAK,CAAC,CAAf,EAAkB;MAChB;MACAF,SAAS,CAACE,KAAD,CAAT,CAAiBG,MAAjB,GAA0B,CACxB,GAAGL,SAAS,CAACE,KAAD,CAAT,CAAiBG,MADI,EAExB,GAAGJ,QAAQ,CAACI,MAFY,CAA1B;IAID,CAND,MAMO;MACL;MACAL,SAAS,CAACM,IAAV,CAAeL,QAAf;IACD;EACF,CAfD;;EAiBA,uCACKH,MADL;IAEEE;EAFF;AAID"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}