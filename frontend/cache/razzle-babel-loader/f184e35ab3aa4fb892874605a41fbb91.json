{"ast":null,"code":"var _jsxFileName = \"/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-slider-block/src/components/DefaultBody.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport { getTeaserImageURL } from '../helpers';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { Icon, MaybeWrap, UniversalLink } from '@plone/volto/components';\nimport { Input, Button, Message } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nconst messages = defineMessages({\n  PleaseChooseContent: {\n    \"id\": \"Please choose an existing content as source for this element\",\n    \"defaultMessage\": \"Please choose an existing content as source for this element\"\n  },\n  moreInfo: {\n    \"id\": \"moreInfo\",\n    \"defaultMessage\": \"More info\"\n  },\n  source: {\n    \"id\": \"Source\",\n    \"defaultMessage\": \"Source\"\n  }\n});\n\nconst SliderBody = _ref => {\n  _s();\n\n  var _data$href, _data$preview_image;\n\n  let {\n    index,\n    onChangeBlock,\n    block,\n    data,\n    dataBlock,\n    isEditMode,\n    openObjectBrowser\n  } = _ref;\n  const intl = useIntl();\n  const href = (_data$href = data.href) === null || _data$href === void 0 ? void 0 : _data$href[0];\n  const image = (_data$preview_image = data.preview_image) === null || _data$preview_image === void 0 ? void 0 : _data$preview_image[0];\n\n  const handleClick = () => {\n    openObjectBrowser({\n      onSelectItem: (url, document) => {\n        dataBlock.slides[index].title = document.Title;\n        dataBlock.slides[index].description = document.Description;\n        dataBlock.slides[index].href = [{\n          '@id': document['@id'],\n          Title: document.Title,\n          Description: document.Description,\n          title: document.Title,\n          image_field: document.image_field,\n          hasPreviewImage: document.hasPreviewImage\n        }];\n        onChangeBlock(block, dataBlock);\n      },\n      mode: 'link'\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: cx('grid-teaser-item top', {\n      'empty-slide': !href && isEditMode\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, !href && isEditMode && __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-teaser-item default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: imageBlockSVG,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, intl.formatMessage(messages.PleaseChooseContent)), __jsx(\"div\", {\n    className: \"toolbar-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    onClick: handleClick,\n    icon: true,\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    name: navTreeSVG,\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }))), __jsx(Input, {\n    placeholder: `${intl.formatMessage(messages.source)}...`,\n    onClick: handleClick,\n    onFocus: e => e.target.blur(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })))), href && __jsx(\"div\", {\n    className: \"teaser-item top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(MaybeWrap, {\n    condition: !isEditMode,\n    as: UniversalLink,\n    href: href['@id'],\n    target: data.openLinkInNewTab ? '_blank' : null,\n    tabIndex: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, ((href === null || href === void 0 ? void 0 : href.hasPreviewImage) || image) && __jsx(\"div\", {\n    className: \"highlight-image-wrapper gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: flattenToAppURL(getTeaserImageURL(href, image, 'great')),\n    alt: \"\",\n    loading: \"lazy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"teaser-item-title fix-width-issue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, (data === null || data === void 0 ? void 0 : data.head_title) && __jsx(\"span\", {\n    className: \"supertitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, data === null || data === void 0 ? void 0 : data.head_title), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, (data === null || data === void 0 ? void 0 : data.nav_title) || (data === null || data === void 0 ? void 0 : data.title))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, data === null || data === void 0 ? void 0 : data.description)))));\n};\n\n_s(SliderBody, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n\n_c = SliderBody;\nexport default SliderBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderBody\");","map":{"version":3,"names":["React","useIntl","defineMessages","getTeaserImageURL","flattenToAppURL","Icon","MaybeWrap","UniversalLink","Input","Button","Message","cx","navTreeSVG","imageBlockSVG","messages","PleaseChooseContent","moreInfo","source","SliderBody","index","onChangeBlock","block","data","dataBlock","isEditMode","openObjectBrowser","intl","href","image","preview_image","handleClick","onSelectItem","url","document","slides","title","Title","description","Description","image_field","hasPreviewImage","mode","formatMessage","e","target","blur","openLinkInNewTab","head_title","nav_title"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-slider-block/src/components/DefaultBody.jsx"],"sourcesContent":["import React from 'react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport { getTeaserImageURL } from '../helpers';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { Icon, MaybeWrap, UniversalLink } from '@plone/volto/components';\nimport { Input, Button, Message } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\n\nconst messages = defineMessages({\n  PleaseChooseContent: {\n    id: 'Please choose an existing content as source for this element',\n    defaultMessage:\n      'Please choose an existing content as source for this element',\n  },\n  moreInfo: {\n    id: 'moreInfo',\n    defaultMessage: 'More info',\n  },\n  source: {\n    id: 'Source',\n    defaultMessage: 'Source',\n  },\n});\n\nconst SliderBody = ({\n  index,\n  onChangeBlock,\n  block,\n  data,\n  dataBlock,\n  isEditMode,\n  openObjectBrowser,\n}) => {\n  const intl = useIntl();\n  const href = data.href?.[0];\n  const image = data.preview_image?.[0];\n\n  const handleClick = () => {\n    openObjectBrowser({\n      onSelectItem: (url, document) => {\n        dataBlock.slides[index].title = document.Title;\n        dataBlock.slides[index].description = document.Description;\n        dataBlock.slides[index].href = [\n          {\n            '@id': document['@id'],\n            Title: document.Title,\n            Description: document.Description,\n            title: document.Title,\n            image_field: document.image_field,\n            hasPreviewImage: document.hasPreviewImage,\n          },\n        ];\n        onChangeBlock(block, dataBlock);\n      },\n      mode: 'link',\n    });\n  };\n\n  return (\n    <div\n      className={cx('grid-teaser-item top', {\n        'empty-slide': !href && isEditMode,\n      })}\n    >\n      {!href && isEditMode && (\n        <Message>\n          <div className=\"grid-teaser-item default\">\n            <img src={imageBlockSVG} alt=\"\" />\n            <p>{intl.formatMessage(messages.PleaseChooseContent)}</p>\n            <div className=\"toolbar-inner\">\n              <Button.Group>\n                <Button onClick={handleClick} icon basic>\n                  <Icon name={navTreeSVG} size=\"24px\" />\n                </Button>\n              </Button.Group>\n              <Input\n                placeholder={`${intl.formatMessage(messages.source)}...`}\n                onClick={handleClick}\n                onFocus={(e) => e.target.blur()}\n              />\n            </div>\n          </div>\n        </Message>\n      )}\n      {href && (\n        <div className=\"teaser-item top\">\n          <MaybeWrap\n            condition={!isEditMode}\n            as={UniversalLink}\n            href={href['@id']}\n            target={data.openLinkInNewTab ? '_blank' : null}\n            tabIndex=\"-1\"\n          >\n            {(href?.hasPreviewImage || image) && (\n              <div className=\"highlight-image-wrapper gradient\">\n                <img\n                  src={flattenToAppURL(getTeaserImageURL(href, image, 'great'))}\n                  alt=\"\"\n                  loading=\"lazy\"\n                />\n              </div>\n            )}\n            <div className=\"teaser-item-title fix-width-issue\">\n              <div className=\"title\">\n                {data?.head_title && (\n                  <span className=\"supertitle\">{data?.head_title}</span>\n                )}\n                <h2>{data?.nav_title || data?.title}</h2>\n              </div>\n              <p>{data?.description}</p>\n            </div>\n          </MaybeWrap>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SliderBody;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Please choose an existing content as source for this element","defaultMessage":"Please choose an existing content as source for this element"},{"id":"moreInfo","defaultMessage":"More info"},{"id":"Source","defaultMessage":"Source"}]}},"sourceType":"module"}