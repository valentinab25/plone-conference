{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GridViewBlock, GridEditBlock, TeaserViewBlock, TeaserEditBlock, TeaserBlockDefaultBody } from './components';\nimport gridSVG from './icons/grid.svg';\nimport imagesSVG from '@plone/volto/icons/images.svg';\nimport './theme/styles.less';\nconst customBlocks = {\n  __grid: {\n    id: '__grid',\n    title: 'Grid',\n    icon: gridSVG,\n    group: 'common',\n    view: GridViewBlock,\n    edit: GridEditBlock,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    // This has a good reason: Slate does not work in detached mode if enabled\n    blockHasOwnFocusManagement: true,\n    security: {\n      addPermission: [],\n      view: []\n    },\n    maxNumberOfColumns: 4,\n    gridAllowedBlocks: ['teaser', 'image', 'listing', 'slate', 'text']\n  },\n  teaserGrid: {\n    id: 'teaserGrid',\n    title: 'Teaser Grid',\n    icon: imagesSVG,\n    group: 'teasers',\n    view: GridViewBlock,\n    edit: GridEditBlock,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: []\n    },\n    gridAllowedBlocks: ['teaser']\n  },\n  imagesGrid: {\n    id: 'imagesGrid',\n    title: 'Images grid',\n    icon: imagesSVG,\n    group: 'common',\n    view: GridViewBlock,\n    edit: GridEditBlock,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: []\n    },\n    gridAllowedBlocks: ['image']\n  },\n  teaser: {\n    id: 'teaser',\n    title: 'Teaser',\n    icon: imagesSVG,\n    group: 'common',\n    view: TeaserViewBlock,\n    edit: TeaserEditBlock,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    variations: [{\n      id: 'default',\n      isDefault: true,\n      title: 'Default',\n      template: TeaserBlockDefaultBody\n    }]\n  }\n};\n\nconst applyConfig = config => {\n  config.blocks.blocksConfig = _objectSpread(_objectSpread({}, config.blocks.blocksConfig), customBlocks);\n  return config;\n};\n\nexport default applyConfig;","map":{"version":3,"names":["GridViewBlock","GridEditBlock","TeaserViewBlock","TeaserEditBlock","TeaserBlockDefaultBody","gridSVG","imagesSVG","customBlocks","__grid","id","title","icon","group","view","edit","restricted","mostUsed","sidebarTab","blockHasOwnFocusManagement","security","addPermission","maxNumberOfColumns","gridAllowedBlocks","teaserGrid","imagesGrid","teaser","variations","isDefault","template","applyConfig","config","blocks","blocksConfig"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-blocks-grid/src/index.js"],"sourcesContent":["import {\n  GridViewBlock,\n  GridEditBlock,\n  TeaserViewBlock,\n  TeaserEditBlock,\n  TeaserBlockDefaultBody,\n} from './components';\nimport gridSVG from './icons/grid.svg';\nimport imagesSVG from '@plone/volto/icons/images.svg';\n\nimport './theme/styles.less';\n\nconst customBlocks = {\n  __grid: {\n    id: '__grid',\n    title: 'Grid',\n    icon: gridSVG,\n    group: 'common',\n    view: GridViewBlock,\n    edit: GridEditBlock,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    // This has a good reason: Slate does not work in detached mode if enabled\n    blockHasOwnFocusManagement: true,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    maxNumberOfColumns: 4,\n    gridAllowedBlocks: ['teaser', 'image', 'listing', 'slate', 'text'],\n  },\n  teaserGrid: {\n    id: 'teaserGrid',\n    title: 'Teaser Grid',\n    icon: imagesSVG,\n    group: 'teasers',\n    view: GridViewBlock,\n    edit: GridEditBlock,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    gridAllowedBlocks: ['teaser'],\n  },\n  imagesGrid: {\n    id: 'imagesGrid',\n    title: 'Images grid',\n    icon: imagesSVG,\n    group: 'common',\n    view: GridViewBlock,\n    edit: GridEditBlock,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    gridAllowedBlocks: ['image'],\n  },\n  teaser: {\n    id: 'teaser',\n    title: 'Teaser',\n    icon: imagesSVG,\n    group: 'common',\n    view: TeaserViewBlock,\n    edit: TeaserEditBlock,\n    restricted: false,\n    mostUsed: true,\n    sidebarTab: 1,\n    variations: [\n      {\n        id: 'default',\n        isDefault: true,\n        title: 'Default',\n        template: TeaserBlockDefaultBody,\n      },\n    ],\n  },\n};\n\nconst applyConfig = (config) => {\n  config.blocks.blocksConfig = {\n    ...config.blocks.blocksConfig,\n    ...customBlocks,\n  };\n\n  return config;\n};\n\nexport default applyConfig;\n"],"mappings":";;;;;;AAAA,SACEA,aADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,sBALF,QAMO,cANP;AAOA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AAEA,OAAO,qBAAP;AAEA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;IACNC,EAAE,EAAE,QADE;IAENC,KAAK,EAAE,MAFD;IAGNC,IAAI,EAAEN,OAHA;IAINO,KAAK,EAAE,QAJD;IAKNC,IAAI,EAAEb,aALA;IAMNc,IAAI,EAAEb,aANA;IAONc,UAAU,EAAE,KAPN;IAQNC,QAAQ,EAAE,IARJ;IASNC,UAAU,EAAE,CATN;IAUN;IACAC,0BAA0B,EAAE,IAXtB;IAYNC,QAAQ,EAAE;MACRC,aAAa,EAAE,EADP;MAERP,IAAI,EAAE;IAFE,CAZJ;IAgBNQ,kBAAkB,EAAE,CAhBd;IAiBNC,iBAAiB,EAAE,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,EAA+B,OAA/B,EAAwC,MAAxC;EAjBb,CADW;EAoBnBC,UAAU,EAAE;IACVd,EAAE,EAAE,YADM;IAEVC,KAAK,EAAE,aAFG;IAGVC,IAAI,EAAEL,SAHI;IAIVM,KAAK,EAAE,SAJG;IAKVC,IAAI,EAAEb,aALI;IAMVc,IAAI,EAAEb,aANI;IAOVc,UAAU,EAAE,KAPF;IAQVC,QAAQ,EAAE,IARA;IASVC,UAAU,EAAE,CATF;IAUVE,QAAQ,EAAE;MACRC,aAAa,EAAE,EADP;MAERP,IAAI,EAAE;IAFE,CAVA;IAcVS,iBAAiB,EAAE,CAAC,QAAD;EAdT,CApBO;EAoCnBE,UAAU,EAAE;IACVf,EAAE,EAAE,YADM;IAEVC,KAAK,EAAE,aAFG;IAGVC,IAAI,EAAEL,SAHI;IAIVM,KAAK,EAAE,QAJG;IAKVC,IAAI,EAAEb,aALI;IAMVc,IAAI,EAAEb,aANI;IAOVc,UAAU,EAAE,KAPF;IAQVC,QAAQ,EAAE,IARA;IASVC,UAAU,EAAE,CATF;IAUVE,QAAQ,EAAE;MACRC,aAAa,EAAE,EADP;MAERP,IAAI,EAAE;IAFE,CAVA;IAcVS,iBAAiB,EAAE,CAAC,OAAD;EAdT,CApCO;EAoDnBG,MAAM,EAAE;IACNhB,EAAE,EAAE,QADE;IAENC,KAAK,EAAE,QAFD;IAGNC,IAAI,EAAEL,SAHA;IAINM,KAAK,EAAE,QAJD;IAKNC,IAAI,EAAEX,eALA;IAMNY,IAAI,EAAEX,eANA;IAONY,UAAU,EAAE,KAPN;IAQNC,QAAQ,EAAE,IARJ;IASNC,UAAU,EAAE,CATN;IAUNS,UAAU,EAAE,CACV;MACEjB,EAAE,EAAE,SADN;MAEEkB,SAAS,EAAE,IAFb;MAGEjB,KAAK,EAAE,SAHT;MAIEkB,QAAQ,EAAExB;IAJZ,CADU;EAVN;AApDW,CAArB;;AAyEA,MAAMyB,WAAW,GAAIC,MAAD,IAAY;EAC9BA,MAAM,CAACC,MAAP,CAAcC,YAAd,mCACKF,MAAM,CAACC,MAAP,CAAcC,YADnB,GAEKzB,YAFL;EAKA,OAAOuB,MAAP;AACD,CAPD;;AASA,eAAeD,WAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}