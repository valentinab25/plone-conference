{"ast":null,"code":"var __jsx = React.createElement;\n\n/**\n * PasswordWidget component.\n * @module components/manage/Widgets/PassswordWidget\n */\nimport React from 'react';\nimport { Input } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { injectIntl } from 'react-intl';\n/**\n * PasswordWidget component class.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Password\",\n *  type: 'password',\n * }\n * ```\n */\n\nconst PasswordWidget = props => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder\n  } = props;\n  return __jsx(FormFieldWrapper, props, __jsx(Input, {\n    id: `field-${id}`,\n    name: id,\n    type: \"password\",\n    disabled: props.isDisabled,\n    value: value || '',\n    placeholder: placeholder,\n    onChange: ({\n      target\n    }) => onChange(id, target.value === '' ? undefined : target.value),\n    onBlur: ({\n      target\n    }) => onBlur(id, target.value === '' ? undefined : target.value),\n    onClick: () => onClick(),\n    minLength: minLength || null,\n    maxLength: maxLength || null,\n    autoComplete: \"off\"\n  }));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nPasswordWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null\n};\nexport default injectIntl(PasswordWidget);","map":{"version":3,"names":["React","Input","FormFieldWrapper","injectIntl","PasswordWidget","props","id","value","onChange","onBlur","onClick","minLength","maxLength","placeholder","isDisabled","target","undefined","defaultProps","description","required","error"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/Widgets/PasswordWidget.jsx"],"sourcesContent":["/**\n * PasswordWidget component.\n * @module components/manage/Widgets/PassswordWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { injectIntl } from 'react-intl';\n\n/**\n * PasswordWidget component class.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Password\",\n *  type: 'password',\n * }\n * ```\n */\nconst PasswordWidget = (props) => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n  } = props;\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Input\n        id={`field-${id}`}\n        name={id}\n        type=\"password\"\n        disabled={props.isDisabled}\n        value={value || ''}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onChange(id, target.value === '' ? undefined : target.value)\n        }\n        onBlur={({ target }) =>\n          onBlur(id, target.value === '' ? undefined : target.value)\n        }\n        onClick={() => onClick()}\n        minLength={minLength || null}\n        maxLength={maxLength || null}\n        autoComplete=\"off\"\n      />\n    </FormFieldWrapper>\n  );\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nPasswordWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nPasswordWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null,\n};\n\nexport default injectIntl(PasswordWidget);\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAChC,MAAM;IACJC,EADI;IAEJC,KAFI;IAGJC,QAHI;IAIJC,MAJI;IAKJC,OALI;IAMJC,SANI;IAOJC,SAPI;IAQJC;EARI,IASFR,KATJ;EAWA,OACE,MAAC,gBAAD,EAAsBA,KAAtB,EACE,MAAC,KAAD;IACE,EAAE,EAAG,SAAQC,EAAG,EADlB;IAEE,IAAI,EAAEA,EAFR;IAGE,IAAI,EAAC,UAHP;IAIE,QAAQ,EAAED,KAAK,CAACS,UAJlB;IAKE,KAAK,EAAEP,KAAK,IAAI,EALlB;IAME,WAAW,EAAEM,WANf;IAOE,QAAQ,EAAE,CAAC;MAAEE;IAAF,CAAD,KACRP,QAAQ,CAACF,EAAD,EAAKS,MAAM,CAACR,KAAP,KAAiB,EAAjB,GAAsBS,SAAtB,GAAkCD,MAAM,CAACR,KAA9C,CARZ;IAUE,MAAM,EAAE,CAAC;MAAEQ;IAAF,CAAD,KACNN,MAAM,CAACH,EAAD,EAAKS,MAAM,CAACR,KAAP,KAAiB,EAAjB,GAAsBS,SAAtB,GAAkCD,MAAM,CAACR,KAA9C,CAXV;IAaE,OAAO,EAAE,MAAMG,OAAO,EAbxB;IAcE,SAAS,EAAEC,SAAS,IAAI,IAd1B;IAeE,SAAS,EAAEC,SAAS,IAAI,IAf1B;IAgBE,YAAY,EAAC;EAhBf,EADF,CADF;AAsBD,CAlCD;AAmCA;AACA;AACA;AACA;AACA;;;AAiBA;AACA;AACA;AACA;AACA;AACAR,cAAc,CAACa,YAAf,GAA8B;EAC5BC,WAAW,EAAE,IADe;EAE5BC,QAAQ,EAAE,KAFkB;EAG5BC,KAAK,EAAE,EAHqB;EAI5Bb,KAAK,EAAE,IAJqB;EAK5BC,QAAQ,EAAE,MAAM,CAAE,CALU;EAM5BC,MAAM,EAAE,MAAM,CAAE,CANY;EAO5BC,OAAO,EAAE,MAAM,CAAE,CAPW;EAQ5BC,SAAS,EAAE,IARiB;EAS5BC,SAAS,EAAE;AATiB,CAA9B;AAYA,eAAeT,UAAU,CAACC,cAAD,CAAzB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}