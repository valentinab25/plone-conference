{"ast":null,"code":"import _defineProperty from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _map from \"lodash/map\";\nvar __jsx = React.createElement;\n\n/**\n * FormFieldWrapper component.\n * @module components/manage/Widgets/FormFieldWrapper\n */\nimport React, { Component } from 'react';\nimport { Form, Grid, Icon as IconOld, Label } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { defineMessages, injectIntl } from 'react-intl';\nconst messages = defineMessages({\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Edit\"\n  },\n  delete: {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  language_independent: {\n    \"id\": \"Language independent field.\",\n    \"defaultMessage\": \"Language independent field.\"\n  }\n});\n/**\n * FormFieldWrapper component class.\n * @class FormFieldWrapper\n * @extends Component\n */\n\nclass FormFieldWrapper extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      title,\n      description,\n      fieldSet,\n      required,\n      error,\n      wrapped,\n      columns,\n      draggable,\n      onEdit,\n      className,\n      isDisabled,\n      onDelete,\n      intl,\n      noForInFieldLabel,\n      multilingual_options\n    } = this.props;\n\n    const wdg = __jsx(React.Fragment, null, this.props.children, _map(error, message => __jsx(Label, {\n      key: message,\n      basic: true,\n      color: \"red\",\n      pointing: true\n    }, message)));\n\n    return wrapped ? __jsx(Form.Field, {\n      inline: true,\n      required: required,\n      error: error.length > 0,\n      className: cx(description ? 'help' : '', className, `field-wrapper-${id}`, multilingual_options !== null && multilingual_options !== void 0 && multilingual_options.language_independent ? 'language-independent-field' : null)\n    }, __jsx(Grid, null, __jsx(Grid.Row, {\n      stretched: true\n    }, columns === 2 && __jsx(Grid.Column, {\n      width: \"4\"\n    }, __jsx(\"div\", {\n      className: \"wrapper\"\n    }, __jsx(\"label\", {\n      id: `fieldset-${fieldSet}-field-label-${id}`,\n      htmlFor: noForInFieldLabel ? null : `field-${id}`\n    }, draggable && onEdit && __jsx(\"i\", {\n      \"aria-hidden\": \"true\",\n      className: \"grey bars icon drag handle\"\n    }), title))), __jsx(Grid.Column, {\n      width: columns === 2 ? 8 : 12\n    }, onEdit && !isDisabled && __jsx(\"div\", {\n      className: \"toolbar\",\n      style: {\n        zIndex: '2'\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": intl.formatMessage(messages.edit),\n      className: \"item ui noborder button\",\n      onClick: evt => {\n        evt.preventDefault();\n        onEdit(id);\n      }\n    }, __jsx(IconOld, {\n      name: \"write square\",\n      size: \"large\",\n      color: \"blue\"\n    })), __jsx(\"button\", {\n      \"aria-label\": intl.formatMessage(messages.delete),\n      className: \"item ui noborder button\",\n      onClick: evt => {\n        evt.preventDefault();\n        onDelete(id);\n      }\n    }, __jsx(IconOld, {\n      name: \"close\",\n      size: \"large\",\n      color: \"red\"\n    }))), wdg)), description && __jsx(Grid.Row, {\n      stretched: true\n    }, __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\"\n    }, __jsx(\"p\", {\n      className: \"help\"\n    }, this.props.multilingual_options ? `${intl.formatMessage(messages.language_independent)} ` : null, description))))) : __jsx(React.Fragment, null, wdg);\n  }\n\n}\n\n_defineProperty(FormFieldWrapper, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  wrapped: true,\n  columns: 2,\n  onDelete: null,\n  intl: null,\n  isDisabled: null,\n  draggable: null\n});\n\nexport default injectIntl(FormFieldWrapper);","map":{"version":3,"names":["React","Component","Form","Grid","Icon","IconOld","Label","cx","defineMessages","injectIntl","messages","edit","delete","language_independent","FormFieldWrapper","render","id","title","description","fieldSet","required","error","wrapped","columns","draggable","onEdit","className","isDisabled","onDelete","intl","noForInFieldLabel","multilingual_options","props","wdg","children","message","length","zIndex","formatMessage","evt","preventDefault"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/Widgets/FormFieldWrapper.jsx"],"sourcesContent":["/**\n * FormFieldWrapper component.\n * @module components/manage/Widgets/FormFieldWrapper\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Grid, Icon as IconOld, Label } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport cx from 'classnames';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  language_independent: {\n    id: 'Language independent field.',\n    defaultMessage: 'Language independent field.',\n  },\n});\n/**\n * FormFieldWrapper component class.\n * @class FormFieldWrapper\n * @extends Component\n */\nclass FormFieldWrapper extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    wrapped: PropTypes.bool,\n    columns: PropTypes.number,\n    draggable: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    onEdit: PropTypes.func,\n    className: PropTypes.string,\n    onDelete: PropTypes.func,\n    intl: PropTypes.object,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    wrapped: true,\n    columns: 2,\n    onDelete: null,\n    intl: null,\n    isDisabled: null,\n    draggable: null,\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      title,\n      description,\n      fieldSet,\n      required,\n      error,\n      wrapped,\n      columns,\n      draggable,\n      onEdit,\n      className,\n      isDisabled,\n      onDelete,\n      intl,\n      noForInFieldLabel,\n      multilingual_options,\n    } = this.props;\n    const wdg = (\n      <>\n        {this.props.children}\n\n        {map(error, (message) => (\n          <Label key={message} basic color=\"red\" pointing>\n            {message}\n          </Label>\n        ))}\n      </>\n    );\n\n    return wrapped ? (\n      <Form.Field\n        inline\n        required={required}\n        error={error.length > 0}\n        className={cx(\n          description ? 'help' : '',\n          className,\n          `field-wrapper-${id}`,\n          multilingual_options?.language_independent\n            ? 'language-independent-field'\n            : null,\n        )}\n      >\n        <Grid>\n          <Grid.Row stretched>\n            {columns === 2 && (\n              <Grid.Column width=\"4\">\n                <div className=\"wrapper\">\n                  <label\n                    id={`fieldset-${fieldSet}-field-label-${id}`}\n                    htmlFor={noForInFieldLabel ? null : `field-${id}`}\n                  >\n                    {draggable && onEdit && (\n                      <i\n                        aria-hidden=\"true\"\n                        className=\"grey bars icon drag handle\"\n                      />\n                    )}\n                    {title}\n                  </label>\n                </div>\n              </Grid.Column>\n            )}\n            <Grid.Column width={columns === 2 ? 8 : 12}>\n              {onEdit && !isDisabled && (\n                <div className=\"toolbar\" style={{ zIndex: '2' }}>\n                  <button\n                    aria-label={intl.formatMessage(messages.edit)}\n                    className=\"item ui noborder button\"\n                    onClick={(evt) => {\n                      evt.preventDefault();\n                      onEdit(id);\n                    }}\n                  >\n                    <IconOld name=\"write square\" size=\"large\" color=\"blue\" />\n                  </button>\n                  <button\n                    aria-label={intl.formatMessage(messages.delete)}\n                    className=\"item ui noborder button\"\n                    onClick={(evt) => {\n                      evt.preventDefault();\n                      onDelete(id);\n                    }}\n                  >\n                    <IconOld name=\"close\" size=\"large\" color=\"red\" />\n                  </button>\n                </div>\n              )}\n              {wdg}\n            </Grid.Column>\n          </Grid.Row>\n          {description && (\n            <Grid.Row stretched>\n              <Grid.Column stretched width=\"12\">\n                <p className=\"help\">\n                  {this.props.multilingual_options\n                    ? `${intl.formatMessage(messages.language_independent)} `\n                    : null}\n                  {description}\n                </p>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Form.Field>\n    ) : (\n      <>{wdg}</>\n    );\n  }\n}\n\nexport default injectIntl(FormFieldWrapper);\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAAI,IAAIC,OAA7B,EAAsCC,KAAtC,QAAmD,mBAAnD;AAEA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,YAA3C;AAEA,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,IAAI;IAAA;IAAA;EAAA,CAD0B;EAK9BC,MAAM;IAAA;IAAA;EAAA,CALwB;EAS9BC,oBAAoB;IAAA;IAAA;EAAA;AATU,CAAD,CAA/B;AAcA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAN,SAA+Bb,SAA/B,CAAyC;EACvC;AACF;AACA;AACA;AACA;;EAiBE;AACF;AACA;AACA;AACA;;EAaE;AACF;AACA;AACA;AACA;EACEc,MAAM,GAAG;IACP,MAAM;MACJC,EADI;MAEJC,KAFI;MAGJC,WAHI;MAIJC,QAJI;MAKJC,QALI;MAMJC,KANI;MAOJC,OAPI;MAQJC,OARI;MASJC,SATI;MAUJC,MAVI;MAWJC,SAXI;MAYJC,UAZI;MAaJC,QAbI;MAcJC,IAdI;MAeJC,iBAfI;MAgBJC;IAhBI,IAiBF,KAAKC,KAjBT;;IAkBA,MAAMC,GAAG,GACP,4BACG,KAAKD,KAAL,CAAWE,QADd,EAGG,KAAIb,KAAJ,EAAYc,OAAD,IACV,MAAC,KAAD;MAAO,GAAG,EAAEA,OAAZ;MAAqB,KAAK,MAA1B;MAA2B,KAAK,EAAC,KAAjC;MAAuC,QAAQ;IAA/C,GACGA,OADH,CADD,CAHH,CADF;;IAYA,OAAOb,OAAO,GACZ,MAAC,IAAD,CAAM,KAAN;MACE,MAAM,MADR;MAEE,QAAQ,EAAEF,QAFZ;MAGE,KAAK,EAAEC,KAAK,CAACe,MAAN,GAAe,CAHxB;MAIE,SAAS,EAAE7B,EAAE,CACXW,WAAW,GAAG,MAAH,GAAY,EADZ,EAEXQ,SAFW,EAGV,iBAAgBV,EAAG,EAHT,EAIXe,oBAAoB,SAApB,IAAAA,oBAAoB,WAApB,IAAAA,oBAAoB,CAAElB,oBAAtB,GACI,4BADJ,GAEI,IANO;IAJf,GAaE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN;MAAU,SAAS;IAAnB,GACGU,OAAO,KAAK,CAAZ,IACC,MAAC,IAAD,CAAM,MAAN;MAAa,KAAK,EAAC;IAAnB,GACE;MAAK,SAAS,EAAC;IAAf,GACE;MACE,EAAE,EAAG,YAAWJ,QAAS,gBAAeH,EAAG,EAD7C;MAEE,OAAO,EAAEc,iBAAiB,GAAG,IAAH,GAAW,SAAQd,EAAG;IAFlD,GAIGQ,SAAS,IAAIC,MAAb,IACC;MACE,eAAY,MADd;MAEE,SAAS,EAAC;IAFZ,EALJ,EAUGR,KAVH,CADF,CADF,CAFJ,EAmBE,MAAC,IAAD,CAAM,MAAN;MAAa,KAAK,EAAEM,OAAO,KAAK,CAAZ,GAAgB,CAAhB,GAAoB;IAAxC,GACGE,MAAM,IAAI,CAACE,UAAX,IACC;MAAK,SAAS,EAAC,SAAf;MAAyB,KAAK,EAAE;QAAEU,MAAM,EAAE;MAAV;IAAhC,GACE;MACE,cAAYR,IAAI,CAACS,aAAL,CAAmB5B,QAAQ,CAACC,IAA5B,CADd;MAEE,SAAS,EAAC,yBAFZ;MAGE,OAAO,EAAG4B,GAAD,IAAS;QAChBA,GAAG,CAACC,cAAJ;QACAf,MAAM,CAACT,EAAD,CAAN;MACD;IANH,GAQE,MAAC,OAAD;MAAS,IAAI,EAAC,cAAd;MAA6B,IAAI,EAAC,OAAlC;MAA0C,KAAK,EAAC;IAAhD,EARF,CADF,EAWE;MACE,cAAYa,IAAI,CAACS,aAAL,CAAmB5B,QAAQ,CAACE,MAA5B,CADd;MAEE,SAAS,EAAC,yBAFZ;MAGE,OAAO,EAAG2B,GAAD,IAAS;QAChBA,GAAG,CAACC,cAAJ;QACAZ,QAAQ,CAACZ,EAAD,CAAR;MACD;IANH,GAQE,MAAC,OAAD;MAAS,IAAI,EAAC,OAAd;MAAsB,IAAI,EAAC,OAA3B;MAAmC,KAAK,EAAC;IAAzC,EARF,CAXF,CAFJ,EAyBGiB,GAzBH,CAnBF,CADF,EAgDGf,WAAW,IACV,MAAC,IAAD,CAAM,GAAN;MAAU,SAAS;IAAnB,GACE,MAAC,IAAD,CAAM,MAAN;MAAa,SAAS,MAAtB;MAAuB,KAAK,EAAC;IAA7B,GACE;MAAG,SAAS,EAAC;IAAb,GACG,KAAKc,KAAL,CAAWD,oBAAX,GACI,GAAEF,IAAI,CAACS,aAAL,CAAmB5B,QAAQ,CAACG,oBAA5B,CAAkD,GADxD,GAEG,IAHN,EAIGK,WAJH,CADF,CADF,CAjDJ,CAbF,CADY,GA6EZ,4BAAGe,GAAH,CA7EF;EA+ED;;AA1JsC;;gBAAnCnB,gB,kBA2BkB;EACpBI,WAAW,EAAE,IADO;EAEpBE,QAAQ,EAAE,KAFU;EAGpBC,KAAK,EAAE,EAHa;EAIpBC,OAAO,EAAE,IAJW;EAKpBC,OAAO,EAAE,CALW;EAMpBK,QAAQ,EAAE,IANU;EAOpBC,IAAI,EAAE,IAPc;EAQpBF,UAAU,EAAE,IARQ;EASpBH,SAAS,EAAE;AATS,C;;AAkIxB,eAAef,UAAU,CAACK,gBAAD,CAAzB"},"metadata":{"react-intl":{"messages":[{"id":"Edit","defaultMessage":"Edit"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Language independent field.","defaultMessage":"Language independent field."}]}},"sourceType":"module"}