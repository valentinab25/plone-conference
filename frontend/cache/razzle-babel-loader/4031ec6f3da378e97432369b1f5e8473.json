{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { SearchInput, SearchDetails, Facets, FilterList, SortOn } from '../components';\nimport { Grid } from 'semantic-ui-react';\nimport { Button } from 'semantic-ui-react';\nimport { flushSync } from 'react-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nconst messages = defineMessages({\n  searchButtonText: {\n    \"id\": \"Search\",\n    \"defaultMessage\": \"Search\"\n  }\n});\n\nconst FacetWrapper = ({\n  children\n}) => __jsx(Grid.Column, {\n  mobile: 12,\n  tablet: 4,\n  computer: 3\n}, children);\n\nconst TopSideFacets = props => {\n  var _data$facets;\n\n  const {\n    children,\n    data,\n    totalItems,\n    facets,\n    setFacets,\n    setSortOn,\n    setSortOrder,\n    sortOn,\n    sortOrder,\n    onTriggerSearch,\n    searchedText,\n    // search text for previous search\n    searchText,\n    // search text currently being entered (controlled input)\n    isEditMode,\n    querystring = {} // searchData,\n    // mode = 'view',\n    // variation,\n\n  } = props;\n  const {\n    showSearchButton\n  } = data;\n  const isLive = !showSearchButton;\n  const intl = useIntl();\n  return __jsx(Grid, {\n    className: \"searchBlock-facets\",\n    stackable: true\n  }, __jsx(Grid.Row, null, __jsx(Grid.Column, null, data.headline && __jsx(\"h2\", {\n    className: \"headline\"\n  }, data.headline))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, (Object.keys(data).includes('showSearchInput') ? data.showSearchInput : true) && __jsx(\"div\", {\n    className: \"search-wrapper\"\n  }, __jsx(SearchInput, _extends({}, props, {\n    isLive: isLive\n  })), data.showSearchButton && __jsx(Button, {\n    primary: true,\n    onClick: () => onTriggerSearch(searchText)\n  }, data.searchButtonLabel || intl.formatMessage(messages.searchButtonText))), __jsx(\"div\", {\n    className: \"search-filters-sort\"\n  }, __jsx(FilterList, _extends({}, props, {\n    isEditMode: isEditMode,\n    setFacets: f => {\n      flushSync(() => {\n        setFacets(f);\n        onTriggerSearch(searchedText || '', f);\n      });\n    }\n  })), data.showSortOn && __jsx(SortOn, {\n    data: data,\n    querystring: querystring,\n    isEditMode: isEditMode,\n    sortOn: sortOn,\n    sortOrder: sortOrder,\n    setSortOn: sortOn => {\n      flushSync(() => {\n        setSortOn(sortOn);\n        onTriggerSearch(searchedText || '', facets, sortOn);\n      });\n    },\n    setSortOrder: sortOrder => {\n      flushSync(() => {\n        setSortOrder(sortOrder);\n        onTriggerSearch(searchedText || '', facets, sortOn, sortOrder);\n      });\n    }\n  })), ((_data$facets = data.facets) === null || _data$facets === void 0 ? void 0 : _data$facets.length) > 0 && __jsx(\"div\", {\n    className: \"facets\"\n  }, data.facetsTitle && __jsx(\"h3\", null, data.facetsTitle), __jsx(Grid, {\n    verticalAlign: \"bottom\",\n    columns: 12\n  }, __jsx(Facets, {\n    data: data,\n    querystring: querystring,\n    facets: facets,\n    setFacets: f => {\n      flushSync(() => {\n        setFacets(f);\n        onTriggerSearch(searchedText || '', f);\n      });\n    },\n    facetWrapper: FacetWrapper\n  }))), __jsx(SearchDetails, {\n    text: searchedText,\n    total: totalItems,\n    as: \"h5\",\n    data: data\n  }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, children)));\n};\n\nexport default TopSideFacets;","map":{"version":3,"names":["React","SearchInput","SearchDetails","Facets","FilterList","SortOn","Grid","Button","flushSync","defineMessages","useIntl","messages","searchButtonText","FacetWrapper","children","TopSideFacets","props","data","totalItems","facets","setFacets","setSortOn","setSortOrder","sortOn","sortOrder","onTriggerSearch","searchedText","searchText","isEditMode","querystring","showSearchButton","isLive","intl","headline","Object","keys","includes","showSearchInput","searchButtonLabel","formatMessage","f","showSortOn","length","facetsTitle"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/layout/TopSideFacets.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  SearchInput,\n  SearchDetails,\n  Facets,\n  FilterList,\n  SortOn,\n} from '../components';\nimport { Grid } from 'semantic-ui-react';\nimport { Button } from 'semantic-ui-react';\nimport { flushSync } from 'react-dom';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  searchButtonText: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\nconst FacetWrapper = ({ children }) => (\n  <Grid.Column mobile={12} tablet={4} computer={3}>\n    {children}\n  </Grid.Column>\n);\n\nconst TopSideFacets = (props) => {\n  const {\n    children,\n    data,\n    totalItems,\n    facets,\n    setFacets,\n    setSortOn,\n    setSortOrder,\n    sortOn,\n    sortOrder,\n    onTriggerSearch,\n    searchedText, // search text for previous search\n    searchText, // search text currently being entered (controlled input)\n    isEditMode,\n    querystring = {},\n    // searchData,\n    // mode = 'view',\n    // variation,\n  } = props;\n  const { showSearchButton } = data;\n  const isLive = !showSearchButton;\n  const intl = useIntl();\n\n  return (\n    <Grid className=\"searchBlock-facets\" stackable>\n      <Grid.Row>\n        <Grid.Column>\n          {data.headline && <h2 className=\"headline\">{data.headline}</h2>}\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column>\n          {(Object.keys(data).includes('showSearchInput')\n            ? data.showSearchInput\n            : true) && (\n            <div className=\"search-wrapper\">\n              <SearchInput {...props} isLive={isLive} />\n              {data.showSearchButton && (\n                <Button primary onClick={() => onTriggerSearch(searchText)}>\n                  {data.searchButtonLabel ||\n                    intl.formatMessage(messages.searchButtonText)}\n                </Button>\n              )}\n            </div>\n          )}\n\n          <div className=\"search-filters-sort\">\n            <FilterList\n              {...props}\n              isEditMode={isEditMode}\n              setFacets={(f) => {\n                flushSync(() => {\n                  setFacets(f);\n                  onTriggerSearch(searchedText || '', f);\n                });\n              }}\n            />\n\n            {data.showSortOn && (\n              <SortOn\n                data={data}\n                querystring={querystring}\n                isEditMode={isEditMode}\n                sortOn={sortOn}\n                sortOrder={sortOrder}\n                setSortOn={(sortOn) => {\n                  flushSync(() => {\n                    setSortOn(sortOn);\n                    onTriggerSearch(searchedText || '', facets, sortOn);\n                  });\n                }}\n                setSortOrder={(sortOrder) => {\n                  flushSync(() => {\n                    setSortOrder(sortOrder);\n                    onTriggerSearch(\n                      searchedText || '',\n                      facets,\n                      sortOn,\n                      sortOrder,\n                    );\n                  });\n                }}\n              />\n            )}\n          </div>\n          {data.facets?.length > 0 && (\n            <div className=\"facets\">\n              {data.facetsTitle && <h3>{data.facetsTitle}</h3>}\n              <Grid verticalAlign=\"bottom\" columns={12}>\n                <Facets\n                  data={data}\n                  querystring={querystring}\n                  facets={facets}\n                  setFacets={(f) => {\n                    flushSync(() => {\n                      setFacets(f);\n                      onTriggerSearch(searchedText || '', f);\n                    });\n                  }}\n                  facetWrapper={FacetWrapper}\n                />\n              </Grid>\n            </div>\n          )}\n          <SearchDetails\n            text={searchedText}\n            total={totalItems}\n            as=\"h5\"\n            data={data}\n          />\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column>{children}</Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default TopSideFacets;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Search","defaultMessage":"Search"}]}},"sourceType":"module"}