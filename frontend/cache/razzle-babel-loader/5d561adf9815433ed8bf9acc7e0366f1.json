{"ast":null,"code":"var __jsx = React.createElement;\n\n/**\n * Personal information component.\n * @module components/manage/Preferences/PersonalInformation\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { messages } from '@plone/volto/helpers';\nimport { Form, Toast } from '@plone/volto/components';\nimport { getUser, updateUser, getUserSchema } from '@plone/volto/actions';\n/**\n * PersonalInformation class.\n * @class PersonalInformation\n * @extends Component\n */\n\nclass PersonalInformation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ChangePassword\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getUser(this.props.userId);\n    this.props.getUserSchema();\n  }\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n\n\n  onSubmit(data) {\n    // We don't want the user to change his login name/username or the roles\n    // from this form\n    // Backend will complain anyways, but we clean the data here before it does\n    delete data.id;\n    delete data.username;\n    delete data.roles;\n    this.props.updateUser(this.props.userId, data);\n    toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.saved)\n    }));\n    if (this.props.closeMenu) this.props.closeMenu();\n  }\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n\n\n  onCancel() {\n    if (this.props.closeMenu) this.props.closeMenu();else this.props.history.goBack();\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    var _this$props, _this$props$userschem, _this$props2;\n\n    return ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$userschem = _this$props.userschema) === null || _this$props$userschem === void 0 ? void 0 : _this$props$userschem.loaded) && __jsx(Form, {\n      formData: this.props.user,\n      schema: (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.userschema.userschema,\n      onSubmit: this.onSubmit,\n      onCancel: this.onCancel,\n      loading: this.props.loading\n    });\n  }\n\n}\n\nexport default compose(withRouter, injectIntl, connect((state, props) => ({\n  user: state.users.user,\n  userId: state.userSession.token ? jwtDecode(state.userSession.token).sub : '',\n  loaded: state.users.get.loaded,\n  loading: state.users.update.loading,\n  userschema: state.userschema\n}), {\n  getUser,\n  updateUser,\n  getUserSchema\n}))(PersonalInformation);","map":{"version":3,"names":["React","Component","connect","compose","injectIntl","withRouter","jwtDecode","toast","messages","Form","Toast","getUser","updateUser","getUserSchema","PersonalInformation","constructor","props","onCancel","bind","onSubmit","componentDidMount","userId","data","id","username","roles","success","intl","formatMessage","saved","closeMenu","history","goBack","render","userschema","loaded","user","loading","state","users","userSession","token","sub","get","update"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/Preferences/PersonalInformation.jsx"],"sourcesContent":["/**\n * Personal information component.\n * @module components/manage/Preferences/PersonalInformation\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { messages } from '@plone/volto/helpers';\nimport { Form, Toast } from '@plone/volto/components';\nimport { getUser, updateUser, getUserSchema } from '@plone/volto/actions';\n\n/**\n * PersonalInformation class.\n * @class PersonalInformation\n * @extends Component\n */\nclass PersonalInformation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    user: PropTypes.shape({\n      fullname: PropTypes.string,\n      email: PropTypes.string,\n      home_page: PropTypes.string,\n      location: PropTypes.string,\n    }).isRequired,\n    updateUser: PropTypes.func.isRequired,\n    getUser: PropTypes.func.isRequired,\n    userId: PropTypes.string.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    loading: PropTypes.bool,\n    closeMenu: PropTypes.func,\n    getUserSchema: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ChangePassword\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getUser(this.props.userId);\n    this.props.getUserSchema();\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    // We don't want the user to change his login name/username or the roles\n    // from this form\n    // Backend will complain anyways, but we clean the data here before it does\n    delete data.id;\n    delete data.username;\n    delete data.roles;\n    this.props.updateUser(this.props.userId, data);\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.saved)}\n      />,\n    );\n    if (this.props.closeMenu) this.props.closeMenu();\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    if (this.props.closeMenu) this.props.closeMenu();\n    else this.props.history.goBack();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props?.userschema?.loaded && (\n        <Form\n          formData={this.props.user}\n          schema={this.props?.userschema.userschema}\n          onSubmit={this.onSubmit}\n          onCancel={this.onCancel}\n          loading={this.props.loading}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      user: state.users.user,\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n      loaded: state.users.get.loaded,\n      loading: state.users.update.loading,\n      userschema: state.userschema,\n    }),\n    { getUser, updateUser, getUserSchema },\n  ),\n)(PersonalInformation);\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,yBAA5B;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,aAA9B,QAAmD,sBAAnD;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,mBAAN,SAAkCb,SAAlC,CAA4C;EAC1C;AACF;AACA;AACA;AACA;;EAiBE;AACF;AACA;AACA;AACA;AACA;EACEc,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;IACA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;EACD;;EAEDE,iBAAiB,GAAG;IAClB,KAAKJ,KAAL,CAAWL,OAAX,CAAmB,KAAKK,KAAL,CAAWK,MAA9B;IACA,KAAKL,KAAL,CAAWH,aAAX;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEM,QAAQ,CAACG,IAAD,EAAO;IACb;IACA;IACA;IACA,OAAOA,IAAI,CAACC,EAAZ;IACA,OAAOD,IAAI,CAACE,QAAZ;IACA,OAAOF,IAAI,CAACG,KAAZ;IACA,KAAKT,KAAL,CAAWJ,UAAX,CAAsB,KAAKI,KAAL,CAAWK,MAAjC,EAAyCC,IAAzC;IACAf,KAAK,CAACmB,OAAN,CACE,MAAC,KAAD;MACE,OAAO,MADT;MAEE,KAAK,EAAE,KAAKV,KAAL,CAAWW,IAAX,CAAgBC,aAAhB,CAA8BpB,QAAQ,CAACkB,OAAvC,CAFT;MAGE,OAAO,EAAE,KAAKV,KAAL,CAAWW,IAAX,CAAgBC,aAAhB,CAA8BpB,QAAQ,CAACqB,KAAvC;IAHX,EADF;IAOA,IAAI,KAAKb,KAAL,CAAWc,SAAf,EAA0B,KAAKd,KAAL,CAAWc,SAAX;EAC3B;EAED;AACF;AACA;AACA;AACA;;;EACEb,QAAQ,GAAG;IACT,IAAI,KAAKD,KAAL,CAAWc,SAAf,EAA0B,KAAKd,KAAL,CAAWc,SAAX,GAA1B,KACK,KAAKd,KAAL,CAAWe,OAAX,CAAmBC,MAAnB;EACN;EAED;AACF;AACA;AACA;AACA;;;EACEC,MAAM,GAAG;IAAA;;IACP,OACE,qBAAKjB,KAAL,qFAAYkB,UAAZ,gFAAwBC,MAAxB,KACE,MAAC,IAAD;MACE,QAAQ,EAAE,KAAKnB,KAAL,CAAWoB,IADvB;MAEE,MAAM,kBAAE,KAAKpB,KAAP,iDAAE,aAAYkB,UAAZ,CAAuBA,UAFjC;MAGE,QAAQ,EAAE,KAAKf,QAHjB;MAIE,QAAQ,EAAE,KAAKF,QAJjB;MAKE,OAAO,EAAE,KAAKD,KAAL,CAAWqB;IALtB,EAFJ;EAWD;;AA1FyC;;AA6F5C,eAAelC,OAAO,CACpBE,UADoB,EAEpBD,UAFoB,EAGpBF,OAAO,CACL,CAACoC,KAAD,EAAQtB,KAAR,MAAmB;EACjBoB,IAAI,EAAEE,KAAK,CAACC,KAAN,CAAYH,IADD;EAEjBf,MAAM,EAAEiB,KAAK,CAACE,WAAN,CAAkBC,KAAlB,GACJnC,SAAS,CAACgC,KAAK,CAACE,WAAN,CAAkBC,KAAnB,CAAT,CAAmCC,GAD/B,GAEJ,EAJa;EAKjBP,MAAM,EAAEG,KAAK,CAACC,KAAN,CAAYI,GAAZ,CAAgBR,MALP;EAMjBE,OAAO,EAAEC,KAAK,CAACC,KAAN,CAAYK,MAAZ,CAAmBP,OANX;EAOjBH,UAAU,EAAEI,KAAK,CAACJ;AAPD,CAAnB,CADK,EAUL;EAAEvB,OAAF;EAAWC,UAAX;EAAuBC;AAAvB,CAVK,CAHa,CAAP,CAebC,mBAfa,CAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}