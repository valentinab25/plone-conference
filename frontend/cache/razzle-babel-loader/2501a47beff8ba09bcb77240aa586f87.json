{"ast":null,"code":"var __jsx = React.createElement;\n\n/**\n * Summary view component.\n * @module components/theme/View/SummaryView\n */\nimport React from 'react';\nimport { UniversalLink } from '@plone/volto/components';\nimport { Container } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\nimport PreviewImage from '../PreviewImage/PreviewImage';\n/**\n * Summary view component class.\n * @function SummaryView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\n\nconst SummaryView = _ref => {\n  let {\n    content\n  } = _ref;\n  return __jsx(Container, {\n    className: \"view-wrapper summary-view\"\n  }, __jsx(\"article\", {\n    id: \"content\"\n  }, __jsx(\"header\", null, __jsx(\"h1\", {\n    className: \"documentFirstHeading\"\n  }, content.title), content.description && __jsx(\"p\", {\n    className: \"documentDescription\"\n  }, content.description)), __jsx(\"section\", {\n    id: \"content-core\"\n  }, content.items.map(item => __jsx(\"article\", {\n    key: item.url\n  }, __jsx(\"h2\", null, __jsx(UniversalLink, {\n    item: item,\n    title: item['@type']\n  }, item.title)), item.image_field && __jsx(PreviewImage, {\n    item: item,\n    alt: item.image_caption ? item.image_caption : item.title,\n    size: \"thumb\",\n    className: \"ui image floated right clear\"\n  }), item.description && __jsx(\"p\", null, item.description), __jsx(\"p\", null, __jsx(UniversalLink, {\n    item: item\n  }, __jsx(FormattedMessage, {\n    id: \"Read More\\u2026\",\n    defaultMessage: \"Read More\\u2026\"\n  }))))))));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\nexport default SummaryView;","map":{"version":3,"names":["React","UniversalLink","Container","FormattedMessage","PreviewImage","SummaryView","content","title","description","items","map","item","url","image_field","image_caption"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/theme/View/SummaryView.jsx"],"sourcesContent":["/**\n * Summary view component.\n * @module components/theme/View/SummaryView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UniversalLink } from '@plone/volto/components';\nimport { Container } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\nimport PreviewImage from '../PreviewImage/PreviewImage';\n\n/**\n * Summary view component class.\n * @function SummaryView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst SummaryView = ({ content }) => (\n  <Container className=\"view-wrapper summary-view\">\n    <article id=\"content\">\n      <header>\n        <h1 className=\"documentFirstHeading\">{content.title}</h1>\n        {content.description && (\n          <p className=\"documentDescription\">{content.description}</p>\n        )}\n      </header>\n      <section id=\"content-core\">\n        {content.items.map((item) => (\n          <article key={item.url}>\n            <h2>\n              <UniversalLink item={item} title={item['@type']}>\n                {item.title}\n              </UniversalLink>\n            </h2>\n            {item.image_field && (\n              <PreviewImage\n                item={item}\n                alt={item.image_caption ? item.image_caption : item.title}\n                size=\"thumb\"\n                className=\"ui image floated right clear\"\n              />\n            )}\n            {item.description && <p>{item.description}</p>}\n            <p>\n              <UniversalLink item={item}>\n                <FormattedMessage id=\"Read More…\" defaultMessage=\"Read More…\" />\n              </UniversalLink>\n            </p>\n          </article>\n        ))}\n      </section>\n    </article>\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nSummaryView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        /**\n         * Title of the item\n         */\n        title: PropTypes.string,\n        /**\n         * Description of the item\n         */\n        description: PropTypes.string,\n        /**\n         * Url of the item\n         */\n        url: PropTypes.string,\n        /**\n         * Image of the item\n         */\n        image: PropTypes.object,\n        /**\n         * Image caption of the item\n         */\n        image_caption: PropTypes.string,\n        /**\n         * Type of the item\n         */\n        '@type': PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default SummaryView;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAClB,MAAC,SAAD;IAAW,SAAS,EAAC;EAArB,GACE;IAAS,EAAE,EAAC;EAAZ,GACE,sBACE;IAAI,SAAS,EAAC;EAAd,GAAsCA,OAAO,CAACC,KAA9C,CADF,EAEGD,OAAO,CAACE,WAAR,IACC;IAAG,SAAS,EAAC;EAAb,GAAoCF,OAAO,CAACE,WAA5C,CAHJ,CADF,EAOE;IAAS,EAAE,EAAC;EAAZ,GACGF,OAAO,CAACG,KAAR,CAAcC,GAAd,CAAmBC,IAAD,IACjB;IAAS,GAAG,EAAEA,IAAI,CAACC;EAAnB,GACE,kBACE,MAAC,aAAD;IAAe,IAAI,EAAED,IAArB;IAA2B,KAAK,EAAEA,IAAI,CAAC,OAAD;EAAtC,GACGA,IAAI,CAACJ,KADR,CADF,CADF,EAMGI,IAAI,CAACE,WAAL,IACC,MAAC,YAAD;IACE,IAAI,EAAEF,IADR;IAEE,GAAG,EAAEA,IAAI,CAACG,aAAL,GAAqBH,IAAI,CAACG,aAA1B,GAA0CH,IAAI,CAACJ,KAFtD;IAGE,IAAI,EAAC,OAHP;IAIE,SAAS,EAAC;EAJZ,EAPJ,EAcGI,IAAI,CAACH,WAAL,IAAoB,iBAAIG,IAAI,CAACH,WAAT,CAdvB,EAeE,iBACE,MAAC,aAAD;IAAe,IAAI,EAAEG;EAArB,GACE,MAAC,gBAAD;IAAkB,EAAE,EAAC,iBAArB;IAAkC,cAAc,EAAC;EAAjD,EADF,CADF,CAfF,CADD,CADH,CAPF,CADF,CADkB;AAAA,CAApB;AAsCA;AACA;AACA;AACA;AACA;;;AAgDA,eAAeN,WAAf"},"metadata":{"react-intl":{"messages":[{"id":"Read More…","defaultMessage":"Read More…"}]}},"sourceType":"module"}