{"ast":null,"code":"import _objectSpread from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { Login, LoginAuthomatic, Logout } from './components';\nimport { authomaticRedirect, authOptions } from './reducers';\n\nconst applyConfig = config => {\n  var _config$settings;\n\n  config.addonReducers = _objectSpread(_objectSpread({}, config.addonReducers), {}, {\n    authomaticRedirect,\n    authOptions\n  });\n  config.settings.persistentReducers = [...config.settings.persistentReducers, 'authomaticRedirect'];\n  config.settings.nonContentRoutes = [...config.settings.nonContentRoutes, /^\\/login-authomatic\\/.*$/];\n  config.addonRoutes.push({\n    path: '/login',\n    component: Login\n  }, {\n    path: '/**/login',\n    component: Login\n  }, {\n    path: '/logout',\n    component: Logout\n  }, {\n    path: '/**/logout',\n    component: Logout\n  }, {\n    path: '/register',\n    component: Login\n  }, {\n    path: `/(${(_config$settings = config.settings) === null || _config$settings === void 0 ? void 0 : _config$settings.supportedLanguages.join('|')})/register`,\n    component: Login\n  }, {\n    path: '/login-authomatic/:provider',\n    component: LoginAuthomatic\n  });\n  return config;\n};\n\nexport default applyConfig;","map":{"version":3,"names":["Login","LoginAuthomatic","Logout","authomaticRedirect","authOptions","applyConfig","config","addonReducers","settings","persistentReducers","nonContentRoutes","addonRoutes","push","path","component","supportedLanguages","join"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone-collective/volto-authomatic/src/index.js"],"sourcesContent":["import { Login, LoginAuthomatic, Logout } from './components';\nimport { authomaticRedirect, authOptions } from './reducers';\n\nconst applyConfig = (config) => {\n  config.addonReducers = {\n    ...config.addonReducers,\n    authomaticRedirect,\n    authOptions,\n  };\n  config.settings.persistentReducers = [\n    ...config.settings.persistentReducers,\n    'authomaticRedirect',\n  ];\n  config.settings.nonContentRoutes = [\n    ...config.settings.nonContentRoutes,\n    /^\\/login-authomatic\\/.*$/,\n  ];\n  config.addonRoutes.push(\n    { path: '/login', component: Login },\n    { path: '/**/login', component: Login },\n    { path: '/logout', component: Logout },\n    { path: '/**/logout', component: Logout },\n    { path: '/register', component: Login },\n    {\n      path: `/(${config.settings?.supportedLanguages.join('|')})/register`,\n      component: Login,\n    },\n    { path: '/login-authomatic/:provider', component: LoginAuthomatic },\n  );\n  return config;\n};\n\nexport default applyConfig;\n"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,eAAhB,EAAiCC,MAAjC,QAA+C,cAA/C;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,YAAhD;;AAEA,MAAMC,WAAW,GAAIC,MAAD,IAAY;EAAA;;EAC9BA,MAAM,CAACC,aAAP,mCACKD,MAAM,CAACC,aADZ;IAEEJ,kBAFF;IAGEC;EAHF;EAKAE,MAAM,CAACE,QAAP,CAAgBC,kBAAhB,GAAqC,CACnC,GAAGH,MAAM,CAACE,QAAP,CAAgBC,kBADgB,EAEnC,oBAFmC,CAArC;EAIAH,MAAM,CAACE,QAAP,CAAgBE,gBAAhB,GAAmC,CACjC,GAAGJ,MAAM,CAACE,QAAP,CAAgBE,gBADc,EAEjC,0BAFiC,CAAnC;EAIAJ,MAAM,CAACK,WAAP,CAAmBC,IAAnB,CACE;IAAEC,IAAI,EAAE,QAAR;IAAkBC,SAAS,EAAEd;EAA7B,CADF,EAEE;IAAEa,IAAI,EAAE,WAAR;IAAqBC,SAAS,EAAEd;EAAhC,CAFF,EAGE;IAAEa,IAAI,EAAE,SAAR;IAAmBC,SAAS,EAAEZ;EAA9B,CAHF,EAIE;IAAEW,IAAI,EAAE,YAAR;IAAsBC,SAAS,EAAEZ;EAAjC,CAJF,EAKE;IAAEW,IAAI,EAAE,WAAR;IAAqBC,SAAS,EAAEd;EAAhC,CALF,EAME;IACEa,IAAI,EAAG,KAAD,oBAAKP,MAAM,CAACE,QAAZ,qDAAK,iBAAiBO,kBAAjB,CAAoCC,IAApC,CAAyC,GAAzC,CAA8C,YAD3D;IAEEF,SAAS,EAAEd;EAFb,CANF,EAUE;IAAEa,IAAI,EAAE,6BAAR;IAAuCC,SAAS,EAAEb;EAAlD,CAVF;EAYA,OAAOK,MAAP;AACD,CA3BD;;AA6BA,eAAeD,WAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}