{"ast":null,"code":"import _defineProperty from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/**\n * Link View.\n * @module components/theme/View/LinkView\n */\nimport React, { Component } from 'react';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\nimport { Container } from 'semantic-ui-react';\nimport { UniversalLink } from '@plone/volto/components';\nimport { FormattedMessage } from 'react-intl';\n/**\n * View container class.\n * @class View\n * @extends Component\n */\n\nclass LinkView extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  componentDidMount() {\n    if (!this.props.token) {\n      const {\n        remoteUrl\n      } = this.props.content;\n\n      if (isInternalURL(remoteUrl)) {\n        this.props.history.replace(flattenToAppURL(remoteUrl));\n      } else if (!__SERVER__) {\n        window.location.href = flattenToAppURL(remoteUrl);\n      }\n    }\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    const {\n      remoteUrl\n    } = this.props.content;\n    return __jsx(Container, {\n      id: \"page-document\"\n    }, __jsx(\"h1\", {\n      className: \"documentFirstHeading\"\n    }, this.props.content.title), this.props.content.description && __jsx(\"p\", {\n      className: \"documentDescription\"\n    }, this.props.content.description), remoteUrl && __jsx(\"p\", null, __jsx(FormattedMessage, {\n      id: \"The link address is:\",\n      defaultMessage: \"The link address is:\"\n    }), ' ', __jsx(UniversalLink, {\n      href: remoteUrl\n    }, flattenToAppURL(remoteUrl))));\n  }\n\n}\n\n_defineProperty(LinkView, \"defaultProps\", {\n  content: null,\n  token: null\n});\n\nexport default LinkView;","map":{"version":3,"names":["React","Component","isInternalURL","flattenToAppURL","Container","UniversalLink","FormattedMessage","LinkView","componentDidMount","props","token","remoteUrl","content","history","replace","__SERVER__","window","location","href","render","title","description"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/theme/View/LinkView.jsx"],"sourcesContent":["/**\n * Link View.\n * @module components/theme/View/LinkView\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\nimport { Container } from 'semantic-ui-react';\nimport { UniversalLink } from '@plone/volto/components';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * View container class.\n * @class View\n * @extends Component\n */\nclass LinkView extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      remoteUrl: PropTypes.string,\n    }),\n    token: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    content: null,\n    token: null,\n  };\n\n  componentDidMount() {\n    if (!this.props.token) {\n      const { remoteUrl } = this.props.content;\n      if (isInternalURL(remoteUrl)) {\n        this.props.history.replace(flattenToAppURL(remoteUrl));\n      } else if (!__SERVER__) {\n        window.location.href = flattenToAppURL(remoteUrl);\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { remoteUrl } = this.props.content;\n    return (\n      <Container id=\"page-document\">\n        <h1 className=\"documentFirstHeading\">{this.props.content.title}</h1>\n        {this.props.content.description && (\n          <p className=\"documentDescription\">\n            {this.props.content.description}\n          </p>\n        )}\n        {remoteUrl && (\n          <p>\n            <FormattedMessage\n              id=\"The link address is:\"\n              defaultMessage=\"The link address is:\"\n            />{' '}\n            <UniversalLink href={remoteUrl}>\n              {flattenToAppURL(remoteUrl)}\n            </UniversalLink>\n          </p>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default LinkView;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,sBAA/C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;EAC/B;AACF;AACA;AACA;AACA;;EAUE;AACF;AACA;AACA;AACA;EAMEO,iBAAiB,GAAG;IAClB,IAAI,CAAC,KAAKC,KAAL,CAAWC,KAAhB,EAAuB;MACrB,MAAM;QAAEC;MAAF,IAAgB,KAAKF,KAAL,CAAWG,OAAjC;;MACA,IAAIV,aAAa,CAACS,SAAD,CAAjB,EAA8B;QAC5B,KAAKF,KAAL,CAAWI,OAAX,CAAmBC,OAAnB,CAA2BX,eAAe,CAACQ,SAAD,CAA1C;MACD,CAFD,MAEO,IAAI,CAACI,UAAL,EAAiB;QACtBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBf,eAAe,CAACQ,SAAD,CAAtC;MACD;IACF;EACF;EAED;AACF;AACA;AACA;AACA;;;EACEQ,MAAM,GAAG;IACP,MAAM;MAAER;IAAF,IAAgB,KAAKF,KAAL,CAAWG,OAAjC;IACA,OACE,MAAC,SAAD;MAAW,EAAE,EAAC;IAAd,GACE;MAAI,SAAS,EAAC;IAAd,GAAsC,KAAKH,KAAL,CAAWG,OAAX,CAAmBQ,KAAzD,CADF,EAEG,KAAKX,KAAL,CAAWG,OAAX,CAAmBS,WAAnB,IACC;MAAG,SAAS,EAAC;IAAb,GACG,KAAKZ,KAAL,CAAWG,OAAX,CAAmBS,WADtB,CAHJ,EAOGV,SAAS,IACR,iBACE,MAAC,gBAAD;MACE,EAAE,EAAC,sBADL;MAEE,cAAc,EAAC;IAFjB,EADF,EAIK,GAJL,EAKE,MAAC,aAAD;MAAe,IAAI,EAAEA;IAArB,GACGR,eAAe,CAACQ,SAAD,CADlB,CALF,CARJ,CADF;EAqBD;;AAhE8B;;gBAA3BJ,Q,kBAoBkB;EACpBK,OAAO,EAAE,IADW;EAEpBF,KAAK,EAAE;AAFa,C;;AA+CxB,eAAeH,QAAf"},"metadata":{"react-intl":{"messages":[{"id":"The link address is:","defaultMessage":"The link address is:"}]}},"sourceType":"module"}