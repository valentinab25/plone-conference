{"ast":null,"code":"import _extends from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/**\n * Schema widget fieldset.\n * @module components/manage/Widgets/SchemaWidgetFieldset\n */\nimport React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n/**\n * Schema widget fieldset component.\n * @function SchemaWidgetFieldset\n * @returns {string} Markup of the component.\n */\n\nexport const SchemaWidgetFieldsetComponent = _ref => {\n  let {\n    // isDragging,\n    title,\n    order,\n    active,\n    onShowEditFieldset,\n    onShowDeleteFieldset,\n    onClick,\n    getItemStyle,\n    isDraggable,\n    isDisabled,\n    reactBeautifulDnd\n  } = _ref;\n  return __jsx(reactBeautifulDnd.Draggable, {\n    draggableId: title,\n    index: order,\n    key: title\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    className: `item${active ? ' active' : ''}`,\n    onClick: () => onClick(order),\n    ref: provided.innerRef\n  }, provided.draggableProps, {\n    style: getItemStyle(snapshot.isDragging, provided.draggableProps.style)\n  }), isDraggable && __jsx(\"i\", _extends({\n    \"aria-hidden\": \"true\",\n    className: \"grey bars icon drag handle\"\n  }, provided.dragHandleProps)), title, !isDisabled && __jsx(\"button\", {\n    className: \"item ui noborder button\",\n    onClick: event => {\n      event.stopPropagation();\n      event.preventDefault();\n      onShowEditFieldset(order);\n    }\n  }, __jsx(Icon, {\n    name: \"write square\",\n    size: \"large\",\n    color: \"blue\"\n  })), !isDisabled && __jsx(\"button\", {\n    className: \"item ui noborder button\",\n    onClick: event => {\n      event.stopPropagation();\n      event.preventDefault();\n      onShowDeleteFieldset(order);\n    }\n  }, __jsx(Icon, {\n    name: \"close\",\n    size: \"large\",\n    color: \"red\"\n  }))));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\nexport default injectLazyLibs(['reactBeautifulDnd'])(SchemaWidgetFieldsetComponent);","map":{"version":3,"names":["React","Icon","injectLazyLibs","SchemaWidgetFieldsetComponent","title","order","active","onShowEditFieldset","onShowDeleteFieldset","onClick","getItemStyle","isDraggable","isDisabled","reactBeautifulDnd","provided","snapshot","innerRef","draggableProps","isDragging","style","dragHandleProps","event","stopPropagation","preventDefault"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/Widgets/SchemaWidgetFieldset.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/**\n * Schema widget fieldset.\n * @module components/manage/Widgets/SchemaWidgetFieldset\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\n/**\n * Schema widget fieldset component.\n * @function SchemaWidgetFieldset\n * @returns {string} Markup of the component.\n */\nexport const SchemaWidgetFieldsetComponent = ({\n  // isDragging,\n  title,\n  order,\n  active,\n  onShowEditFieldset,\n  onShowDeleteFieldset,\n  onClick,\n  getItemStyle,\n  isDraggable,\n  isDisabled,\n  reactBeautifulDnd,\n}) => (\n  <reactBeautifulDnd.Draggable draggableId={title} index={order} key={title}>\n    {(provided, snapshot) => (\n      <div\n        className={`item${active ? ' active' : ''}`}\n        onClick={() => onClick(order)}\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n      >\n        {isDraggable && (\n          <i\n            aria-hidden=\"true\"\n            className=\"grey bars icon drag handle\"\n            {...provided.dragHandleProps}\n          />\n        )}\n        {title}\n        {!isDisabled && (\n          <button\n            className=\"item ui noborder button\"\n            onClick={(event) => {\n              event.stopPropagation();\n              event.preventDefault();\n              onShowEditFieldset(order);\n            }}\n          >\n            <Icon name=\"write square\" size=\"large\" color=\"blue\" />\n          </button>\n        )}\n\n        {!isDisabled && (\n          <button\n            className=\"item ui noborder button\"\n            onClick={(event) => {\n              event.stopPropagation();\n              event.preventDefault();\n              onShowDeleteFieldset(order);\n            }}\n          >\n            <Icon name=\"close\" size=\"large\" color=\"red\" />\n          </button>\n        )}\n      </div>\n    )}\n  </reactBeautifulDnd.Draggable>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nSchemaWidgetFieldsetComponent.propTypes = {\n  order: PropTypes.number.isRequired,\n  active: PropTypes.bool.isRequired,\n  onOrderFieldset: PropTypes.func.isRequired,\n  onShowEditFieldset: PropTypes.func.isRequired,\n  onShowDeleteFieldset: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  getItemStyle: PropTypes.func.isRequired,\n  isDraggable: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nexport default injectLazyLibs(['reactBeautifulDnd'])(\n  SchemaWidgetFieldsetComponent,\n);\n"],"mappings":";;;AAAA;;AACA;;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,cAAT,QAA+B,wCAA/B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,6BAA6B,GAAG;EAAA,IAAC;IAC5C;IACAC,KAF4C;IAG5CC,KAH4C;IAI5CC,MAJ4C;IAK5CC,kBAL4C;IAM5CC,oBAN4C;IAO5CC,OAP4C;IAQ5CC,YAR4C;IAS5CC,WAT4C;IAU5CC,UAV4C;IAW5CC;EAX4C,CAAD;EAAA,OAa3C,MAAC,iBAAD,CAAmB,SAAnB;IAA6B,WAAW,EAAET,KAA1C;IAAiD,KAAK,EAAEC,KAAxD;IAA+D,GAAG,EAAED;EAApE,GACG,CAACU,QAAD,EAAWC,QAAX,KACC;IACE,SAAS,EAAG,OAAMT,MAAM,GAAG,SAAH,GAAe,EAAG,EAD5C;IAEE,OAAO,EAAE,MAAMG,OAAO,CAACJ,KAAD,CAFxB;IAGE,GAAG,EAAES,QAAQ,CAACE;EAHhB,GAIMF,QAAQ,CAACG,cAJf;IAKE,KAAK,EAAEP,YAAY,CAACK,QAAQ,CAACG,UAAV,EAAsBJ,QAAQ,CAACG,cAAT,CAAwBE,KAA9C;EALrB,IAOGR,WAAW,IACV;IACE,eAAY,MADd;IAEE,SAAS,EAAC;EAFZ,GAGMG,QAAQ,CAACM,eAHf,EARJ,EAcGhB,KAdH,EAeG,CAACQ,UAAD,IACC;IACE,SAAS,EAAC,yBADZ;IAEE,OAAO,EAAGS,KAAD,IAAW;MAClBA,KAAK,CAACC,eAAN;MACAD,KAAK,CAACE,cAAN;MACAhB,kBAAkB,CAACF,KAAD,CAAlB;IACD;EANH,GAQE,MAAC,IAAD;IAAM,IAAI,EAAC,cAAX;IAA0B,IAAI,EAAC,OAA/B;IAAuC,KAAK,EAAC;EAA7C,EARF,CAhBJ,EA4BG,CAACO,UAAD,IACC;IACE,SAAS,EAAC,yBADZ;IAEE,OAAO,EAAGS,KAAD,IAAW;MAClBA,KAAK,CAACC,eAAN;MACAD,KAAK,CAACE,cAAN;MACAf,oBAAoB,CAACH,KAAD,CAApB;IACD;EANH,GAQE,MAAC,IAAD;IAAM,IAAI,EAAC,OAAX;IAAmB,IAAI,EAAC,OAAxB;IAAgC,KAAK,EAAC;EAAtC,EARF,CA7BJ,CAFJ,CAb2C;AAAA,CAAtC;AA4DP;AACA;AACA;AACA;AACA;;AAaA,eAAeH,cAAc,CAAC,CAAC,mBAAD,CAAD,CAAd,CACbC,6BADa,CAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}