{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { TABLE, THEAD, TFOOT, TBODY, TR, TD, TH } from '@plone/volto-slate/constants';\nexport const tableElements = {\n  [TABLE]: ({\n    attributes,\n    children\n  }) => __jsx(\"table\", _extends({}, attributes, {\n    className: \"slate-table\"\n  }), children),\n  [THEAD]: ({\n    attributes,\n    children\n  }) => __jsx(\"thead\", attributes, children),\n  [TFOOT]: ({\n    attributes,\n    children\n  }) => __jsx(\"tfoot\", attributes, children),\n  [TBODY]: ({\n    attributes,\n    children\n  }) => __jsx(\"tbody\", attributes, children),\n  [TR]: ({\n    attributes,\n    children\n  }) => __jsx(\"tr\", attributes, children),\n  [TD]: ({\n    attributes,\n    children\n  }) => __jsx(\"td\", attributes, children),\n  [TH]: ({\n    attributes,\n    children\n  }) => __jsx(\"th\", attributes, children)\n};","map":{"version":3,"names":["React","TABLE","THEAD","TFOOT","TBODY","TR","TD","TH","tableElements","attributes","children"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Table/render.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  TABLE,\n  THEAD,\n  TFOOT,\n  TBODY,\n  TR,\n  TD,\n  TH,\n} from '@plone/volto-slate/constants';\n\nexport const tableElements = {\n  [TABLE]: ({ attributes, children }) => (\n    <table {...attributes} className=\"slate-table\">\n      {children}\n    </table>\n  ),\n  [THEAD]: ({ attributes, children }) => (\n    <thead {...attributes}>{children}</thead>\n  ),\n  [TFOOT]: ({ attributes, children }) => (\n    <tfoot {...attributes}>{children}</tfoot>\n  ),\n  [TBODY]: ({ attributes, children }) => (\n    <tbody {...attributes}>{children}</tbody>\n  ),\n  [TR]: ({ attributes, children }) => <tr {...attributes}>{children}</tr>,\n  [TD]: ({ attributes, children }) => <td {...attributes}>{children}</td>,\n  [TH]: ({ attributes, children }) => <th {...attributes}>{children}</th>,\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,EALF,EAMEC,EANF,EAOEC,EAPF,QAQO,8BARP;AAUA,OAAO,MAAMC,aAAa,GAAG;EAC3B,CAACP,KAAD,GAAS,CAAC;IAAEQ,UAAF;IAAcC;EAAd,CAAD,KACP,4BAAWD,UAAX;IAAuB,SAAS,EAAC;EAAjC,IACGC,QADH,CAFyB;EAM3B,CAACR,KAAD,GAAS,CAAC;IAAEO,UAAF;IAAcC;EAAd,CAAD,KACP,eAAWD,UAAX,EAAwBC,QAAxB,CAPyB;EAS3B,CAACP,KAAD,GAAS,CAAC;IAAEM,UAAF;IAAcC;EAAd,CAAD,KACP,eAAWD,UAAX,EAAwBC,QAAxB,CAVyB;EAY3B,CAACN,KAAD,GAAS,CAAC;IAAEK,UAAF;IAAcC;EAAd,CAAD,KACP,eAAWD,UAAX,EAAwBC,QAAxB,CAbyB;EAe3B,CAACL,EAAD,GAAM,CAAC;IAAEI,UAAF;IAAcC;EAAd,CAAD,KAA8B,YAAQD,UAAR,EAAqBC,QAArB,CAfT;EAgB3B,CAACJ,EAAD,GAAM,CAAC;IAAEG,UAAF;IAAcC;EAAd,CAAD,KAA8B,YAAQD,UAAR,EAAqBC,QAArB,CAhBT;EAiB3B,CAACH,EAAD,GAAM,CAAC;IAAEE,UAAF;IAAcC;EAAd,CAAD,KAA8B,YAAQD,UAAR,EAAqBC,QAArB;AAjBT,CAAtB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}