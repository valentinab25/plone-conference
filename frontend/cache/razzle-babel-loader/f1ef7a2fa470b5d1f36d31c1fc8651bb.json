{"ast":null,"code":"import _extends from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Segment, Header, List } from 'semantic-ui-react';\nimport { When, Recurrence } from '@plone/volto/components/theme/View/EventDatesInfo';\nimport { Icon } from '@plone/volto/components';\nimport { expandToBackendURL } from '@plone/volto/helpers';\nimport calendarSVG from '@plone/volto/icons/calendar.svg';\nconst messages = defineMessages({\n  what: {\n    \"id\": \"event_what\",\n    \"defaultMessage\": \"What\"\n  },\n  when: {\n    \"id\": \"event_when\",\n    \"defaultMessage\": \"When\"\n  },\n  allDates: {\n    \"id\": \"event_alldates\",\n    \"defaultMessage\": \"All dates\"\n  },\n  downloadEvent: {\n    \"id\": \"Download Event\",\n    \"defaultMessage\": \"Download Event\"\n  },\n  where: {\n    \"id\": \"event_where\",\n    \"defaultMessage\": \"Where\"\n  },\n  contactName: {\n    \"id\": \"event_contactname\",\n    \"defaultMessage\": \"Contact Name\"\n  },\n  contactPhone: {\n    \"id\": \"event_contactphone\",\n    \"defaultMessage\": \"Contact Phone\"\n  },\n  attendees: {\n    \"id\": \"event_attendees\",\n    \"defaultMessage\": \"Attendees\"\n  },\n  website: {\n    \"id\": \"event_website\",\n    \"defaultMessage\": \"Website\"\n  },\n  visitWebsite: {\n    \"id\": \"visit_external_website\",\n    \"defaultMessage\": \"Visit external website\"\n  }\n});\n\nconst EventDetails = _ref => {\n  var _content$subjects, _content$attendees;\n\n  let {\n    content,\n    display_as = 'aside'\n  } = _ref;\n  const intl = useIntl();\n  return __jsx(Segment, _extends({\n    as: display_as\n  }, display_as === 'aside' ? {\n    floated: 'right'\n  } : {}), ((_content$subjects = content.subjects) === null || _content$subjects === void 0 ? void 0 : _content$subjects.length) > 0 && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true\n  }, intl.formatMessage(messages.what)), __jsx(List, {\n    items: content.subjects\n  })), __jsx(Header, {\n    dividing: true,\n    sub: true\n  }, intl.formatMessage(messages.when)), __jsx(When, {\n    start: content.start,\n    end: content.end,\n    whole_day: content.whole_day,\n    open_end: content.open_end\n  }), content.recurrence && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true\n  }, intl.formatMessage(messages.allDates)), __jsx(Recurrence, {\n    recurrence: content.recurrence,\n    start: content.start\n  })), content.location && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true\n  }, intl.formatMessage(messages.where)), __jsx(\"p\", null, content.location)), content.contact_name && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true\n  }, intl.formatMessage(messages.contactName)), __jsx(\"p\", null, content.contact_email ? __jsx(\"a\", {\n    href: `mailto:${content.contact_email}`\n  }, content.contact_name) : content.contact_name)), content.contact_phone && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true\n  }, intl.formatMessage(messages.contactPhone)), __jsx(\"p\", null, content.contact_phone)), ((_content$attendees = content.attendees) === null || _content$attendees === void 0 ? void 0 : _content$attendees.length) > 0 && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true\n  }, intl.formatMessage(messages.attendees)), __jsx(List, {\n    items: content.attendees\n  })), content.event_url && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true\n  }, intl.formatMessage(messages.website)), __jsx(\"p\", null, __jsx(\"a\", {\n    href: content.event_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, intl.formatMessage(messages.visitWebsite)))), __jsx(\"div\", {\n    className: \"download-event\"\n  }, __jsx(Icon, {\n    name: calendarSVG\n  }), __jsx(\"a\", {\n    className: \"ics-download\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: `${expandToBackendURL(content['@id'])}/ics_view`\n  }, intl.formatMessage(messages.downloadEvent))));\n};\n\nexport default EventDetails;","map":{"version":3,"names":["React","defineMessages","useIntl","Segment","Header","List","When","Recurrence","Icon","expandToBackendURL","calendarSVG","messages","what","when","allDates","downloadEvent","where","contactName","contactPhone","attendees","website","visitWebsite","EventDetails","content","display_as","intl","floated","subjects","length","formatMessage","start","end","whole_day","open_end","recurrence","location","contact_name","contact_email","contact_phone","event_url"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/theme/EventDetails/EventDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Segment, Header, List } from 'semantic-ui-react';\nimport {\n  When,\n  Recurrence,\n} from '@plone/volto/components/theme/View/EventDatesInfo';\nimport { Icon } from '@plone/volto/components';\nimport { expandToBackendURL } from '@plone/volto/helpers';\n\nimport calendarSVG from '@plone/volto/icons/calendar.svg';\n\nconst messages = defineMessages({\n  what: {\n    id: 'event_what',\n    defaultMessage: 'What',\n  },\n  when: {\n    id: 'event_when',\n    defaultMessage: 'When',\n  },\n  allDates: {\n    id: 'event_alldates',\n    defaultMessage: 'All dates',\n  },\n  downloadEvent: {\n    id: 'Download Event',\n    defaultMessage: 'Download Event',\n  },\n  where: {\n    id: 'event_where',\n    defaultMessage: 'Where',\n  },\n  contactName: {\n    id: 'event_contactname',\n    defaultMessage: 'Contact Name',\n  },\n  contactPhone: {\n    id: 'event_contactphone',\n    defaultMessage: 'Contact Phone',\n  },\n  attendees: {\n    id: 'event_attendees',\n    defaultMessage: 'Attendees',\n  },\n  website: {\n    id: 'event_website',\n    defaultMessage: 'Website',\n  },\n  visitWebsite: {\n    id: 'visit_external_website',\n    defaultMessage: 'Visit external website',\n  },\n});\n\nconst EventDetails = ({ content, display_as = 'aside' }) => {\n  const intl = useIntl();\n  return (\n    <Segment\n      as={display_as}\n      {...(display_as === 'aside' ? { floated: 'right' } : {})}\n    >\n      {content.subjects?.length > 0 && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.what)}\n          </Header>\n          <List items={content.subjects} />\n        </>\n      )}\n      <Header dividing sub>\n        {intl.formatMessage(messages.when)}\n      </Header>\n      <When\n        start={content.start}\n        end={content.end}\n        whole_day={content.whole_day}\n        open_end={content.open_end}\n      />\n      {content.recurrence && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.allDates)}\n          </Header>\n          <Recurrence recurrence={content.recurrence} start={content.start} />\n        </>\n      )}\n      {content.location && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.where)}\n          </Header>\n          <p>{content.location}</p>\n        </>\n      )}\n      {content.contact_name && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.contactName)}\n          </Header>\n          <p>\n            {content.contact_email ? (\n              <a href={`mailto:${content.contact_email}`}>\n                {content.contact_name}\n              </a>\n            ) : (\n              content.contact_name\n            )}\n          </p>\n        </>\n      )}\n      {content.contact_phone && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.contactPhone)}\n          </Header>\n          <p>{content.contact_phone}</p>\n        </>\n      )}\n      {content.attendees?.length > 0 && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.attendees)}\n          </Header>\n          <List items={content.attendees} />\n        </>\n      )}\n      {content.event_url && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.website)}\n          </Header>\n          <p>\n            <a\n              href={content.event_url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {intl.formatMessage(messages.visitWebsite)}\n            </a>\n          </p>\n        </>\n      )}\n      <div className=\"download-event\">\n        <Icon name={calendarSVG} />\n        <a\n          className=\"ics-download\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={`${expandToBackendURL(content['@id'])}/ics_view`}\n        >\n          {intl.formatMessage(messages.downloadEvent)}\n        </a>\n      </div>\n    </Segment>\n  );\n};\n\nexport default EventDetails;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"event_what","defaultMessage":"What"},{"id":"event_when","defaultMessage":"When"},{"id":"event_alldates","defaultMessage":"All dates"},{"id":"Download Event","defaultMessage":"Download Event"},{"id":"event_where","defaultMessage":"Where"},{"id":"event_contactname","defaultMessage":"Contact Name"},{"id":"event_contactphone","defaultMessage":"Contact Phone"},{"id":"event_attendees","defaultMessage":"Attendees"},{"id":"event_website","defaultMessage":"Website"},{"id":"visit_external_website","defaultMessage":"Visit external website"}]}},"sourceType":"module"}