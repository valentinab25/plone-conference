{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nconst messages = defineMessages({\n  Color: {\n    \"id\": \"Color\",\n    \"defaultMessage\": \"Color\"\n  }\n});\n\nconst ColorPickerWidget = props => {\n  const {\n    id,\n    title,\n    required,\n    value,\n    onChange,\n    colors,\n    className\n  } = props;\n  const intl = useIntl();\n  React.useEffect(() => {\n    if (!props.value && props.default) {\n      props.onChange(props.id, props.default);\n    } // Yes, this is correct.\n\n  });\n  return colors.length > 0 ? __jsx(Form.Field, {\n    inline: true,\n    required: required,\n    className: className,\n    id: 'field-' + id\n  }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n    width: \"12\",\n    className: \"color-picker-widget\",\n    verticalAlign: \"middle\"\n  }, __jsx(\"div\", {\n    className: \"wrapper\"\n  }, __jsx(\"label\", {\n    htmlFor: `field-${id}`\n  }, title ? title : intl.formatMessage(messages.Color)), __jsx(\"div\", {\n    className: \"buttons\"\n  }, colors.map(color => {\n    return __jsx(Button, {\n      key: id + color.name,\n      className: color.name,\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        onChange(id, color.name);\n      },\n      active: value === color.name,\n      circular: true,\n      \"aria-label\": color.label,\n      title: color.label\n    });\n  }))))))) : null;\n};\n\nColorPickerWidget.defaultProps = {\n  required: false,\n  value: null,\n  onChange: null,\n  colors: []\n};\nexport default ColorPickerWidget;","map":{"version":3,"names":["React","Form","Grid","Button","defineMessages","useIntl","messages","Color","ColorPickerWidget","props","id","title","required","value","onChange","colors","className","intl","useEffect","default","length","formatMessage","map","color","name","e","preventDefault","stopPropagation","label","defaultProps"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/Widgets/ColorPickerWidget.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  Color: {\n    id: 'Color',\n    defaultMessage: 'Color',\n  },\n});\n\nconst ColorPickerWidget = (props) => {\n  const { id, title, required, value, onChange, colors, className } = props;\n\n  const intl = useIntl();\n\n  React.useEffect(() => {\n    if (!props.value && props.default) {\n      props.onChange(props.id, props.default);\n    }\n    // Yes, this is correct.\n  });\n\n  return colors.length > 0 ? (\n    <Form.Field\n      inline\n      required={required}\n      className={className}\n      id={'field-' + id}\n    >\n      <Grid>\n        <Grid.Row>\n          <Grid.Column\n            width=\"12\"\n            className=\"color-picker-widget\"\n            verticalAlign=\"middle\"\n          >\n            <div className=\"wrapper\">\n              <label htmlFor={`field-${id}`}>\n                {title ? title : intl.formatMessage(messages.Color)}\n              </label>\n\n              <div className=\"buttons\">\n                {colors.map((color) => {\n                  return (\n                    <Button\n                      key={id + color.name}\n                      className={color.name}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        onChange(id, color.name);\n                      }}\n                      active={value === color.name}\n                      circular\n                      aria-label={color.label}\n                      title={color.label}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Form.Field>\n  ) : null;\n};\n\nColorPickerWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  colors: PropTypes.array,\n};\n\nColorPickerWidget.defaultProps = {\n  required: false,\n  value: null,\n  onChange: null,\n  colors: [],\n};\n\nexport default ColorPickerWidget;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,YAAxC;AAEA,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,KAAK;IAAA;IAAA;EAAA;AADyB,CAAD,CAA/B;;AAOA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;EACnC,MAAM;IAAEC,EAAF;IAAMC,KAAN;IAAaC,QAAb;IAAuBC,KAAvB;IAA8BC,QAA9B;IAAwCC,MAAxC;IAAgDC;EAAhD,IAA8DP,KAApE;EAEA,MAAMQ,IAAI,GAAGZ,OAAO,EAApB;EAEAL,KAAK,CAACkB,SAAN,CAAgB,MAAM;IACpB,IAAI,CAACT,KAAK,CAACI,KAAP,IAAgBJ,KAAK,CAACU,OAA1B,EAAmC;MACjCV,KAAK,CAACK,QAAN,CAAeL,KAAK,CAACC,EAArB,EAAyBD,KAAK,CAACU,OAA/B;IACD,CAHmB,CAIpB;;EACD,CALD;EAOA,OAAOJ,MAAM,CAACK,MAAP,GAAgB,CAAhB,GACL,MAAC,IAAD,CAAM,KAAN;IACE,MAAM,MADR;IAEE,QAAQ,EAAER,QAFZ;IAGE,SAAS,EAAEI,SAHb;IAIE,EAAE,EAAE,WAAWN;EAJjB,GAME,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;IACE,KAAK,EAAC,IADR;IAEE,SAAS,EAAC,qBAFZ;IAGE,aAAa,EAAC;EAHhB,GAKE;IAAK,SAAS,EAAC;EAAf,GACE;IAAO,OAAO,EAAG,SAAQA,EAAG;EAA5B,GACGC,KAAK,GAAGA,KAAH,GAAWM,IAAI,CAACI,aAAL,CAAmBf,QAAQ,CAACC,KAA5B,CADnB,CADF,EAKE;IAAK,SAAS,EAAC;EAAf,GACGQ,MAAM,CAACO,GAAP,CAAYC,KAAD,IAAW;IACrB,OACE,MAAC,MAAD;MACE,GAAG,EAAEb,EAAE,GAAGa,KAAK,CAACC,IADlB;MAEE,SAAS,EAAED,KAAK,CAACC,IAFnB;MAGE,OAAO,EAAGC,CAAD,IAAO;QACdA,CAAC,CAACC,cAAF;QACAD,CAAC,CAACE,eAAF;QACAb,QAAQ,CAACJ,EAAD,EAAKa,KAAK,CAACC,IAAX,CAAR;MACD,CAPH;MAQE,MAAM,EAAEX,KAAK,KAAKU,KAAK,CAACC,IAR1B;MASE,QAAQ,MATV;MAUE,cAAYD,KAAK,CAACK,KAVpB;MAWE,KAAK,EAAEL,KAAK,CAACK;IAXf,EADF;EAeD,CAhBA,CADH,CALF,CALF,CADF,CADF,CANF,CADK,GA2CH,IA3CJ;AA4CD,CAxDD;;AAmEApB,iBAAiB,CAACqB,YAAlB,GAAiC;EAC/BjB,QAAQ,EAAE,KADqB;EAE/BC,KAAK,EAAE,IAFwB;EAG/BC,QAAQ,EAAE,IAHqB;EAI/BC,MAAM,EAAE;AAJuB,CAAjC;AAOA,eAAeP,iBAAf"},"metadata":{"react-intl":{"messages":[{"id":"Color","defaultMessage":"Color"}]}},"sourceType":"module"}