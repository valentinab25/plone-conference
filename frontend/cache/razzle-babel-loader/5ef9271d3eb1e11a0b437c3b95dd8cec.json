{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { v4 as uuid } from 'uuid';\nimport { defineMessages } from 'react-intl';\nimport gridTemplate1 from './grid-1.svg';\nimport gridTemplate2 from './grid-2.svg';\nimport gridTemplate3 from './grid-3.svg';\nimport gridTemplate4 from './grid-4.svg';\nimport gridTemplate5 from './grid-5.svg';\nimport gridTemplate6 from './grid-6.svg';\nimport gridTemplateMore from './grid-more.svg';\nconst messages = defineMessages({\n  column: {\n    \"id\": \"column\",\n    \"defaultMessage\": \"column\"\n  },\n  columns: {\n    \"id\": \"columns\",\n    \"defaultMessage\": \"columns\"\n  }\n});\n\nconst getColumns = (numberOfColumns, type) => {\n  return [...Array(numberOfColumns).keys()].map(i => {\n    return _objectSpread({\n      id: uuid()\n    }, type && {\n      '@type': type\n    });\n  });\n};\n\nconst templates = type => intl => [{\n  image: gridTemplate1,\n  id: 'gridtemplateone',\n  title: `1 ${intl.formatMessage(messages.column)}`,\n  columns: getColumns(1, type)\n}, {\n  image: gridTemplate2,\n  id: 'gridtemplatetwo',\n  title: `2 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(2, type)\n}, {\n  image: gridTemplate3,\n  id: 'gridtemplatethree',\n  title: `3 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(3, type)\n}, {\n  image: gridTemplate4,\n  id: 'gridtemplatefour',\n  title: `4 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(4, type)\n}, {\n  image: gridTemplate5,\n  id: 'gridtemplatefive',\n  title: `5 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(5, type)\n}, {\n  image: gridTemplate6,\n  id: 'gridtemplatesix',\n  title: `6 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(6, type)\n}, {\n  image: gridTemplateMore,\n  id: 'gridtemplateseven',\n  title: `7 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(7, type)\n}, {\n  image: gridTemplateMore,\n  id: 'gridtemplateseight',\n  title: `8 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(8, type)\n}, {\n  image: gridTemplateMore,\n  id: 'gridtemplatesnine',\n  title: `9 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(9, type)\n}, {\n  image: gridTemplateMore,\n  id: 'gridtemplatesten',\n  title: `10 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(10, type)\n}, {\n  image: gridTemplateMore,\n  id: 'gridtemplatesteleven',\n  title: `11 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(11, type)\n}, {\n  image: gridTemplateMore,\n  id: 'gridtemplatestwelve',\n  title: `12 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(12, type)\n}, {\n  image: gridTemplateMore,\n  id: 'gridtemplathirteen',\n  title: `13 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(13, type)\n}, {\n  image: gridTemplateMore,\n  id: 'gridtemplatesfourteen',\n  title: `14 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(14, type)\n}, {\n  image: gridTemplateMore,\n  id: 'gridtemplatesfifteen',\n  title: `15 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(15, type)\n}, {\n  image: gridTemplateMore,\n  id: 'gridtemplatessixteen',\n  title: `16 ${intl.formatMessage(messages.columns)}`,\n  columns: getColumns(16, type)\n}];\n\nexport default templates;","map":{"version":3,"names":["v4","uuid","defineMessages","gridTemplate1","gridTemplate2","gridTemplate3","gridTemplate4","gridTemplate5","gridTemplate6","gridTemplateMore","messages","column","columns","getColumns","numberOfColumns","type","Array","keys","map","i","id","templates","intl","image","title","formatMessage"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-blocks-grid/src/components/Grid/templates.js"],"sourcesContent":["import { v4 as uuid } from 'uuid';\nimport { defineMessages } from 'react-intl';\n\nimport gridTemplate1 from './grid-1.svg';\nimport gridTemplate2 from './grid-2.svg';\nimport gridTemplate3 from './grid-3.svg';\nimport gridTemplate4 from './grid-4.svg';\nimport gridTemplate5 from './grid-5.svg';\nimport gridTemplate6 from './grid-6.svg';\nimport gridTemplateMore from './grid-more.svg';\n\nconst messages = defineMessages({\n  column: {\n    id: 'column',\n    defaultMessage: 'column',\n  },\n  columns: {\n    id: 'columns',\n    defaultMessage: 'columns',\n  },\n});\n\nconst getColumns = (numberOfColumns, type) => {\n  return [...Array(numberOfColumns).keys()].map((i) => {\n    return {\n      id: uuid(),\n      ...(type && { '@type': type }),\n    };\n  });\n};\n\nconst templates = (type) => (intl) => [\n  {\n    image: gridTemplate1,\n    id: 'gridtemplateone',\n    title: `1 ${intl.formatMessage(messages.column)}`,\n    columns: getColumns(1, type),\n  },\n  {\n    image: gridTemplate2,\n    id: 'gridtemplatetwo',\n    title: `2 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(2, type),\n  },\n  {\n    image: gridTemplate3,\n    id: 'gridtemplatethree',\n    title: `3 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(3, type),\n  },\n  {\n    image: gridTemplate4,\n    id: 'gridtemplatefour',\n    title: `4 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(4, type),\n  },\n  {\n    image: gridTemplate5,\n    id: 'gridtemplatefive',\n    title: `5 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(5, type),\n  },\n  {\n    image: gridTemplate6,\n    id: 'gridtemplatesix',\n    title: `6 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(6, type),\n  },\n  {\n    image: gridTemplateMore,\n    id: 'gridtemplateseven',\n    title: `7 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(7, type),\n  },\n  {\n    image: gridTemplateMore,\n    id: 'gridtemplateseight',\n    title: `8 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(8, type),\n  },\n  {\n    image: gridTemplateMore,\n    id: 'gridtemplatesnine',\n    title: `9 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(9, type),\n  },\n  {\n    image: gridTemplateMore,\n    id: 'gridtemplatesten',\n    title: `10 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(10, type),\n  },\n  {\n    image: gridTemplateMore,\n    id: 'gridtemplatesteleven',\n    title: `11 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(11, type),\n  },\n  {\n    image: gridTemplateMore,\n    id: 'gridtemplatestwelve',\n    title: `12 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(12, type),\n  },\n  {\n    image: gridTemplateMore,\n    id: 'gridtemplathirteen',\n    title: `13 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(13, type),\n  },\n  {\n    image: gridTemplateMore,\n    id: 'gridtemplatesfourteen',\n    title: `14 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(14, type),\n  },\n  {\n    image: gridTemplateMore,\n    id: 'gridtemplatesfifteen',\n    title: `15 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(15, type),\n  },\n  {\n    image: gridTemplateMore,\n    id: 'gridtemplatessixteen',\n    title: `16 ${intl.formatMessage(messages.columns)}`,\n    columns: getColumns(16, type),\n  },\n];\n\nexport default templates;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"column","defaultMessage":"column"},{"id":"columns","defaultMessage":"columns"}]}},"sourceType":"module"}