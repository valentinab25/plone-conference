{"ast":null,"code":"import _find from \"lodash/find\";\nimport _reverse from \"lodash/reverse\";\nimport _map from \"lodash/map\";\nimport _concat from \"lodash/concat\";\nvar __jsx = React.createElement;\n\n/**\n * History component.\n * @module components/manage/History/History\n */\nimport React, { Component } from 'react';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Container, Dropdown, Icon, Segment, Table } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { FormattedDate, Icon as IconNext, Toolbar, Forbidden, Unauthorized } from '@plone/volto/components';\nimport { getHistory, revertHistory, listActions } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  history: {\n    \"id\": \"History\",\n    \"defaultMessage\": \"History\"\n  }\n});\n/**\n * History class.\n * @class History\n * @extends Component\n */\n\nclass History extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Workflow\n   */\n  constructor(props) {\n    super(props);\n    this.onRevert = this.onRevert.bind(this);\n    this.state = {\n      isClient: false\n    };\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.revertRequest.loading && nextProps.revertRequest.loaded) {\n      this.props.getHistory(getBaseUrl(this.props.pathname));\n    }\n  }\n  /**\n   * On revert\n   * @method onRevert\n   * @param {object} event Event object\n   * @param {number} value Value\n   * @returns {undefined}\n   */\n\n\n  onRevert(event, {\n    value\n  }) {\n    this.props.revertHistory(getBaseUrl(this.props.pathname), value);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    const entries = _reverse(_concat(this.props.entries));\n\n    let title = entries.length > 0 ? entries[0].state_title : '';\n\n    for (let x = 1; x < entries.length; x += 1) {\n      entries[x].prev_state_title = title;\n      title = entries[x].state_title || title;\n    }\n\n    _reverse(entries);\n\n    const historyAction = _find(this.props.objectActions, {\n      id: 'history'\n    });\n\n    return !historyAction ? __jsx(React.Fragment, null, this.props.token ? __jsx(Forbidden, {\n      pathname: this.props.pathname,\n      staticContext: this.props.staticContext\n    }) : __jsx(Unauthorized, {\n      pathname: this.props.pathname,\n      staticContext: this.props.staticContext\n    })) : __jsx(Container, {\n      id: \"page-history\"\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.history)\n    }), __jsx(Segment.Group, {\n      raised: true\n    }, __jsx(Segment, {\n      className: \"primary\"\n    }, __jsx(FormattedMessage, {\n      id: \"History of {title}\",\n      defaultMessage: \"History of {title}\",\n      values: {\n        title: __jsx(\"q\", null, this.props.title)\n      }\n    })), __jsx(Segment, {\n      secondary: true\n    }, __jsx(FormattedMessage, {\n      id: \"You can view the history of your item below.\",\n      defaultMessage: \"You can view the history of your item below.\"\n    })), __jsx(Table, {\n      selectable: true,\n      compact: true,\n      singleLine: true,\n      attached: true\n    }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, {\n      width: 1\n    }, __jsx(FormattedMessage, {\n      id: \"History Version Number\",\n      defaultMessage: \"#\"\n    })), __jsx(Table.HeaderCell, {\n      width: 4\n    }, __jsx(FormattedMessage, {\n      id: \"What\",\n      defaultMessage: \"What\"\n    })), __jsx(Table.HeaderCell, {\n      width: 4\n    }, __jsx(FormattedMessage, {\n      id: \"Who\",\n      defaultMessage: \"Who\"\n    })), __jsx(Table.HeaderCell, {\n      width: 4\n    }, __jsx(FormattedMessage, {\n      id: \"When\",\n      defaultMessage: \"When\"\n    })), __jsx(Table.HeaderCell, {\n      width: 4\n    }, __jsx(FormattedMessage, {\n      id: \"Change Note\",\n      defaultMessage: \"Change Note\"\n    })), __jsx(Table.HeaderCell, null))), __jsx(Table.Body, null, _map(entries, entry => __jsx(Table.Row, {\n      key: entry.time\n    }, __jsx(Table.Cell, null, 'version' in entry && entry.version > 0 && __jsx(Link, {\n      className: \"item\",\n      to: `${getBaseUrl(this.props.pathname)}/diff?one=${entry.version - 1}&two=${entry.version}`\n    }, entry.version) || __jsx(\"span\", null, entry.version)), __jsx(Table.Cell, null, 'version' in entry && entry.version > 0 && __jsx(Link, {\n      className: \"item\",\n      to: `${getBaseUrl(this.props.pathname)}/diff?one=${entry.version - 1}&two=${entry.version}`\n    }, entry.transition_title) || __jsx(\"span\", null, entry.transition_title, entry.type === 'workflow' && ` (${entry.action ? `${entry.prev_state_title} â†’ ` : ''}${entry.state_title})`)), __jsx(Table.Cell, null, entry.actor.fullname), __jsx(Table.Cell, null, __jsx(FormattedDate, {\n      date: entry.time\n    })), __jsx(Table.Cell, null, entry.comments), __jsx(Table.Cell, null, entry.type === 'versioning' && __jsx(Dropdown, {\n      icon: \"ellipsis horizontal\"\n    }, __jsx(Dropdown.Menu, {\n      className: \"left\"\n    }, 'version' in entry && entry.version > 0 && __jsx(Link, {\n      className: \"item\",\n      to: `${getBaseUrl(this.props.pathname)}/diff?one=${entry.version - 1}&two=${entry.version}`\n    }, __jsx(Icon, {\n      name: \"copy\"\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"View changes\",\n      defaultMessage: \"View changes\"\n    })), 'version' in entry && __jsx(Link, {\n      className: \"item\",\n      to: `${getBaseUrl(this.props.pathname)}?version=${entry.version}`\n    }, __jsx(Icon, {\n      name: \"eye\"\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"View this revision\",\n      defaultMessage: \"View this revision\"\n    })), 'version' in entry && __jsx(Dropdown.Item, {\n      value: entry.version,\n      onClick: this.onRevert\n    }, __jsx(Icon, {\n      name: \"undo\"\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"Revert to this revision\",\n      defaultMessage: \"Revert to this revision\"\n    })))))))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar')\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        to: `${getBaseUrl(this.props.pathname)}`,\n        className: \"item\"\n      }, __jsx(IconNext, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back)\n      }))\n    })));\n  }\n\n}\n\nexport default compose(injectIntl, asyncConnect([{\n  key: 'actions',\n  // Dispatch async/await to make the operation syncronous, otherwise it returns\n  // before the promise is resolved\n  promise: async ({\n    location,\n    store: {\n      dispatch\n    }\n  }) => await dispatch(listActions(getBaseUrl(location.pathname)))\n}]), connect((state, props) => {\n  var _state$content$data;\n\n  return {\n    objectActions: state.actions.actions.object,\n    token: state.userSession.token,\n    entries: state.history.entries,\n    pathname: props.location.pathname,\n    title: (_state$content$data = state.content.data) === null || _state$content$data === void 0 ? void 0 : _state$content$data.title,\n    revertRequest: state.history.revert\n  };\n}, {\n  getHistory,\n  revertHistory\n}))(History);","map":{"version":3,"names":["React","Component","Helmet","Link","connect","compose","Container","Dropdown","Icon","Segment","Table","Portal","FormattedMessage","defineMessages","injectIntl","asyncConnect","FormattedDate","IconNext","Toolbar","Forbidden","Unauthorized","getHistory","revertHistory","listActions","getBaseUrl","backSVG","messages","back","history","History","constructor","props","onRevert","bind","state","isClient","componentDidMount","pathname","setState","UNSAFE_componentWillReceiveProps","nextProps","revertRequest","loading","loaded","event","value","render","entries","title","length","state_title","x","prev_state_title","historyAction","objectActions","id","token","staticContext","intl","formatMessage","entry","time","version","transition_title","type","action","actor","fullname","comments","document","getElementById","key","promise","location","store","dispatch","actions","object","userSession","content","data","revert"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/History/History.jsx"],"sourcesContent":["/**\n * History component.\n * @module components/manage/History/History\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Container, Dropdown, Icon, Segment, Table } from 'semantic-ui-react';\nimport { concat, map, reverse, find } from 'lodash';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\n\nimport {\n  FormattedDate,\n  Icon as IconNext,\n  Toolbar,\n  Forbidden,\n  Unauthorized,\n} from '@plone/volto/components';\nimport { getHistory, revertHistory, listActions } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  history: {\n    id: 'History',\n    defaultMessage: 'History',\n  },\n});\n\n/**\n * History class.\n * @class History\n * @extends Component\n */\nclass History extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getHistory: PropTypes.func.isRequired,\n    revertHistory: PropTypes.func.isRequired,\n    revertRequest: PropTypes.shape({\n      loaded: PropTypes.bool,\n      loading: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        transition_title: PropTypes.string,\n        type: PropTypes.string,\n        action: PropTypes.string,\n        state_title: PropTypes.string,\n        time: PropTypes.string,\n        comments: PropTypes.string,\n        actor: PropTypes.shape({ fullname: PropTypes.string }),\n      }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Workflow\n   */\n  constructor(props) {\n    super(props);\n    this.onRevert = this.onRevert.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.revertRequest.loading && nextProps.revertRequest.loaded) {\n      this.props.getHistory(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * On revert\n   * @method onRevert\n   * @param {object} event Event object\n   * @param {number} value Value\n   * @returns {undefined}\n   */\n  onRevert(event, { value }) {\n    this.props.revertHistory(getBaseUrl(this.props.pathname), value);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const entries = reverse(concat(this.props.entries));\n    let title = entries.length > 0 ? entries[0].state_title : '';\n    for (let x = 1; x < entries.length; x += 1) {\n      entries[x].prev_state_title = title;\n      title = entries[x].state_title || title;\n    }\n    reverse(entries);\n    const historyAction = find(this.props.objectActions, {\n      id: 'history',\n    });\n    return !historyAction ? (\n      <>\n        {this.props.token ? (\n          <Forbidden\n            pathname={this.props.pathname}\n            staticContext={this.props.staticContext}\n          />\n        ) : (\n          <Unauthorized\n            pathname={this.props.pathname}\n            staticContext={this.props.staticContext}\n          />\n        )}\n      </>\n    ) : (\n      <Container id=\"page-history\">\n        <Helmet title={this.props.intl.formatMessage(messages.history)} />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"History of {title}\"\n              defaultMessage=\"History of {title}\"\n              values={{\n                title: <q>{this.props.title}</q>,\n              }}\n            />\n          </Segment>\n          <Segment secondary>\n            <FormattedMessage\n              id=\"You can view the history of your item below.\"\n              defaultMessage=\"You can view the history of your item below.\"\n            />\n          </Segment>\n          <Table selectable compact singleLine attached>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={1}>\n                  <FormattedMessage\n                    id=\"History Version Number\"\n                    defaultMessage=\"#\"\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage id=\"What\" defaultMessage=\"What\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage id=\"Who\" defaultMessage=\"Who\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage id=\"When\" defaultMessage=\"When\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage\n                    id=\"Change Note\"\n                    defaultMessage=\"Change Note\"\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell />\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {map(entries, (entry) => (\n                <Table.Row key={entry.time}>\n                  <Table.Cell>\n                    {('version' in entry && entry.version > 0 && (\n                      <Link\n                        className=\"item\"\n                        to={`${getBaseUrl(this.props.pathname)}/diff?one=${\n                          entry.version - 1\n                        }&two=${entry.version}`}\n                      >\n                        {entry.version}\n                      </Link>\n                    )) || <span>{entry.version}</span>}\n                  </Table.Cell>\n                  <Table.Cell>\n                    {('version' in entry && entry.version > 0 && (\n                      <Link\n                        className=\"item\"\n                        to={`${getBaseUrl(this.props.pathname)}/diff?one=${\n                          entry.version - 1\n                        }&two=${entry.version}`}\n                      >\n                        {entry.transition_title}\n                      </Link>\n                    )) || (\n                      <span>\n                        {entry.transition_title}\n                        {entry.type === 'workflow' &&\n                          ` (${\n                            entry.action ? `${entry.prev_state_title} â†’ ` : ''\n                          }${entry.state_title})`}\n                      </span>\n                    )}\n                  </Table.Cell>\n                  <Table.Cell>{entry.actor.fullname}</Table.Cell>\n                  <Table.Cell>\n                    <FormattedDate date={entry.time} />\n                  </Table.Cell>\n                  <Table.Cell>{entry.comments}</Table.Cell>\n                  <Table.Cell>\n                    {entry.type === 'versioning' && (\n                      <Dropdown icon=\"ellipsis horizontal\">\n                        <Dropdown.Menu className=\"left\">\n                          {'version' in entry && entry.version > 0 && (\n                            <Link\n                              className=\"item\"\n                              to={`${getBaseUrl(\n                                this.props.pathname,\n                              )}/diff?one=${entry.version - 1}&two=${\n                                entry.version\n                              }`}\n                            >\n                              <Icon name=\"copy\" />{' '}\n                              <FormattedMessage\n                                id=\"View changes\"\n                                defaultMessage=\"View changes\"\n                              />\n                            </Link>\n                          )}\n                          {'version' in entry && (\n                            <Link\n                              className=\"item\"\n                              to={`${getBaseUrl(this.props.pathname)}?version=${\n                                entry.version\n                              }`}\n                            >\n                              <Icon name=\"eye\" />{' '}\n                              <FormattedMessage\n                                id=\"View this revision\"\n                                defaultMessage=\"View this revision\"\n                              />\n                            </Link>\n                          )}\n                          {'version' in entry && (\n                            <Dropdown.Item\n                              value={entry.version}\n                              onClick={this.onRevert}\n                            >\n                              <Icon name=\"undo\" />{' '}\n                              <FormattedMessage\n                                id=\"Revert to this revision\"\n                                defaultMessage=\"Revert to this revision\"\n                              />\n                            </Dropdown.Item>\n                          )}\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    )}\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </Segment.Group>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}`}\n                  className=\"item\"\n                >\n                  <IconNext\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  asyncConnect([\n    {\n      key: 'actions',\n      // Dispatch async/await to make the operation syncronous, otherwise it returns\n      // before the promise is resolved\n      promise: async ({ location, store: { dispatch } }) =>\n        await dispatch(listActions(getBaseUrl(location.pathname))),\n    },\n  ]),\n  connect(\n    (state, props) => ({\n      objectActions: state.actions.actions.object,\n      token: state.userSession.token,\n      entries: state.history.entries,\n      pathname: props.location.pathname,\n      title: state.content.data?.title,\n      revertRequest: state.history.revert,\n    }),\n    { getHistory, revertHistory },\n  ),\n)(History);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"History","defaultMessage":"History"},{"id":"History of {title}","defaultMessage":"History of {title}"},{"id":"You can view the history of your item below.","defaultMessage":"You can view the history of your item below."},{"id":"History Version Number","defaultMessage":"#"},{"id":"What","defaultMessage":"What"},{"id":"Who","defaultMessage":"Who"},{"id":"When","defaultMessage":"When"},{"id":"Change Note","defaultMessage":"Change Note"},{"id":"View changes","defaultMessage":"View changes"},{"id":"View this revision","defaultMessage":"View this revision"},{"id":"Revert to this revision","defaultMessage":"Revert to this revision"}]}},"sourceType":"module"}