{"ast":null,"code":"var _jsxFileName = \"/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-blocks-grid/src/components/Grid/View.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { BlockRenderer } from '../../components';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst ViewGrid = props => {\n  var _data$columns, _data$columns2, _data$columns3, _data$columns4;\n\n  const {\n    data,\n    path,\n    className\n  } = props;\n  const blocksConfig = config.blocks.blocksConfig.__grid.blocksConfig || props.blocksConfig;\n  return __jsx(\"div\", {\n    className: cx('block __grid', {\n      [data['@type']]: data['@type'] !== '__grid',\n      centered: data.align === 'center' || data.align === undefined,\n      'space-between': data.align === 'space-between',\n      'centered-text': data.centeredText,\n      one: (data === null || data === void 0 ? void 0 : (_data$columns = data.columns) === null || _data$columns === void 0 ? void 0 : _data$columns.length) === 1,\n      two: (data === null || data === void 0 ? void 0 : (_data$columns2 = data.columns) === null || _data$columns2 === void 0 ? void 0 : _data$columns2.length) === 2,\n      three: (data === null || data === void 0 ? void 0 : (_data$columns3 = data.columns) === null || _data$columns3 === void 0 ? void 0 : _data$columns3.length) === 3,\n      four: (data === null || data === void 0 ? void 0 : (_data$columns4 = data.columns) === null || _data$columns4 === void 0 ? void 0 : _data$columns4.length) === 4\n    }, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, data.headline && __jsx(\"h2\", {\n    className: \"headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, data.headline), __jsx(Grid, {\n    stackable: true,\n    stretched: true,\n    columns: data.columns.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, data.columns.map(column => __jsx(Grid.Column, {\n    key: column.id,\n    className: `grid-block-${column['@type']}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(BlockRenderer, {\n    block: column.id,\n    type: column['@type'],\n    data: column,\n    path: path,\n    blocksConfig: blocksConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })))));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\nViewGrid.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default withBlockExtensions(ViewGrid);","map":{"version":3,"names":["React","PropTypes","Grid","cx","BlockRenderer","withBlockExtensions","config","ViewGrid","props","data","path","className","blocksConfig","blocks","__grid","centered","align","undefined","centeredText","one","columns","length","two","three","four","headline","map","column","id","propTypes","objectOf","any","isRequired"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-blocks-grid/src/components/Grid/View.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { BlockRenderer } from '../../components';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst ViewGrid = (props) => {\n  const { data, path, className } = props;\n  const blocksConfig =\n    config.blocks.blocksConfig.__grid.blocksConfig || props.blocksConfig;\n\n  return (\n    <div\n      className={cx(\n        'block __grid',\n        {\n          [data['@type']]: data['@type'] !== '__grid',\n          centered: data.align === 'center' || data.align === undefined,\n          'space-between': data.align === 'space-between',\n          'centered-text': data.centeredText,\n          one: data?.columns?.length === 1,\n          two: data?.columns?.length === 2,\n          three: data?.columns?.length === 3,\n          four: data?.columns?.length === 4,\n        },\n        className,\n      )}\n    >\n      {data.headline && <h2 className=\"headline\">{data.headline}</h2>}\n\n      <Grid stackable stretched columns={data.columns.length}>\n        {data.columns.map((column) => (\n          <Grid.Column\n            key={column.id}\n            className={`grid-block-${column['@type']}`}\n          >\n            <BlockRenderer\n              block={column.id}\n              type={column['@type']}\n              data={column}\n              path={path}\n              blocksConfig={blocksConfig}\n            />\n          </Grid.Column>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nViewGrid.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default withBlockExtensions(ViewGrid);\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM;IAAEC,IAAF;IAAQC,IAAR;IAAcC;EAAd,IAA4BH,KAAlC;EACA,MAAMI,YAAY,GAChBN,MAAM,CAACO,MAAP,CAAcD,YAAd,CAA2BE,MAA3B,CAAkCF,YAAlC,IAAkDJ,KAAK,CAACI,YAD1D;EAGA,OACE;IACE,SAAS,EAAET,EAAE,CACX,cADW,EAEX;MACE,CAACM,IAAI,CAAC,OAAD,CAAL,GAAiBA,IAAI,CAAC,OAAD,CAAJ,KAAkB,QADrC;MAEEM,QAAQ,EAAEN,IAAI,CAACO,KAAL,KAAe,QAAf,IAA2BP,IAAI,CAACO,KAAL,KAAeC,SAFtD;MAGE,iBAAiBR,IAAI,CAACO,KAAL,KAAe,eAHlC;MAIE,iBAAiBP,IAAI,CAACS,YAJxB;MAKEC,GAAG,EAAE,CAAAV,IAAI,SAAJ,IAAAA,IAAI,WAAJ,6BAAAA,IAAI,CAAEW,OAAN,gEAAeC,MAAf,MAA0B,CALjC;MAMEC,GAAG,EAAE,CAAAb,IAAI,SAAJ,IAAAA,IAAI,WAAJ,8BAAAA,IAAI,CAAEW,OAAN,kEAAeC,MAAf,MAA0B,CANjC;MAOEE,KAAK,EAAE,CAAAd,IAAI,SAAJ,IAAAA,IAAI,WAAJ,8BAAAA,IAAI,CAAEW,OAAN,kEAAeC,MAAf,MAA0B,CAPnC;MAQEG,IAAI,EAAE,CAAAf,IAAI,SAAJ,IAAAA,IAAI,WAAJ,8BAAAA,IAAI,CAAEW,OAAN,kEAAeC,MAAf,MAA0B;IARlC,CAFW,EAYXV,SAZW,CADf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAgBGF,IAAI,CAACgB,QAAL,IAAiB;IAAI,SAAS,EAAC,UAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA0BhB,IAAI,CAACgB,QAA/B,CAhBpB,EAkBE,MAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,SAAS,MAAzB;IAA0B,OAAO,EAAEhB,IAAI,CAACW,OAAL,CAAaC,MAAhD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGZ,IAAI,CAACW,OAAL,CAAaM,GAAb,CAAkBC,MAAD,IAChB,MAAC,IAAD,CAAM,MAAN;IACE,GAAG,EAAEA,MAAM,CAACC,EADd;IAEE,SAAS,EAAG,cAAaD,MAAM,CAAC,OAAD,CAAU,EAF3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAIE,MAAC,aAAD;IACE,KAAK,EAAEA,MAAM,CAACC,EADhB;IAEE,IAAI,EAAED,MAAM,CAAC,OAAD,CAFd;IAGE,IAAI,EAAEA,MAHR;IAIE,IAAI,EAAEjB,IAJR;IAKE,YAAY,EAAEE,YALhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJF,CADD,CADH,CAlBF,CADF;AAqCD,CA1CD;AA4CA;AACA;AACA;AACA;AACA;;;AACAL,QAAQ,CAACsB,SAAT,GAAqB;EACnBpB,IAAI,EAAER,SAAS,CAAC6B,QAAV,CAAmB7B,SAAS,CAAC8B,GAA7B,EAAkCC;AADrB,CAArB;AAIA,eAAe3B,mBAAmB,CAACE,QAAD,CAAlC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}