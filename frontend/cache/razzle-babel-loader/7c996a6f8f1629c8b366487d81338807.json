{"ast":null,"code":"var __jsx = React.createElement;\n\n/**\n * AuthProviders container.\n * @module components/AuthProviders/AuthProviders\n */\nimport React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport AuthProvider from '../AuthProvider/AuthProvider';\nimport './AuthProviders.css';\n/**\n * AuthProviders function.\n * @function AuthProviders\n * @returns {JSX.Element} Markup of the a list of AuthProviders.\n */\n\nfunction AuthProviders(_ref) {\n  let {\n    providers,\n    action,\n    onSelectProvider\n  } = _ref;\n  return __jsx(Container, {\n    id: \"authenticationProviders\"\n  }, providers.map(function (provider, i) {\n    return provider && __jsx(AuthProvider, {\n      key: i,\n      provider: provider,\n      action: action,\n      onSelectProvider: onSelectProvider\n    });\n  }));\n}\n\nAuthProviders.defaultProps = {\n  action: 'login'\n};\nexport default AuthProviders;","map":{"version":3,"names":["React","Container","AuthProvider","AuthProviders","providers","action","onSelectProvider","map","provider","i","defaultProps"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone-collective/volto-authomatic/src/components/AuthProviders/AuthProviders.jsx"],"sourcesContent":["/**\n * AuthProviders container.\n * @module components/AuthProviders/AuthProviders\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'semantic-ui-react';\nimport AuthProvider from '../AuthProvider/AuthProvider';\n\nimport './AuthProviders.css';\n\n/**\n * AuthProviders function.\n * @function AuthProviders\n * @returns {JSX.Element} Markup of the a list of AuthProviders.\n */\nfunction AuthProviders({ providers, action, onSelectProvider }) {\n  return (\n    <Container id=\"authenticationProviders\">\n      {providers.map(function (provider, i) {\n        return (\n          provider && (\n            <AuthProvider\n              key={i}\n              provider={provider}\n              action={action}\n              onSelectProvider={onSelectProvider}\n            />\n          )\n        );\n      })}\n    </Container>\n  );\n}\n\nAuthProviders.propTypes = {\n  providers: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      plugin: PropTypes.string,\n    }),\n  ).isRequired,\n  action: PropTypes.string,\n  onSelectProvider: PropTypes.func.isRequired,\n};\n\nAuthProviders.defaultProps = {\n  action: 'login',\n};\n\nexport default AuthProviders;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,qBAAP;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,OAAgE;EAAA,IAAzC;IAAEC,SAAF;IAAaC,MAAb;IAAqBC;EAArB,CAAyC;EAC9D,OACE,MAAC,SAAD;IAAW,EAAE,EAAC;EAAd,GACGF,SAAS,CAACG,GAAV,CAAc,UAAUC,QAAV,EAAoBC,CAApB,EAAuB;IACpC,OACED,QAAQ,IACN,MAAC,YAAD;MACE,GAAG,EAAEC,CADP;MAEE,QAAQ,EAAED,QAFZ;MAGE,MAAM,EAAEH,MAHV;MAIE,gBAAgB,EAAEC;IAJpB,EAFJ;EAUD,CAXA,CADH,CADF;AAgBD;;AAcDH,aAAa,CAACO,YAAd,GAA6B;EAC3BL,MAAM,EAAE;AADmB,CAA7B;AAIA,eAAeF,aAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}