{"ast":null,"code":"import _extends from \"/home/valentina/Plone/plone-conference/frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-blocks-grid/src/components/Teaser/Edit.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport TeaserBody from './Body';\nimport { SidebarPortal } from '@plone/volto/components';\nimport TeaserData from './Data';\nimport { withBlockExtensions } from '@plone/volto/helpers';\n\nconst TeaserEdit = props => {\n  const {\n    data,\n    onChangeBlock,\n    block,\n    selected\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(TeaserBody, _extends({}, props, {\n    isEditMode: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  })), __jsx(SidebarPortal, {\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(TeaserData, _extends({}, props, {\n    data: data,\n    block: block,\n    onChangeBlock: onChangeBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }))));\n};\n\n_c = TeaserEdit;\nexport default _c2 = withBlockExtensions(TeaserEdit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TeaserEdit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","TeaserBody","SidebarPortal","TeaserData","withBlockExtensions","TeaserEdit","props","data","onChangeBlock","block","selected"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-blocks-grid/src/components/Teaser/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport TeaserBody from './Body';\nimport { SidebarPortal } from '@plone/volto/components';\nimport TeaserData from './Data';\nimport { withBlockExtensions } from '@plone/volto/helpers';\n\nconst TeaserEdit = (props) => {\n  const { data, onChangeBlock, block, selected } = props;\n\n  return (\n    <>\n      <TeaserBody {...props} isEditMode />\n      <SidebarPortal selected={selected}>\n        <TeaserData\n          {...props}\n          data={data}\n          block={block}\n          onChangeBlock={onChangeBlock}\n        />\n      </SidebarPortal>\n    </>\n  );\n};\n\nexport default withBlockExtensions(TeaserEdit);\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,SAASC,mBAAT,QAAoC,sBAApC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAC5B,MAAM;IAAEC,IAAF;IAAQC,aAAR;IAAuBC,KAAvB;IAA8BC;EAA9B,IAA2CJ,KAAjD;EAEA,OACE,4BACE,MAAC,UAAD,eAAgBA,KAAhB;IAAuB,UAAU,MAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF,EAEE,MAAC,aAAD;IAAe,QAAQ,EAAEI,QAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,UAAD,eACMJ,KADN;IAEE,IAAI,EAAEC,IAFR;IAGE,KAAK,EAAEE,KAHT;IAIE,aAAa,EAAED,aAJjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF,CAFF,CADF;AAaD,CAhBD;;KAAMH,U;AAkBN,qBAAeD,mBAAmB,CAACC,UAAD,CAAlC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}