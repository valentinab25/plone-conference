{"ast":null,"code":"var _jsxFileName = \"/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-slider-block/src/components/Edit.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport { v4 as uuid } from 'uuid';\nimport View from './View';\nimport { SidebarPortal } from '@plone/volto/components';\nimport Sidebar from './Sidebar';\nexport const SliderContext = /*#__PURE__*/React.createContext({\n  slideIndex: 0,\n  setSlideIndex: () => {}\n});\n\nconst SliderEdit = props => {\n  const {\n    onChangeBlock,\n    block,\n    selected\n  } = props;\n\n  const data = _objectSpread({\n    slides: [{\n      '@id': uuid()\n    }]\n  }, props.data);\n\n  if (!props.data.slides) {\n    onChangeBlock(block, data);\n  }\n\n  const [slideIndex, setSlideIndex] = React.useState(0);\n  const contextValue = React.useMemo(() => ({\n    slideIndex,\n    setSlideIndex\n  }), [slideIndex]);\n  return __jsx(SliderContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(View, _extends({}, props, {\n    isEditMode: true,\n    slideIndex: slideIndex,\n    setSlideIndex: setSlideIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })), __jsx(SidebarPortal, {\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Sidebar, _extends({}, props, {\n    data: data,\n    block: block,\n    onChangeBlock: onChangeBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default withBlockExtensions(SliderEdit);","map":{"version":3,"names":["React","withBlockExtensions","v4","uuid","View","SidebarPortal","Sidebar","SliderContext","createContext","slideIndex","setSlideIndex","SliderEdit","props","onChangeBlock","block","selected","data","slides","useState","contextValue","useMemo"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@kitconcept/volto-slider-block/src/components/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport { v4 as uuid } from 'uuid';\nimport View from './View';\nimport { SidebarPortal } from '@plone/volto/components';\nimport Sidebar from './Sidebar';\n\nexport const SliderContext = React.createContext({\n  slideIndex: 0,\n  setSlideIndex: () => {},\n});\n\nconst SliderEdit = (props) => {\n  const { onChangeBlock, block, selected } = props;\n  const data = {\n    slides: [{ '@id': uuid() }],\n    ...props.data,\n  };\n  if (!props.data.slides) {\n    onChangeBlock(block, data);\n  }\n  const [slideIndex, setSlideIndex] = React.useState(0);\n\n  const contextValue = React.useMemo(() => ({ slideIndex, setSlideIndex }), [\n    slideIndex,\n  ]);\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <View\n        {...props}\n        isEditMode\n        slideIndex={slideIndex}\n        setSlideIndex={setSlideIndex}\n      />\n      <SidebarPortal selected={selected}>\n        <Sidebar\n          {...props}\n          data={data}\n          block={block}\n          onChangeBlock={onChangeBlock}\n        />\n      </SidebarPortal>\n    </SliderContext.Provider>\n  );\n};\n\nexport default withBlockExtensions(SliderEdit);\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,aAAa,gBAAGP,KAAK,CAACQ,aAAN,CAAoB;EAC/CC,UAAU,EAAE,CADmC;EAE/CC,aAAa,EAAE,MAAM,CAAE;AAFwB,CAApB,CAAtB;;AAKP,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAC5B,MAAM;IAAEC,aAAF;IAAiBC,KAAjB;IAAwBC;EAAxB,IAAqCH,KAA3C;;EACA,MAAMI,IAAI;IACRC,MAAM,EAAE,CAAC;MAAE,OAAOd,IAAI;IAAb,CAAD;EADA,GAELS,KAAK,CAACI,IAFD,CAAV;;EAIA,IAAI,CAACJ,KAAK,CAACI,IAAN,CAAWC,MAAhB,EAAwB;IACtBJ,aAAa,CAACC,KAAD,EAAQE,IAAR,CAAb;EACD;;EACD,MAAM,CAACP,UAAD,EAAaC,aAAb,IAA8BV,KAAK,CAACkB,QAAN,CAAe,CAAf,CAApC;EAEA,MAAMC,YAAY,GAAGnB,KAAK,CAACoB,OAAN,CAAc,OAAO;IAAEX,UAAF;IAAcC;EAAd,CAAP,CAAd,EAAqD,CACxED,UADwE,CAArD,CAArB;EAIA,OACE,MAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEU,YAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAD,eACMP,KADN;IAEE,UAAU,MAFZ;IAGE,UAAU,EAAEH,UAHd;IAIE,aAAa,EAAEC,aAJjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF,EAOE,MAAC,aAAD;IAAe,QAAQ,EAAEK,QAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,OAAD,eACMH,KADN;IAEE,IAAI,EAAEI,IAFR;IAGE,KAAK,EAAEF,KAHT;IAIE,aAAa,EAAED,aAJjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF,CAPF,CADF;AAkBD,CAjCD;;AAmCA,eAAeZ,mBAAmB,CAACU,UAAD,CAAlC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}