{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Portal } from 'react-portal';\nimport { CSSTransition } from 'react-transition-group';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nconst DEFAULT_TIMEOUT = 500;\n\nconst SidebarPopup = props => {\n  var _document;\n\n  const {\n    children,\n    open,\n    onClose,\n    overlay\n  } = props;\n  const asideElement = /*#__PURE__*/React.createRef();\n\n  const handleClickOutside = e => {\n    if (asideElement && doesNodeContainClick(asideElement.current, e)) return;\n    onClose();\n  };\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, false);\n    };\n  });\n  return __jsx(React.Fragment, null, overlay && __jsx(CSSTransition, {\n    in: open,\n    timeout: DEFAULT_TIMEOUT,\n    classNames: \"overlay-container\",\n    unmountOnExit: true\n  }, __jsx(Portal, {\n    node: (_document = document) === null || _document === void 0 ? void 0 : _document.body\n  }, __jsx(\"div\", {\n    className: \"overlay-container\"\n  }))), __jsx(CSSTransition, {\n    in: open,\n    timeout: DEFAULT_TIMEOUT,\n    classNames: \"sidebar-container\",\n    unmountOnExit: true\n  }, __jsx(Portal, null, __jsx(\"aside\", {\n    role: \"presentation\",\n    onClick: e => {\n      e.stopPropagation();\n    },\n    onKeyDown: e => {\n      e.stopPropagation();\n    },\n    ref: asideElement,\n    key: \"sidebarpopup\",\n    className: \"sidebar-container\",\n    style: {\n      overflowY: 'auto'\n    }\n  }, children))));\n};\n\nSidebarPopup.defaultProps = {\n  open: false,\n  onClose: () => {},\n  overlay: false\n};\nexport default SidebarPopup;","map":{"version":3,"names":["React","Portal","CSSTransition","doesNodeContainClick","DEFAULT_TIMEOUT","SidebarPopup","props","children","open","onClose","overlay","asideElement","createRef","handleClickOutside","e","current","useEffect","document","addEventListener","removeEventListener","body","stopPropagation","overflowY","defaultProps"],"sources":["/home/valentina/Plone/plone-conference/frontend/node_modules/@plone/volto/src/components/manage/Sidebar/SidebarPopup.jsx"],"sourcesContent":["import React from 'react';\nimport { Portal } from 'react-portal';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\n\nconst DEFAULT_TIMEOUT = 500;\n\nconst SidebarPopup = (props) => {\n  const { children, open, onClose, overlay } = props;\n\n  const asideElement = React.createRef();\n\n  const handleClickOutside = (e) => {\n    if (asideElement && doesNodeContainClick(asideElement.current, e)) return;\n    onClose();\n  };\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, false);\n    };\n  });\n\n  return (\n    <>\n      {overlay && (\n        <CSSTransition\n          in={open}\n          timeout={DEFAULT_TIMEOUT}\n          classNames=\"overlay-container\"\n          unmountOnExit\n        >\n          <Portal node={document?.body}>\n            <div className=\"overlay-container\"></div>\n          </Portal>\n        </CSSTransition>\n      )}\n      <CSSTransition\n        in={open}\n        timeout={DEFAULT_TIMEOUT}\n        classNames=\"sidebar-container\"\n        unmountOnExit\n      >\n        <Portal>\n          <aside\n            role=\"presentation\"\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n            onKeyDown={(e) => {\n              e.stopPropagation();\n            }}\n            ref={asideElement}\n            key=\"sidebarpopup\"\n            className=\"sidebar-container\"\n            style={{ overflowY: 'auto' }}\n          >\n            {children}\n          </aside>\n        </Portal>\n      </CSSTransition>\n    </>\n  );\n};\n\nSidebarPopup.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  overlay: PropTypes.bool,\n};\n\nSidebarPopup.defaultProps = {\n  open: false,\n  onClose: () => {},\n  overlay: false,\n};\n\nexport default SidebarPopup;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,SAASC,oBAAT,QAAqC,qCAArC;AAEA,MAAMC,eAAe,GAAG,GAAxB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM;IAAEC,QAAF;IAAYC,IAAZ;IAAkBC,OAAlB;IAA2BC;EAA3B,IAAuCJ,KAA7C;EAEA,MAAMK,YAAY,gBAAGX,KAAK,CAACY,SAAN,EAArB;;EAEA,MAAMC,kBAAkB,GAAIC,CAAD,IAAO;IAChC,IAAIH,YAAY,IAAIR,oBAAoB,CAACQ,YAAY,CAACI,OAAd,EAAuBD,CAAvB,CAAxC,EAAmE;IACnEL,OAAO;EACR,CAHD;;EAKAT,KAAK,CAACgB,SAAN,CAAgB,MAAM;IACpBC,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCL,kBAAvC,EAA2D,KAA3D;IACA,OAAO,MAAM;MACXI,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CN,kBAA1C,EAA8D,KAA9D;IACD,CAFD;EAGD,CALD;EAOA,OACE,4BACGH,OAAO,IACN,MAAC,aAAD;IACE,EAAE,EAAEF,IADN;IAEE,OAAO,EAAEJ,eAFX;IAGE,UAAU,EAAC,mBAHb;IAIE,aAAa;EAJf,GAME,MAAC,MAAD;IAAQ,IAAI,eAAEa,QAAF,8CAAE,UAAUG;EAAxB,GACE;IAAK,SAAS,EAAC;EAAf,EADF,CANF,CAFJ,EAaE,MAAC,aAAD;IACE,EAAE,EAAEZ,IADN;IAEE,OAAO,EAAEJ,eAFX;IAGE,UAAU,EAAC,mBAHb;IAIE,aAAa;EAJf,GAME,MAAC,MAAD,QACE;IACE,IAAI,EAAC,cADP;IAEE,OAAO,EAAGU,CAAD,IAAO;MACdA,CAAC,CAACO,eAAF;IACD,CAJH;IAKE,SAAS,EAAGP,CAAD,IAAO;MAChBA,CAAC,CAACO,eAAF;IACD,CAPH;IAQE,GAAG,EAAEV,YARP;IASE,GAAG,EAAC,cATN;IAUE,SAAS,EAAC,mBAVZ;IAWE,KAAK,EAAE;MAAEW,SAAS,EAAE;IAAb;EAXT,GAaGf,QAbH,CADF,CANF,CAbF,CADF;AAwCD,CAzDD;;AAiEAF,YAAY,CAACkB,YAAb,GAA4B;EAC1Bf,IAAI,EAAE,KADoB;EAE1BC,OAAO,EAAE,MAAM,CAAE,CAFS;EAG1BC,OAAO,EAAE;AAHiB,CAA5B;AAMA,eAAeL,YAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}